{"version":3,"sources":["constants/index.js","util/APIUtils.js","util/Colors.js","util/Helpers.js","poll/Post.js","common/LoadingIndicator.js","poll/PostList.js","poll/NewPost.js","user/login/Login.js","user/signup/Signup.js","common/NotFound.js","common/ServerError.js","user/profile/Profile.js","poll.svg","common/AppHeader.js","common/PrivateRoute.js","group/NewGroup.js","common/SiderMenu.js","group/EditGroup.js","user/ChangePassword.js","user/Verification.js","app/App.js","registerServiceWorker.js","index.js"],"names":["API_BASE_URL","process","REACT_APP_API_BASE_URL","ACCESS_TOKEN","POLL_LIST_SIZE","NAME_MAX_LENGTH","USER_MAX_LENGTH","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","request2","getAllPolls","page","size","method","getAllPollsSearch","search","getOnePolls","id","getAllPollsOfGroup","code","getAllGroups","getAllUserVotedChoice","choice","getAllUserNoVoted","post","getAllComment","postId","deleteImage","getListUser","user","type","getUserCreatedPolls","username","getUserVotedPolls","getUserSavedPolls","getUserNotification","colors","getAvatarColor","name","substr","hash","i","length","charCodeAt","index","Math","abs","formatDateTime","dateTimeString","date","Date","monthIndex","getMonth","year","getFullYear","getDate","getHours","getMinutes","TextArea","FormItem","Item","RadioGroup","Group","config","action","authorization","getTime","time","timeNew","difference_ms","seconds","floor","minutes","hours","days","Editor","onChange","onSubmit","submitting","value","textButton","rows","style","marginBottom","htmlType","float","loading","onClick","ManagerPost","props","isOwner","block","onUpdatePost","postIndex","isUserStorage","deleteFollowPost","onFollowPost","danger","onDeletePost","onReportPost","InfomationGroups","className","dataSource","list","renderItem","item","Meta","title","to","color","description","admin","createDate","Infomation","gutter","span","poll","isUnseenUserForVote","checkedChildren","unCheckedChildren","defaultChecked","disabled","isAddChoice","isUnseenUserForAddChoice","isCanFix","maxVotePerTimeLoad","maxVotePerChoice","timeLoad","maxVoteOfPoll","marginRight","showResultCase","isExpired","event","onEndPoll","pollIndex","PollItem","placement","content","trigger","shape","icon","MoreOutlined","question","photo","src","handleVoteChange","currentVote","pollChoices","choiceCanAdd","validateStatus","choiceNew","help","errorMsg","choiceAdd","selectedChoice","handleVoteSubmit","totalVotes","getTimeRemaining","currentUser","createdBy","addChoiceInput","PlusOutlined","window","screen","width","addAChoice","CompletedOrVotedPollChoice","percent","round","percentVote","mouseEnterDelay","maxWidth","minWidth","choicePrime","wordBreak","review","text","fontWeight","handleClickShowListVoted","isWinner","CompletedOrVotedCanVotePollChoice","count","userVoteCount","offset","key","isSelected","isDelete","arrowPointAtCenter","DeleteOutlined","handleClickDelChoice","canFix","MinusOutlined","handleClick","Post","calculatePercentage","polls","voteCount","choiceIndex","choices","getWinningChoice","reduce","prevChoice","currentChoice","Infinity","expirationDateTime","choiceText","state","slice","target","validateChoice","setState","onReviewChange","onImageChoiceChange","info","file","status","fileList","notification","success","message","error","removeAddChoice","placeholder","defaultValue","onPressEnter","listType","maxCount","UploadOutlined","handleChangeComment","handleSubmitComment","onComment","onReply","handleChangeReply","handleSubmitReply","onClickUpdateName","isUpdateName","onChangeName","valueName","updateName","Array","fill","this","comments","submittingComment","valueComment","showReply","commentViews","loadMore","showComment","isLastComment","onLoadMoreComment","pageComment","push","itemLayout","display","actions","onDeleteComment","author","avatar","backgroundColor","toUpperCase","datetime","replys","rowKey","record","reply","replyIndex","onDeleteReply","submittingReply","valueReply","postView","forEach","totalUserVotes","winningChoice","expired","handleShowListVoted","handleDeleteVoteSubmit","handleDeleteChoiceSubmit","paddingLeft","isAuthenticated","creationDateTime","getTime2","publicDate","tag","match","tagView","t","uri","encodeURIComponent","replace","showCase","cursor","handleShowListNoVoted","groupResponses","onLikePost","isUserLike","HeartTwoTone","twoToneColor","HeartOutlined","totalLike","MessageOutlined","totalComment","margin","Component","LoadingIndicator","antIcon","Loading3QuartersOutlined","fontSize","spin","indicator","textAlign","marginTop","PostList","_isMounted","data","preventDefault","history","pollId","posts","addData","body","JSON","stringify","addChoice","catch","handleLogout","concat","comment","last","splice","commentId","some","cm","submittingReply2","loadPostList","promise","isLoading","params","currentVotes2","currentVotes","check","console","log","totalElements","totalPages","socketPoll","choiceSocket","choiceId","commentIndex","showModalDeletePost","visiblePost","currentPostIndex","showModalReportPost","visibleReportPost","handleDeletePostSubmit","handleReportPostSubmit","reasonReport","handleLoadMore","handleLoadMoreUserVoted","loadListVoted","currentChoiceId","pageVoted","handleLoadMoreUsernoVoted","loadListNoVoted","currentPostId","pagenoVoted","handleCancel","visible","currentPollIndex","currentValue","handleCancelComment","visibleCommentDelete","currentCommentIndex","handleCancelReply","visibleReplyDelete","currentReplyIndex","handleCancelPost","handleCancelReportPost","handleCancelListVoted","visibleListVoted","votedUsers","isLoading2","last2","handleCancelListnoVoted","visibleListnoVoted","novotedUsers","isLoading3","last3","showModalListVoted","showModalNoVoted","showModal","currentTarget","showModalComment","showModalReply","deleteData","voteData","handleDeleteCommentSubmit","handleDeleteReplySubmit","replyId","onChangeReason","prevY","stompClient","bind","send","disconnect","socket","SockJS","Stomp","over","Authorization","connect","subscribe","parse","nextProps","castVote","postViews","onOk","onCancel","footer","centered","initialLoad","pageStart","hasMore","threshold","useWindow","isloading","height","lineHeight","borderRadius","boxShadow","VerticalAlignTopOutlined","withRouter","Option","getMentions","NewPoll","range","start","end","result","disabledDate","current","moment","endOf","disabledDateTime","disabledHours","disabledMinutes","disabledSeconds","indexPoll","addPoll","pollLength","isHasPollLength","removeChoice","choiceNumber","pollNumber","removePoll","onSearch","loadUserList","onSearchGroup","loadGroupList","users","filter","usersSend","userSend","groups","group","groupsSend","groupSend","validateQuestion","questionText","handleQuestionChange","pollitem","handleChoiceChange","indexChoice","choiceitem","handlePollDaysChange","handlePollHoursChange","handleTimeLoadDaysChange","handleTimeLoadHoursChange","onChangeIsUnseenUserForVote","onChangeIsUnseenUserForAddChoice","onChangeIsAddChoice","onChangeIsCanFix","onChangeIsHasPollLength","onChangeIsUnseenOwner","isUnseenOwner","onChangeIsDelay","isDelay","handleChangemaxVoteOfPoll","handleChangemaxVotePerChoice","handleChangemaxVotePerTimeLoad","handleQuestionForPostChange","handleShowResultCaseChange","handleShowCaseChange","onSelect","mentions","mention","validateUsers","onSelectGroup","validateGroups","validateStatusGroup","errorMsgGroup","validateStatusUser","errorMsgUser","onChangeUpload","onChangeUploadChoice","handleChoiceChangeReview","publicDateMoment","handleSubmit","isFormInvalid","handlePublicDateChange","dateString","pollData","map","usersUsername","format","createPoll","j","childrenUser","pollViews","choiceViews","index2","onFinish","autosize","minRows","maxRows","xs","direction","disabledTime","showTime","showNow","PollCreate","CloseOutlined","from","keys","min","PollChoice","LoginForm","values","loginRequest","login","setItem","accessToken","onLogin","loginGoogle","tokenId","rules","required","prefix","UserOutlined","autoComplete","Password","LockOutlined","clientId","buttonText","onSuccess","onFailure","Signup","validateName","validationStatus","validateEmail","email","RegExp","test","validateUsername","validatePassword","password","handleInputChange","validateUsernameAvailability","validateEmailAvailability","validationFun","inputName","inputValue","signupRequest","signup","label","hasFeedback","onBlur","usernameValue","usernameValidation","available","emailValue","emailValidation","NotFound","ServerError","TabPane","Profile","beforeUpload","a","formData","FormData","imageData","res","uploading","enter","changeName","isEdit","onEdit","validateFunc","urlImage","fileResponse","loadUserProfile","getUserProfile","notFound","serverError","rotate","CameraOutlined","position","marginLeft","zIndex","EditOutlined","formatDate","joinedAt","defaultActiveKey","animated","tabBarStyle","callBack","tab","pollCount","storageCount","Header","Search","AppHeader","loadUserNotification","handleMenuClick","onLogout","handleMenuClick2","noti","notificationCount","read","notiItem","readNoti","sourceId","handleVisibleChange","flag","menuItems","HomeOutlined","pollIcon","alt","ProfileDropdownMenu2","ProfileDropdownMenu","allowClear","paddingTop","mode","selectedKeys","location","pathname","dropdownMenu","Divider","overlay","getPopupContainer","document","getElementsByClassName","DownOutlined","notiViews","createAt","onVisibleChange","overflowCount","BellOutlined","PrivateRoute","component","authenticated","rest","render","NewGroup","validateGroup","groupCodeValue","indexOf","validateGroupCodeAvailability","groupData","createGroup","groupValidation","SiderMenu","loadListGroup","listGroups","currentGroupIndex","onDeleteGroup","groupIndex","handleDeleteGroupSubmit","groupId","handleCancelLeave","visibleLeave","onLeaveGroup","handleLeaveGroupSubmit","groupView","whiteSpace","ManagerGroup","currentUsername","groupAdminUsername","usernameAdmin","theme","ItemGroup","EditGroup","loadGroup","getGroup","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","confirm","clearFilters","padding","ref","node","searchInput","e","handleSearch","SearchOutlined","handleReset","closeDropdown","searchText","searchedColumn","filterIcon","filtered","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","currentUserId","currentUserIndex","onDeleteUser","userId","userIndex","pagination","filters","sorter","extra","handleDeleteUserSubmit","groupMem","member","editGroup","columns","compare","b","multiple","fixed","num","ChangePassword","newpassword","currentpassword","passwordData","changePasswordRequest","newPassword","currentPassword","Verification","Sider","Content","useState","setCurrentUser","setIsAuthenticated","setIsLoading","toptag","setTopTag","top","duration","useEffect","loadCurrentUser","loadTopTag","redirectTo","notificationType","removeItem","handleLogin","tagViews","maxHeight","left","exact","path","NewPost","offsetTop","RedoOutlined","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","getElementById","URL","origin","addEventListener","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d9f524e2.chunk.js","sourcesContent":["//export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'https://powerful-fjord-93250.herokuapp.com/api';\r\n export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\r\nexport const ACCESS_TOKEN = 'accessToken';\r\n\r\nexport const POLL_LIST_SIZE = 10;\r\nexport const USER_LIST_SIZE = 5;\r\nexport const MAX_CHOICES = 6;\r\nexport const POLL_QUESTION_MAX_LENGTH = 140;\r\nexport const POLL_CHOICE_MAX_LENGTH = 40;\r\n\r\nexport const NAME_MIN_LENGTH = 4;\r\nexport const NAME_MAX_LENGTH = 40;\r\n\r\nexport const USERNAME_MIN_LENGTH = 3;\r\nexport const USERNAME_MAX_LENGTH = 15;\r\n\r\nexport const EMAIL_MAX_LENGTH = 40;\r\n\r\nexport const PASSWORD_MIN_LENGTH = 6;\r\nexport const PASSWORD_MAX_LENGTH = 20;\r\n\r\nexport const GROUP_MAX_LENGTH = 2;\r\nexport const USER_MAX_LENGTH = 20;\r\n\r\nexport const GROUP_LIST_SIZE = 10;\r\n","import { API_BASE_URL, POLL_LIST_SIZE,USER_LIST_SIZE, ACCESS_TOKEN,GROUP_LIST_SIZE } from '../constants';\r\nconst request = (options) => {\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json'\r\n    })\r\n    \r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n    .then(response => \r\n        response.json().then(json => {\r\n            if(!response.ok) {\r\n                return Promise.reject(json);\r\n            }\r\n            return json;\r\n        })\r\n    );\r\n};\r\nconst request2 = (options) => {\r\n    const headers = new Headers({\r\n        'Accept': '*/*',\r\n    })\r\n    \r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n    .then(response => \r\n        response.json().then(json => {\r\n            if(!response.ok) {\r\n                return Promise.reject(json);\r\n            }\r\n            return json;\r\n        })\r\n    );\r\n};\r\nexport function getAllPolls(page, size) {\r\n    page = page || 0;\r\n    size = size || POLL_LIST_SIZE;\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/polls?page=\" + page + \"&size=\" + size,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function getAllPollsSearch(search,page, size) {\r\n    page = page || 0;\r\n    size = size || POLL_LIST_SIZE;\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/search?search=\"+search+\"&page=\" + page + \"&size=\" + size,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function getOnePolls(id) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" + id,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function updatePostName(postId,name) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" + postId,\r\n        method: 'PUT',\r\n        body:name\r\n    });\r\n}\r\nexport function reportPost(postId,text) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" + postId+\"/report\",\r\n        method: 'POST',\r\n        body:text\r\n    });\r\n}\r\nexport function getAllPollsOfGroup(code,page, size) {\r\n    page = page || 0;\r\n    size = size || POLL_LIST_SIZE;\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/groups/polls?code=\"+code+\"&page=\" + page + \"&size=\" + size,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function getAllGroups(page, size) {\r\n    page = page || 0;\r\n    size = size || GROUP_LIST_SIZE;\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/groups?page=\" + page + \"&size=\" + size,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function getAllUserVotedChoice(choice,page, size) {\r\n    page = page || 0;\r\n    size = size || USER_LIST_SIZE;\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/voted?choice=\"+choice+\"&page=\" + page + \"&size=\" + size,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function getAllUserNoVoted(post,page, size) {\r\n    page = page || 0;\r\n    size = size || USER_LIST_SIZE;\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/novoted?post=\"+post+\"&page=\" + page + \"&size=\" + size,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function getTopTag(top) {\r\n    top = top || 5;\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/toptag?top=\"+top,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function getAllComment(postId,page, size) {\r\n    page = page || 0;\r\n    size = size || USER_LIST_SIZE;\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\"+postId+\"/comment?page=\" + page + \"&size=\" + size,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function commentPost(postId,text) {\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\"+postId+\"/comment?text=\" + text,\r\n        method: 'POST'\r\n    });\r\n}\r\nexport function replyComment(postId,commentId,text) {\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\"+postId+\"/comment/\"+commentId+\"?text=\" + text,\r\n        method: 'POST'\r\n    });\r\n}\r\nexport function createPoll(pollData) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls\",\r\n        method: 'POST',\r\n        body: JSON.stringify(pollData)         \r\n    });\r\n}\r\n\r\nexport function castVote(voteData) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" + voteData.pollId + \"/votes\",\r\n        method: 'POST',\r\n        body: JSON.stringify(voteData)\r\n    });\r\n}\r\n\r\nexport function deleteVote(pollId,deleteData) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" + pollId + \"/deletevotes\",\r\n        method: 'POST',\r\n        body: JSON.stringify(deleteData)\r\n    });\r\n}\r\nexport function deleteChoice(pollId,deleteData) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" + pollId + \"/deletechoice\",\r\n        method: 'POST',\r\n        body: JSON.stringify(deleteData)\r\n    });\r\n}\r\nexport function endPoll(pollId) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" + pollId + \"/endpoll\",\r\n        method: 'PUT'\r\n    });\r\n}\r\nexport function addChoice(addData,pollId) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" + pollId + \"/addchoice\",\r\n        method: 'POST',\r\n        body: JSON.stringify(addData)\r\n    });\r\n}\r\n\r\nexport function castLike(postId) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" +postId+\"/like\",\r\n        method: 'POST'\r\n    });\r\n}\r\n\r\nexport function deletePost(postId) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" +postId,\r\n        method: 'DELETE'\r\n    });\r\n}\r\n\r\nexport function deleteComment(postId,commentId) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" +postId+\"/comment/\"+commentId,\r\n        method: 'DELETE'\r\n    });\r\n}\r\n\r\nexport function deleteReply(postId,commentId,replyId) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" +postId+\"/comment/\"+commentId+\"/reply/\"+replyId,\r\n        method: 'DELETE'\r\n    });\r\n}\r\nexport function savePost(postId) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" +postId+\"/save\",\r\n        method: 'POST'\r\n    });\r\n}\r\nexport function deleteSavePost(postId) {\r\n    return request({\r\n        url: API_BASE_URL + \"/polls/\" +postId+\"/save\",\r\n        method: 'DELETE'\r\n    });\r\n}\r\n\r\nexport function login(loginRequest) {\r\n    return request({\r\n        url: API_BASE_URL + \"/auth/signin\",\r\n        method: 'POST',\r\n        body: JSON.stringify(loginRequest)\r\n    });\r\n}\r\nexport function logingg(loginRequest) {\r\n    return request({\r\n        url: API_BASE_URL + \"/auth/signingoogle\",\r\n        method: 'POST',\r\n        body: loginRequest\r\n        // body: JSON.stringify(loginRequest)\r\n    });\r\n}\r\nexport function signup(signupRequest) {\r\n    return request({\r\n        url: API_BASE_URL + \"/auth/signup\",\r\n        method: 'POST',\r\n        body: JSON.stringify(signupRequest)\r\n    });\r\n}\r\n\r\nexport function createGroup(groupData) {\r\n    return request({\r\n        url: API_BASE_URL + \"/groups\",\r\n        method: 'POST',\r\n        body: JSON.stringify(groupData)\r\n    });\r\n}\r\nexport function createPollPhoto(imageData) {\r\n        return request2({\r\n            url: API_BASE_URL + \"/polls\",\r\n            method: 'POST',\r\n            body: imageData\r\n        });\r\n    }\r\nexport function changeAvatar(imageData) {\r\n    return request2({\r\n        url: API_BASE_URL + \"/file/useravatar\",\r\n        method: 'POST',\r\n        body: imageData\r\n    });\r\n}\r\nexport function uploadImage(imageData) {\r\n    return request2({\r\n        url: API_BASE_URL + \"/file/upload\",\r\n        method: 'POST',\r\n        body: imageData\r\n    });\r\n}\r\nexport function deleteImage(id) {\r\n    return request2({\r\n        url: API_BASE_URL + \"/file/upload?id=\"+id,\r\n        method: 'DELETE'\r\n    });\r\n}\r\nexport function getImage(filename) {\r\n    return request({\r\n        url: API_BASE_URL + \"/file/getImage/\" + filename,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function checkUsernameAvailability(username) {\r\n    return request({\r\n        url: API_BASE_URL + \"/user/checkUsernameAvailability?username=\" + username,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function checkEmailAvailability(email) {\r\n    return request({\r\n        url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function checkGroupCodeAvailability(code) {\r\n    return request({\r\n        url: API_BASE_URL + \"/groups/checkGroupCodeAvailability?code=\" + code,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/user/me\",\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function getListUser(user,type) {\r\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/user/find?\"+type+\"=\"+user,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function getListGroup(name) {\r\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/groups/find?name=\"+name,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function getGroup(code) {\r\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/groups/edit?code=\"+code,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function getListUserForAddGroup(username,code) {\r\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/groups/findadd?username=\"+username+\"&code=\"+code,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function editGroup(groupData) {\r\n    return request({\r\n        url: API_BASE_URL + \"/groups/edit\",\r\n        method: 'POST',\r\n        body: JSON.stringify(groupData)\r\n    });\r\n}\r\nexport function deleteUserGroup(groupId,userId) {\r\n    return request({\r\n        url: API_BASE_URL + \"/groups/\"+groupId+\"/user?user=\"+userId,\r\n        method: 'DELETE'\r\n    });\r\n}\r\nexport function leaveGroup(groupId) {\r\n    return request({\r\n        url: API_BASE_URL + \"/groups/\"+groupId+\"/leave\",\r\n        method: 'DELETE',\r\n    });\r\n}\r\nexport function deleteGroup(groupId) {\r\n    return request({\r\n        url: API_BASE_URL + \"/groups/\"+groupId,\r\n        method: 'DELETE',\r\n    });\r\n}\r\nexport function getUserProfile(username) {\r\n    return request({\r\n        url: API_BASE_URL + \"/users/\" + username,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function changePassword(passwordData) {\r\n    return request({\r\n        url: API_BASE_URL + \"/user/changepassword\",\r\n        method: 'PUT',\r\n        body: JSON.stringify(passwordData)\r\n    });\r\n}\r\nexport function changeName(name) {\r\n    return request({\r\n        url: API_BASE_URL + \"/user/me?name=\"+name,\r\n        method: 'PUT'\r\n    });\r\n}\r\n\r\nexport function getUserCreatedPolls(username, page, size) {\r\n    page = page || 0;\r\n    size = size || POLL_LIST_SIZE;\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/users/\" + username + \"/polls?page=\" + page + \"&size=\" + size,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function getUserVotedPolls(username, page, size) {\r\n    page = page || 0;\r\n    size = size || POLL_LIST_SIZE;\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/users/\" + username + \"/votes?page=\" + page + \"&size=\" + size,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function getUserSavedPolls(page, size) {\r\n    page = page || 0;\r\n    size = size || POLL_LIST_SIZE;\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/users/savepost?page=\" + page + \"&size=\" + size,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function getUserNotification(page, size) {\r\n    page = page || 0;\r\n    size = size || POLL_LIST_SIZE;\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/users/notification?page=\" + page + \"&size=\" + size,\r\n        method: 'GET'\r\n    });\r\n}\r\nexport function readNotification(id) {\r\n    return request({\r\n        url: API_BASE_URL + \"/users/notification?id=\" + id,\r\n        method: 'PUT'\r\n    });\r\n}\r\nexport function confirmMail(code) {\r\n    return request({\r\n        url: API_BASE_URL + \"/auth/active?token=\" + code,\r\n        method: 'GET'\r\n    });\r\n}","const colors = [\r\n    '#F44336', '#e91e63', '#9c27b0', '#673ab7',\r\n    '#ff9800', '#ff5722', '#795548', '#607d8b',\r\n    '#3f51b5', '#2196F3', '#00bcd4', '#009688',\r\n    '#2196F3', '#32c787', '#00BCD4', '#ff5652',\r\n    '#ffc107', '#ff85af', '#FF9800', '#39bbb0',\r\n    '#4CAF50', '#ffeb3b', '#ffc107',\r\n];\r\n\r\nexport function getAvatarColor(name) {\r\n    name = name.substr(0, 6);\r\n\r\n    var hash = 0;\r\n    for (var i = 0; i < name.length; i++) {\r\n        hash = 31 * hash + name.charCodeAt(i);\r\n    }\r\n    var index = Math.abs(hash % colors.length);\r\n    return colors[index];\r\n}","export function formatDate(dateString) {\r\n    const date = new Date(dateString);\r\n\r\n    const monthNames = [\r\n      \"January\", \"February\", \"March\",\r\n      \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\",\r\n      \"November\", \"December\"\r\n    ];\r\n  \r\n    const monthIndex = date.getMonth();\r\n    const year = date.getFullYear();\r\n  \r\n    return monthNames[monthIndex] + ' ' + year;\r\n}\r\n  \r\nexport function formatDateTime(dateTimeString) {\r\n  const date = new Date(dateTimeString);\r\n\r\n  const monthNames = [\r\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\",\r\n    \"May\", \"Jun\", \"Jul\", \"Aug\", \r\n    \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n  ];\r\n\r\n  const monthIndex = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  return date.getDate() + ' ' + monthNames[monthIndex] + ' ' + year + ' - ' + date.getHours() + ':' + date.getMinutes();\r\n}  ","import React, { Component } from 'react';\r\nimport './Post.css';\r\nimport { Comment, Avatar, Card, Divider } from 'antd';\r\n//import { getAllComment, commentPost, replyComment } from '../util/APIUtils';\r\nimport { Link } from 'react-router-dom';\r\nimport { getAvatarColor } from '../util/Colors';\r\nimport { formatDateTime } from '../util/Helpers';\r\nimport { API_BASE_URL, ACCESS_TOKEN, POLL_CHOICE_MAX_LENGTH, POLL_LIST_SIZE } from '../constants';\r\nimport { Image, Badge, List } from 'antd';\r\nimport { Popover, Upload,Tag } from 'antd';\r\nimport { Form, Input, Col, notification, Switch, Row, Tooltip } from 'antd';\r\nimport { HeartOutlined, HeartTwoTone, MessageOutlined, UploadOutlined, MoreOutlined, DeleteOutlined, MinusOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Radio, Button } from 'antd';\r\nconst { TextArea } = Input\r\nconst FormItem = Form.Item;\r\nconst RadioGroup = Radio.Group;\r\nconst config = {\r\n    name: \"file\",\r\n    action: API_BASE_URL + \"/file/upload\",\r\n    headers: {\r\n        authorization:\r\n            'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\r\n    },\r\n\r\n};\r\nconst getTime = (time) => {\r\n    if (time == null) return \"\"\r\n    const timeNew = new Date(time).getTime();\r\n    const currentTime = new Date().getTime();\r\n\r\n    var difference_ms = currentTime - timeNew;\r\n    var seconds = Math.floor((difference_ms / 1000) % 60);\r\n    var minutes = Math.floor((difference_ms / 1000 / 60) % 60);\r\n    var hours = Math.floor((difference_ms / (1000 * 60 * 60)) % 24);\r\n    var days = Math.floor(difference_ms / (1000 * 60 * 60 * 24));\r\n\r\n    let timeRemaining;\r\n    if (days > 7) {\r\n        timeRemaining = formatDateTime(time);\r\n    }\r\n    else if (days > 0) {\r\n        timeRemaining = days + \" ngày trước\";\r\n    } else if (hours > 0) {\r\n        timeRemaining = hours + \" giờ trước\";\r\n    } else if (minutes > 0) {\r\n        timeRemaining = minutes + \" phút trước\";\r\n    } else if (seconds > 0) {\r\n        timeRemaining = seconds + \" giây trước\";\r\n    } else {\r\n        timeRemaining = \"Vừa mới\";\r\n    }\r\n\r\n    return timeRemaining;\r\n}\r\nconst getTime2 = (time) => {\r\n    if (time == null) return \"\"\r\n    const timeNew = new Date(time).getTime();\r\n    const currentTime = new Date().getTime();\r\n\r\n    var difference_ms = timeNew - currentTime;\r\n    var seconds = Math.floor((difference_ms / 1000) % 60);\r\n    var minutes = Math.floor((difference_ms / 1000 / 60) % 60);\r\n    var hours = Math.floor((difference_ms / (1000 * 60 * 60)) % 24);\r\n    var days = Math.floor(difference_ms / (1000 * 60 * 60 * 24));\r\n\r\n    let timeRemaining;\r\n    if (days > 0) {\r\n        timeRemaining = \"Còn \" + days + \" ngày\";\r\n    } else if (hours > 0) {\r\n        timeRemaining = \"Còn \" + hours + \" giờ\";\r\n    } else if (minutes > 0) {\r\n        timeRemaining = \"Còn \" + minutes + \" phút\";\r\n    } else if (seconds > 0) {\r\n        timeRemaining = \"Còn \" + seconds + \" giây\";\r\n    } else {\r\n        timeRemaining = \"\";\r\n    }\r\n\r\n    return timeRemaining;\r\n}\r\n// const CommentList = ({ comments }) => {\r\n//     const arrayReply = Array(comments.length).fill(false);\r\n//     return (\r\n//         <List\r\n//             dataSource={comments}\r\n//             // header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\r\n//             itemLayout=\"horizontal\"\r\n//             renderItem={(props,index) => <><Comment\r\n//                 actions={[<span key=\"comment-nested-reply-to\" onClick={() => arrayReply[index]=!arrayReply[index]}>Reply to</span>]}\r\n//                 author={props.user.name} avatar={<Avatar\r\n//                     style={{ backgroundColor: getAvatarColor(props.user.name) }} >\r\n//                     {props.user.name[0].toUpperCase()}\r\n//                 </Avatar>} content={<p>{props.text}</p>} datetime={getTime(props.createDate)}>\r\n//                 {props.replys != null && props.replys.length != 0 && <List\r\n//                     dataSource={props.replys}\r\n//                     itemLayout=\"horizontal\"\r\n//                     renderItem={reply => <Comment author={reply.user.name} avatar={reply.user.photo} content={<p>{reply.text}</p>} datetime={getTime(reply.createDate)}>\r\n//                     </Comment>}\r\n//                 />}\r\n\r\n//             </Comment>{arrayReply[index]&&<Comment\r\n//                     avatar={\r\n//                         <Avatar\r\n//                             style={{ backgroundColor: getAvatarColor(props.user.name) }} >\r\n//                             {props.user.name[0].toUpperCase()}\r\n//                         </Avatar>\r\n//                     }\r\n//                     content={\r\n//                         <Editor\r\n//                         />\r\n//                     }\r\n//                 />}</>}\r\n//         />);\r\n// }\r\n\r\nconst Editor = ({ onChange, onSubmit, submitting, value, textButton }) => (\r\n    <>\r\n        <Form.Item>\r\n            <TextArea rows={3} onChange={onChange} value={value} />\r\n        </Form.Item>\r\n        <Form.Item style={{ marginBottom: \"0px\" }}>\r\n            <Button htmlType=\"submit\" style={{ float: \"right\" }} loading={submitting} onClick={onSubmit} type=\"primary\">\r\n                Add {textButton}\r\n            </Button>\r\n        </Form.Item>\r\n    </>\r\n);\r\nclass Post extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            choiceAdd: Array(this.props.post.polls.length).fill(null),\r\n            choiceCanAdd: Array(this.props.post.polls.length).fill(true),\r\n            choiceNew: Array(this.props.post.polls.length).fill({\r\n                text: '',\r\n                photo: null,\r\n                review: ''\r\n            }),\r\n            // comments: [],\r\n            // submittingComment: false,\r\n            // valueComment: '',\r\n            // showComment: false,\r\n            // showReply: [],\r\n            // valueReply: '',\r\n            // submittingReply: [],\r\n            // page: 0,\r\n            isUpdateName: false,\r\n            valueName: ''\r\n        }\r\n    }\r\n    calculatePercentage = (choice, pollIndex) => {\r\n        if (this.props.post.polls[pollIndex].totalVotes === 0) {\r\n            return 0;\r\n        }\r\n        return (choice.voteCount * 100) / (this.props.post.polls[pollIndex].totalVotes);\r\n    };\r\n\r\n    isSelected = (pollIndex, choiceIndex) => {\r\n        return this.props.post.polls[pollIndex].choices[choiceIndex].userVoteCount > 0;\r\n    }\r\n\r\n    getWinningChoice = (pollIndex) => {\r\n        return this.props.post.polls[pollIndex].choices.reduce((prevChoice, currentChoice) =>\r\n            currentChoice.voteCount > prevChoice.voteCount ? currentChoice : prevChoice,\r\n            { voteCount: -Infinity }\r\n        );\r\n    }\r\n\r\n    getTimeRemaining = (poll) => {\r\n        if (poll.expirationDateTime == null) return \"No limit\"\r\n        const expirationTime = new Date(poll.expirationDateTime).getTime();\r\n        const currentTime = new Date().getTime();\r\n\r\n        var difference_ms = expirationTime - currentTime;\r\n        var seconds = Math.floor((difference_ms / 1000) % 60);\r\n        var minutes = Math.floor((difference_ms / 1000 / 60) % 60);\r\n        var hours = Math.floor((difference_ms / (1000 * 60 * 60)) % 24);\r\n        var days = Math.floor(difference_ms / (1000 * 60 * 60 * 24));\r\n\r\n        let timeRemaining;\r\n\r\n        if (days > 0) {\r\n            timeRemaining = days + \" days left\";\r\n        } else if (hours > 0) {\r\n            timeRemaining = hours + \" hours left\";\r\n        } else if (minutes > 0) {\r\n            timeRemaining = minutes + \" minutes left\";\r\n        } else if (seconds > 0) {\r\n            timeRemaining = seconds + \" seconds left\";\r\n        } else {\r\n            timeRemaining = \"less than a second left\";\r\n        }\r\n\r\n        return timeRemaining;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            valueName: this.props.post.question\r\n        })\r\n    }\r\n\r\n    onChange = (event, pollIndex) => {\r\n        const choiceText = this.state.choiceNew.slice();\r\n        choiceText[pollIndex] = Object.assign(choiceText[pollIndex], {\r\n            text: event.target.value,\r\n            ...this.validateChoice(event.target.value)\r\n        });\r\n        this.setState({\r\n            choiceNew: choiceText,\r\n        });\r\n\r\n    }\r\n    validateChoice = (choiceText) => {\r\n        if (choiceText.length === 0) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Please enter a choice!'\r\n            }\r\n        } else if (choiceText.length > POLL_CHOICE_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Choice is too long (Maximum ${POLL_CHOICE_MAX_LENGTH} characters allowed)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null\r\n            }\r\n        }\r\n    }\r\n    onReviewChange = (event, pollIndex) => {\r\n        const choiceText = this.state.choiceNew.slice();\r\n        choiceText[pollIndex] = Object.assign(choiceText[pollIndex], {\r\n            review: event.target.value,\r\n            ...this.validateChoice(choiceText[pollIndex].text)\r\n        });\r\n        this.setState({\r\n            choiceNew: choiceText,\r\n            // ...this.validateChoice(choiceText[pollIndex].text)\r\n        });\r\n\r\n    }\r\n    onImageChoiceChange = (info, pollIndex) => {\r\n        if (info.file.status !== \"uploading\") {\r\n            //console.log(info);\r\n            //console.log(this.state.choiceNew);\r\n\r\n        }\r\n        if (info.fileList.length === 0) {\r\n            const polls = this.state.choiceNew.slice();\r\n            polls[pollIndex].photo = null;\r\n            this.setState({\r\n                choiceNew: polls\r\n            });\r\n        }\r\n        if (info.file.status === \"done\") {\r\n            const polls = this.state.choiceNew.slice();\r\n            //const isAddChoice = polls[indexPoll].isAddChoice;\r\n\r\n            polls[pollIndex].photo = info.fileList[0].response.id;\r\n            this.setState({\r\n                choiceNew: polls\r\n            });\r\n\r\n            notification.success({\r\n                message: 'Polling App',\r\n                description: `${info.file.name} file uploaded successfully`,\r\n            });\r\n            // message.success(`${info.file.name} file uploaded successfully`);\r\n        } else if (info.file.status === \"error\") {\r\n            if(info.file.response!=null){\r\n                notification.error({\r\n                    message: 'Polling App',\r\n                    description: `${info.file.response.message}`,\r\n                });\r\n            }else{\r\n                notification.error({\r\n                    message: 'Polling App',\r\n                    description: `${info.file.name} file upload failed. Max file size is 20MB`,\r\n                });\r\n            }\r\n            //   message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n    }\r\n    addAChoice = (event, postIndex, pollIndex) => {\r\n        this.props.addAChoice(event, postIndex, pollIndex, this.state.choiceNew[pollIndex]);\r\n        const choiceCanAdd = this.state.choiceCanAdd.slice();\r\n        choiceCanAdd[pollIndex] = true;\r\n        const choiceText = this.state.choiceNew.slice();\r\n        choiceText[pollIndex] = {\r\n            text: '',\r\n            review: '',\r\n            photo: null\r\n        };\r\n        this.setState({\r\n            choiceCanAdd: choiceCanAdd,\r\n            choiceNew: choiceText\r\n        })\r\n    }\r\n    removeAddChoice = (pollIndex) => {\r\n        const choiceAdd = this.state.choiceAdd.slice();\r\n        choiceAdd[pollIndex] = null;\r\n        const choiceCanAdd = this.state.choiceCanAdd.slice();\r\n        choiceCanAdd[pollIndex] = true;\r\n        const choiceText = this.state.choiceNew.slice();\r\n        choiceText[pollIndex] = {\r\n            text: '',\r\n            review: '',\r\n            photo: null\r\n        };\r\n        this.setState(\r\n            {\r\n                choiceAdd: choiceAdd,\r\n                choiceCanAdd: choiceCanAdd,\r\n                choiceNew: choiceText\r\n            }\r\n        )\r\n\r\n    }\r\n    addChoiceInput = (postIndex, pollIndex) => {\r\n        const choiceAdd = this.state.choiceAdd.slice();\r\n\r\n        choiceAdd[pollIndex] = <div><Input\r\n            placeholder='Choice '\r\n            size=\"large\"\r\n            defaultValue={this.state.choiceNew[pollIndex].text}\r\n            // className=\"cv-poll-choice\"\r\n            className=\"optional-choice\"\r\n            onPressEnter={(event) => this.addAChoice(event, postIndex, pollIndex)}\r\n            onChange={(event) => this.onChange(event, pollIndex)}\r\n        />\r\n            <MinusOutlined className=\"dynamic-delete-button\" onClick={() => this.removeAddChoice(pollIndex)} />\r\n            <TextArea\r\n                placeholder={'Review'}\r\n                size=\"large\"\r\n                defaultValue={this.state.choiceNew[pollIndex].review}\r\n                // className=\"choice\"\r\n                className=\"optional-textchoice2\"\r\n                onChange={(event) => this.onReviewChange(event, pollIndex)}\r\n                onPressEnter={(event) => this.addAChoice(event, postIndex, pollIndex)}\r\n            />\r\n            <Upload {...config} listType=\"picture\" className=\"upload-inline\" maxCount={1} onChange={(info) => this.onImageChoiceChange(info, pollIndex)}>\r\n                {this.state.choiceNew[pollIndex].photo == null ? <Button className=\"button-upload2\" icon={<UploadOutlined />}>Upload</Button> : <Button className=\"button-upload\" disabled icon={<UploadOutlined />}>Upload</Button>}\r\n            </Upload></div>\r\n        const choiceCanAdd = this.state.choiceCanAdd.slice();\r\n        choiceCanAdd[pollIndex] = false;\r\n        this.setState(\r\n            {\r\n                choiceAdd: choiceAdd,\r\n                choiceCanAdd: choiceCanAdd\r\n            }\r\n        )\r\n    }\r\n    handleChangeComment = (event) => {\r\n        this.props.handleChangeComment(event, this.props.postIndex);\r\n        // this.setState({\r\n        //     valueComment: event.target.value\r\n        // })\r\n    }\r\n    handleSubmitComment = () => {\r\n        this.props.handleSubmitComment(this.props.postIndex);\r\n        // if (!this.state.valueComment) {\r\n        //     return;\r\n        // }\r\n        // if (!this.props.isAuthenticated) {\r\n        //     this.props.history.push(\"/login\");\r\n        //     notification.info({\r\n        //         message: 'Polling App',\r\n        //         description: \"Please login to comment.\",\r\n        //     });\r\n        //     return;\r\n        // }\r\n        // this.setState({\r\n        //     submittingComment: true,\r\n        // });\r\n        // commentPost(this.props.post.id, this.state.valueComment)\r\n        //     .then(response => {\r\n        //         const comment = this.state.comments.slice();\r\n        //         this.setState({\r\n        //             comments: comment.concat(response),\r\n        //             submittingComment: false,\r\n        //             valueComment: ''\r\n        //         })\r\n        //     }).catch(error => {\r\n        //         if (error.status === 401) {\r\n        //             this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n        //         } else {\r\n        //             notification.error({\r\n        //                 message: 'Polling App',\r\n        //                 description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n        //             });\r\n        //         }\r\n        //     });\r\n        // this.setState({\r\n        //     submittingComment: false\r\n        // })\r\n    }\r\n    onComment = (page = 0, size = POLL_LIST_SIZE) => {\r\n        this.props.onComment(page, size, this.props.post.id, this.props.postIndex)\r\n    }\r\n    onReply = (index) => {\r\n        this.props.onReply(this.props.postIndex, index);\r\n        // const showReply = this.state.showReply;\r\n        // showReply[index] = !showReply[index];\r\n        // this.setState({\r\n        //     showReply: showReply\r\n        // })\r\n    }\r\n    handleChangeReply = (event) => {\r\n        this.props.handleChangeReply(event, this.props.postIndex);\r\n        // this.setState({\r\n        //     valueReply: event.target.value\r\n        // })\r\n    }\r\n    handleSubmitReply = (index) => {\r\n        this.props.handleSubmitReply(this.props.postIndex, index);\r\n        // if (!this.state.valueReply) {\r\n        //     return;\r\n        // }\r\n        // if (!this.props.isAuthenticated) {\r\n        //     this.props.history.push(\"/login\");\r\n        //     notification.info({\r\n        //         message: 'Polling App',\r\n        //         description: \"Please login to reply.\",\r\n        //     });\r\n        //     return;\r\n        // }\r\n        // const submittingReply = this.state.submittingReply;\r\n        // submittingReply[index] = true;\r\n        // this.setState({\r\n        //     submittingReply: submittingReply,\r\n        // });\r\n        // replyComment(this.props.post.id, this.state.comments[index].id, this.state.valueReply)\r\n        //     .then(response => {\r\n        //         const comment = this.state.comments.slice();\r\n        //         comment.forEach((cm, index) => {\r\n        //             if (cm.id === response.id) {\r\n        //                 comment[index] = response;\r\n        //             }\r\n        //         })\r\n        //         const submittingReply2 = this.state.submittingReply;\r\n        //         submittingReply2[index] = false;\r\n        //         this.setState({\r\n        //             comments: comment,\r\n        //             submittingReply: submittingReply2,\r\n        //             valueReply: ''\r\n        //         })\r\n        //     }).catch(error => {\r\n        //         if (error.status === 401) {\r\n        //             this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n        //         } else {\r\n        //             notification.error({\r\n        //                 message: 'Polling App',\r\n        //                 description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n        //             });\r\n        //         }\r\n        //     });\r\n    }\r\n    onClickUpdateName = () => {\r\n        this.setState({\r\n            isUpdateName: !this.state.isUpdateName\r\n        })\r\n    }\r\n    onChangeName = (event) => {\r\n        this.setState({\r\n            valueName: event.target.value\r\n        })\r\n    }\r\n    updateName = () => {\r\n        this.setState({\r\n            isUpdateName: !this.state.isUpdateName\r\n        })\r\n        this.props.updateName(this.state.valueName, this.props.postIndex);\r\n    }\r\n    render() {\r\n        const { comments, submittingComment, valueComment, showReply } = this.props;\r\n        const commentViews = [];\r\n        const loadMore = this.props.showComment && comments.length > 0&&!this.props.isLastComment && <Link to=\"#\" onClick={() => this.props.onLoadMoreComment(this.props.pageComment + 1, POLL_LIST_SIZE, this.props.post.id, this.props.postIndex)}>Load More...</Link>\r\n        commentViews.push(<List\r\n        key={1}\r\n            dataSource={comments}\r\n            loadMore={loadMore}\r\n            // header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\r\n            itemLayout=\"horizontal\"\r\n            renderItem={(props, index) => <List.Item key={index} style={{display:\"block\"}}><Comment\r\n                actions={this.props.currentUser!=null&&(props.user.username === this.props.currentUser.username || this.props.post.createdBy.username === this.props.currentUser.username) ? [<span key=\"comment-nested-reply-to\" onClick={() => this.onReply(index)}>Reply to</span>, <span key=\"delete-comment\" onClick={() => this.props.onDeleteComment(this.props.postIndex, index)}>Delete</span>] : [<span key=\"comment-nested-reply-to\" onClick={() => this.onReply(index)}>Reply to</span>]}\r\n                author={<Link to={`/users/${props.user.username}`}>{props.user.name}</Link>} avatar={props.user.photo == null ? <Link to={`/users/${props.user.username}`}><Avatar\r\n                    style={{ backgroundColor: getAvatarColor(props.user.name) }} >\r\n                    {props.user.name[0].toUpperCase()}\r\n                </Avatar></Link> : <Link to={`/users/${props.user.username}`}><Avatar\r\n                    //src={API_BASE_URL + \"/file/getImage/\" + props.user.photo} \r\n                    src={\"https://drive.google.com/uc?export=view&id=\"+props.user.photo}\r\n                    >\r\n                </Avatar></Link>} content={<p>{props.text}</p>} datetime={getTime(props.createDate)}>\r\n                {props.replys !== null && props.replys.length !== 0 && <List\r\n                    rowKey={record => record.id}\r\n                    dataSource={props.replys}\r\n                    itemLayout=\"horizontal\"\r\n                    renderItem={(reply, replyIndex) => <List.Item key={replyIndex}><Comment actions={this.props.currentUser!=null&&(reply.user.username === this.props.currentUser.username || this.props.post.createdBy.username === this.props.currentUser.username) && [<span key=\"delete-reply\" onClick={() => this.props.onDeleteReply(this.props.postIndex, index, replyIndex)}>Delete</span>]} author={<Link to={`/users/${reply.user.username}`}>{reply.user.name}</Link>} avatar={reply.user.photo == null ? <Link to={`/users/${reply.user.username}`}><Avatar\r\n                        style={{ backgroundColor: getAvatarColor(reply.user.name) }} >\r\n                        {reply.user.name[0].toUpperCase()}\r\n                    </Avatar></Link> : <Link to={`/users/${reply.user.username}`}><Avatar\r\n                        //src={API_BASE_URL + \"/file/getImage/\" + reply.user.photo} \r\n                        src={\"https://drive.google.com/uc?export=view&id=\"+reply.user.photo}\r\n                        >\r\n                    </Avatar></Link>} content={<p>{reply.text}</p>} datetime={getTime(reply.createDate)}>\r\n                    </Comment></List.Item>}\r\n                />}\r\n\r\n            </Comment>{showReply[index] && this.props.currentUser != null &&<Comment\r\n                avatar={this.props.currentUser.photo == null ?\r\n                    <Avatar\r\n                        style={{ backgroundColor: getAvatarColor(this.props.currentUser.name) }} >\r\n                        {this.props.currentUser.name[0].toUpperCase()}\r\n                    </Avatar> : <Avatar\r\n                        //src={API_BASE_URL + \"/file/getImage/\" + this.props.currentUser.photo} \r\n                        src={\"https://drive.google.com/uc?export=view&id=\"+this.props.currentUser.photo}\r\n                        >\r\n                    </Avatar>\r\n                }\r\n                content={\r\n                    <Editor\r\n                        onChange={this.handleChangeReply}\r\n                        onSubmit={() => this.handleSubmitReply(index)}\r\n                        submitting={this.props.submittingReply[index]}\r\n                        value={this.props.valueReply}\r\n                        textButton=\"Reply\"\r\n                    />\r\n                }\r\n            />}</List.Item>}\r\n        />\r\n           \r\n        )\r\n\r\n\r\n        const postView = [];\r\n        this.props.post.polls.forEach((poll, pollIndex) => {\r\n            const pollChoices = [];\r\n\r\n            if (poll.isExpired || (poll.totalUserVotes === poll.maxVotePerTimeLoad && poll.showResultCase === 3 && !poll.isCanFix)) {\r\n                const winningChoice = this.props.post.polls[pollIndex].expired ? this.getWinningChoice(pollIndex) : null;\r\n                poll.choices.forEach((choice, choiceIndex) => {\r\n                    pollChoices.push(<CompletedOrVotedPollChoice\r\n                        isUnseenUserForAddChoice={poll.isUnseenUserForAddChoice}\r\n                        key={choice.id}\r\n                        choice={choice}\r\n                        isWinner={winningChoice && choice.id === winningChoice.id}\r\n                        handleClickShowListVoted={() => this.props.handleShowListVoted(choice.id, 0, 5)}\r\n                        isSelected={this.isSelected(pollIndex, choiceIndex)}\r\n                        percentVote={this.calculatePercentage(choice, pollIndex)}\r\n                    />);\r\n                });\r\n\r\n            } else if (poll.showResultCase === 1 || (poll.totalUserVotes !== 0 && poll.showResultCase === 3 && !poll.isCanFix)) {\r\n                poll.choices.forEach((choice, choiceIndex) => {\r\n                    pollChoices.push(<CompletedOrVotedCanVotePollChoice\r\n                        key={choice.id}\r\n                        choice={choice}\r\n                        isUnseenUserForVote={poll.isUnseenUserForVote}\r\n                        isUnseenUserForAddChoice={poll.isUnseenUserForAddChoice}\r\n                        isSelected={this.isSelected(pollIndex, choiceIndex)}\r\n                        percentVote={this.calculatePercentage(choice, pollIndex)}\r\n                        handleClickShowListVoted={() => this.props.handleShowListVoted(choice.id)}\r\n                        handleClick={(event) => this.props.handleDeleteVoteSubmit(event, this.props.postIndex, pollIndex)}\r\n                        handleClickDelChoice={(event) => this.props.handleDeleteChoiceSubmit(event, this.props.postIndex, pollIndex)}\r\n                        isDelete={this.props.currentUser != null && ((this.props.currentUser.username === this.props.post.createdBy.username) || (this.props.currentUser.username === choice.createdBy.username)) && !poll.isExpired}\r\n                        isOwner={this.props.currentUser != null && (this.props.currentUser.username === this.props.post.createdBy.username)}\r\n                        canFix={poll.isCanFix}\r\n                    />)\r\n                })\r\n            }\r\n\r\n            else if (poll.showResultCase !== 1) {\r\n                poll.choices.forEach((choice, choiceIndex) => {\r\n                    pollChoices.push(\r\n                        <Popover placement=\"right\" key={choice.id} mouseEnterDelay={1}\r\n                            content={\r\n                                <div style={{ maxWidth: '500px', minWidth: '400px' }}>\r\n                                    {choice.choicePrime != null && choice.choicePrime.photo != null && choice.choicePrime.photo !== \"\" ? <Image\r\n                                        //src={API_BASE_URL + \"/file/getImage/\" + choice.choicePrime.photo}\r\n                                        src={\"https://drive.google.com/uc?export=view&id=\"+choice.choicePrime.photo}\r\n                                    /> : null}\r\n                                    {choice.choicePrime != null ? <div style={{ wordBreak: 'break-word' }}>{choice.choicePrime.review}</div> : null}\r\n                                </div>}\r\n                            title={\r\n                                <>{choice.text}{poll.isUnseenUserForAddChoice ? null : (<span className=\"separator\">•</span>)}{poll.isUnseenUserForAddChoice ? null : <Link className=\"creator-link\" to={`/users/${choice.createdBy.username}`}>{choice.createdBy.name}</Link>}\r\n                                </>}>\r\n                            <div>\r\n                                <Radio className=\"poll-choice-radio\" key={choice.id} value={choice.id}>\r\n                                    <span style={{ paddingLeft: \"20px\" }}>{choice.text}\r\n                                        {this.props.isAuthenticated && this.props.currentUser.username === this.props.post.createdBy.username && !poll.isExpired &&\r\n                                            <Tooltip title=\"Choice Delete\" placement=\"top\" arrowPointAtCenter={true}>\r\n                                                <Button type=\"dashed\" icon={<DeleteOutlined />} shape=\"circle\" value={choice.id} onClick={(event) => this.props.handleDeleteChoiceSubmit(event, this.props.postIndex, pollIndex)} size='small' className=\"delete-button-choice\" style={{ float: \"right\", marginRight: 10 }} /></Tooltip>}\r\n                                        {this.isSelected(pollIndex, choiceIndex) && poll.isCanFix &&\r\n                                            <Tooltip title=\"Vote Delete\" placement=\"top\" arrowPointAtCenter={true}>\r\n                                                <Button type=\"dashed\" icon={<MinusOutlined />} shape=\"circle\" value={choice.id} onClick={(event) => this.props.handleDeleteVoteSubmit(event, this.props.postIndex, pollIndex)} size='small' className=\"delete-button\" style={{ float: \"right\", marginRight: 3 }} /></Tooltip>}\r\n                                    </span>\r\n                                </Radio>\r\n                            </div>\r\n                        </Popover>\r\n\r\n                    )\r\n                })\r\n            }\r\n            postView.push(<PollItem key={pollIndex} postIndex={this.props.postIndex} choiceAdd={this.state.choiceAdd[pollIndex]}\r\n                poll={poll} pollIndex={pollIndex} pollChoices={pollChoices} choiceCanAdd={this.state.choiceCanAdd[pollIndex]} choiceNew={this.state.choiceNew[pollIndex]}\r\n                handleVoteChange={this.props.handleVoteChange} currentVote={this.props.currentVote} addChoiceInput={this.addChoiceInput}\r\n                createdBy={this.props.post.createdBy} creationDateTime={this.props.post.creationDateTime} addAChoice={this.addAChoice}\r\n                getTimeRemaining={this.getTimeRemaining} handleVoteSubmit={this.props.handleVoteSubmit} currentUser={this.props.currentUser}\r\n                isOwner={this.props.currentUser != null && (this.props.currentUser.username === this.props.post.createdBy.username)}\r\n                onEndPoll={this.props.onEndPoll}\r\n            />)\r\n        })\r\n        const time = getTime2(this.props.post.publicDate);\r\n        var question = this.props.post.question;\r\n        var tag = question.match(/#\\S+/g);\r\n        const tagView = [];\r\n        if(tag!=null)tag.forEach((t,index)=>{\r\n            const uri = encodeURIComponent(t);\r\n            question = question.replace(t,\"\");\r\n            \r\n            tagView.push(<Tag key={index}><Link to={\"/search/\"+uri} key={index}>{t}</Link></Tag>)\r\n        })\r\n        return (\r\n            <>\r\n                <Card style={{ marginBottom: 30 }} className=\"poll-content\"\r\n                // actions={[\r\n                //     <div onClick= {()=>this.props.onLikePost(this.props.postIndex)}>{this.props.post.isUserLike ? <HeartTwoTone twoToneColor=\"#eb2f96\" /> : <HeartOutlined key=\"like\" />}{this.props.post.totalLike != null ? <span className=\"separator\">•</span> : null}{this.props.post.totalLike}</div>,\r\n                //     <div onClick={(event) => console.log(\"comment\")}><MessageOutlined key=\"comment\" />{this.props.post.totalComment != null ? <span className=\"separator\">•</span> : null}{this.props.post.totalComment}</div>,\r\n                // ]}\r\n                >\r\n\r\n                    <div className=\"poll-header\">\r\n                        <Popover placement=\"right\" title=\"Tùy chọn\" content={<ManagerPost isUserStorage={this.props.post.isUserStorage} isOwner={this.props.currentUser != null && (this.props.currentUser.username === this.props.post.createdBy.username)} onUpdatePost={this.onClickUpdateName} onReportPost={this.props.onReportPost} onDeletePost={this.props.onDeletePost} deleteFollowPost={this.props.deleteFollowPost} onFollowPost={this.props.onFollowPost} postIndex={this.props.postIndex} />} trigger=\"click\">\r\n                            <Button type=\"text\" shape=\"circle\" className=\"poll-info\" icon={<MoreOutlined />}></Button>\r\n                        </Popover>\r\n                        <div className=\"poll-creator-info\">\r\n                            <Link className=\"creator-link\" to={`/users/${this.props.post.createdBy.username}`}>\r\n                                {this.props.post.createdBy.photo == null ? <Avatar className=\"poll-creator-avatar\"\r\n                                    style={{ backgroundColor: getAvatarColor(this.props.post.createdBy.name) }} >\r\n                                    {this.props.post.createdBy.name[0].toUpperCase()}\r\n                                </Avatar> : <Avatar className=\"poll-creator-avatar\"\r\n                                    //src={API_BASE_URL + \"/file/getImage/\" + this.props.post.createdBy.photo} \r\n                                    src={\"https://drive.google.com/uc?export=view&id=\"+this.props.post.createdBy.photo}\r\n                                    >\r\n                                </Avatar>}\r\n                                <span className=\"poll-creator-name\">\r\n                                    {this.props.post.createdBy.name}\r\n                                </span>\r\n                                <span className=\"poll-creator-username\">\r\n                                    @{this.props.post.createdBy.username}\r\n                                </span>\r\n                                {time !== '' && <span className=\"separator\">•</span>}\r\n                                {time !== '' && <span>{time}</span>}\r\n                            </Link>\r\n\r\n                            <Link to={\"/post/\" + this.props.post.id}>\r\n                                <span className=\"poll-creation-date\">\r\n                                    {getTime(this.props.post.polls[0].creationDateTime)}\r\n                                    {/* {formatDateTime(this.props.post.polls[0].creationDateTime)} */}\r\n                                </span></Link>\r\n                            <span className=\"separator\">•</span>\r\n                            <span className=\"poll-creation-date\">\r\n                                {this.props.post.showCase === 1 ? \"Bí mật\" : null}\r\n                                {this.props.post.showCase === 2 ? \"Riêng tư\" : null}\r\n                                {this.props.post.showCase === 3 ? \"Công khai\" : null}\r\n                                {this.props.post.showCase === 4 && <span style={{cursor:\"pointer\"}} onClick={() => this.props.handleShowListNoVoted(this.props.post.id)}>Giới hạn người</span>}\r\n                                {this.props.post.showCase === 5 && <Popover placement=\"right\" id=\"grouplist\" title=\"Danh sách nhóm\" content={<InfomationGroups list={this.props.post.groupResponses}></InfomationGroups>} trigger=\"click\"><Button type=\"text\" className=\"poll-show-case-button\">Nhóm</Button></Popover>}\r\n                            </span>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"poll-question\">\r\n                            {this.state.isUpdateName ? <TextArea value={this.state.valueName} onChange={this.onChangeName}></TextArea> : <>{question}{tagView}</>}\r\n                        </div>\r\n                        {this.state.isUpdateName && <Button style={{ marginBottom: 15 }} onClick={this.updateName}>Update</Button>}\r\n                        {postView}\r\n                    </div>\r\n                    <ul className=\"ant-card-actions\">\r\n                        <li style={{ width: \"50%\", cursor: \"pointer\" }}>\r\n                            <div onClick={() => this.props.onLikePost(this.props.postIndex)}>{this.props.post.isUserLike ? <HeartTwoTone twoToneColor=\"#eb2f96\" /> : <HeartOutlined key=\"like\" />}{this.props.post.totalLike != null ? <span className=\"separator\">•</span> : null}{this.props.post.totalLike}</div>\r\n                        </li>\r\n                        <li style={{ width: \"50%\", cursor: \"pointer\" }}>\r\n                            <div onClick={(event) => this.onComment()}><MessageOutlined key=\"comment\" />{this.props.post.totalComment != null ? <span className=\"separator\">•</span> : null}{this.props.post.totalComment}</div>\r\n                        </li>\r\n                    </ul>\r\n                    {this.props.showComment && <Divider style={{ margin: \"0\" }} />}\r\n\r\n                    {this.props.showComment && this.props.currentUser != null && <Comment\r\n                        avatar={this.props.currentUser.photo == null ?\r\n                            <Avatar\r\n                                style={{ backgroundColor: getAvatarColor(this.props.currentUser.name) }} >\r\n                                {this.props.currentUser.name[0].toUpperCase()}\r\n                            </Avatar> : <Avatar\r\n                                //src={API_BASE_URL + \"/file/getImage/\" + this.props.currentUser.photo} \r\n                                src={\"https://drive.google.com/uc?export=view&id=\"+this.props.currentUser.photo}\r\n                                >\r\n                            </Avatar>\r\n                        }\r\n                        content={\r\n                            <Editor\r\n                                onChange={this.handleChangeComment}\r\n                                onSubmit={this.handleSubmitComment}\r\n                                submitting={submittingComment}\r\n                                value={valueComment}\r\n                                textButton=\"Comment\"\r\n                            />\r\n                        }\r\n                    />}\r\n                    {this.props.showComment && comments.length > 0 && commentViews }\r\n                    {/* {this.props.showComment && comments.length > 0&&!this.props.isLastComment && <Link to=\"#\" onClick={() => this.props.onLoadMoreComment(this.props.pageComment + 1, POLL_LIST_SIZE, this.props.post.id, this.props.postIndex)}>Load More...</Link>} */}\r\n\r\n\r\n                </Card>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\nfunction ManagerPost(props) {\r\n    return (\r\n        <div>\r\n            {props.isOwner&&<Button type=\"primary\" style={{ marginBottom: \"10px\" }} block onClick={() => props.onUpdatePost(props.postIndex)}>Cập nhật</Button>}\r\n            {!props.isUserStorage?<Button type=\"primary\" style={{ marginBottom: \"10px\" }} block onClick={() => props.onFollowPost(props.postIndex)}>Lưu trữ</Button>:<Button type=\"primary\" style={{ marginBottom: \"10px\" }} block onClick={() => props.deleteFollowPost(props.postIndex)}>Hủy Lưu trữ</Button>}\r\n            {props.isOwner&&<Button danger block onClick={() => props.onDeletePost(props.postIndex)}>Delete post</Button>}\r\n            {!props.isOwner&&<Button danger block onClick={() => props.onReportPost(props.postIndex)}>Report</Button>}\r\n        </div>\r\n    );\r\n}\r\nfunction InfomationGroups(props) {\r\n\r\n    return (\r\n        <div className=\"popInforPoll\">\r\n            <List\r\n                dataSource={props.list}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            title={<Link to={`/groups/${item.code}`}>{item.name} <span style={{ color: '#657786' }}>@{item.code}</span></Link>}\r\n                            description={<div><div><span>Người tạo: <Link to={`/users/${item.admin.username}`}>{item.admin.name} @{item.admin.username}</Link></span></div><div>Ngày tạo: {formatDateTime(item.createDate)}</div></div>}\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nfunction Infomation(props) {\r\n    return (\r\n        <div className=\"popInforPoll\">\r\n            <Row gutter={[24, 8]}>\r\n                <Col span={12}>Bầu chọn ẩn danh&nbsp;\r\n                </Col> <Col span={12}>{props.poll.isUnseenUserForVote ? <Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" defaultChecked disabled={true} /> : <Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" disabled={true} />}\r\n                </Col><Col span={12}>Cho phép thêm lựa chọn&nbsp;\r\n                </Col><Col span={12}>{props.poll.isAddChoice ? <Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" defaultChecked disabled={true} /> : <Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" disabled={true} />}\r\n                </Col>\r\n                {props.poll.isAddChoice ? (<Col span={12}>Người thêm lựa chọn bị ẩn danh&nbsp;</Col>) : null}\r\n                {props.poll.isAddChoice ? (<Col span={12}>{props.poll.isUnseenUserForAddChoice ? <Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" disabled={true} defaultChecked /> : <Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" disabled={true} />}\r\n                </Col>) : null}<Col span={12}>Cho phép sửa lựa chọn&nbsp;\r\n                </Col><Col span={12}>{props.poll.isCanFix ? <Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" disabled={true} defaultChecked /> : <Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" disabled={true} />}\r\n                </Col>\r\n                <Col span={12}>Số lượng phiếu bầu tối đa:</Col>\r\n                <Col span={12}>{props.poll.maxVotePerTimeLoad}\r\n                    &nbsp;Lần</Col>\r\n                <Col span={12}>Mỗi lựa chọn được bầu tối đa:</Col>\r\n                <Col span={12}>{props.poll.maxVotePerChoice}\r\n                    &nbsp;Lần</Col>\r\n                {props.poll.timeLoad === 0 ? null : (<Col span={12}>Số lượng phiếu bầu tối đa 2:</Col>)}\r\n                {props.poll.timeLoad === 0 ? null : (\r\n\r\n                    <Col span={12}>{props.poll.maxVoteOfPoll}\r\n                        &nbsp;Lần</Col>)\r\n                }\r\n                {props.poll.timeLoad === 0 ? null : <Col span={12}>\r\n                    Thời gian được thiết lập lại số phiếu:\r\n                </Col>}\r\n                {props.poll.timeLoad === 0 ? null : <Col span={12}>\r\n                    <span style={{ marginRight: '18px' }}>\r\n                        {Math.floor(props.poll.timeLoad / 24)}\r\n                        &nbsp;Days\r\n                    </span>\r\n                    <span>\r\n                        {props.poll.timeLoad % 24}\r\n                        &nbsp;Hours\r\n                    </span>\r\n                </Col>}\r\n                <Col span={12}>\r\n                    Chế độ hiển thị kết quả:\r\n                </Col>\r\n                <Col span={12}>\r\n                    {props.poll.showResultCase === 1 ? 'Được xem ngay' : null}\r\n                    {props.poll.showResultCase === 2 ? 'Sau khi kết thúc' : null}\r\n                    {props.poll.showResultCase === 3 ? 'Sau khi bầu' : null}\r\n                    {props.poll.showResultCase === 4 ? 'Không được xem' : null}\r\n\r\n                </Col></Row>\r\n            {!props.poll.isExpired && props.isOwner ? <Button onClick={(event) => props.onEndPoll(event, props.postIndex, props.pollIndex)} block danger>Kết thúc bầu chọn</Button> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction PollItem(props) {\r\n    return (\r\n        <div className=\"poll-content\">\r\n            <div className=\"poll-header\">\r\n                <div className=\"text-number\">\r\n                    {props.pollIndex + 1}.\r\n                </div>\r\n                <Popover placement=\"right\" title=\"Infomation\" content={<Infomation poll={props.poll} onEndPoll={props.onEndPoll} isOwner={props.isOwner} pollIndex={props.pollIndex} postIndex={props.postIndex}></Infomation>} trigger=\"click\">\r\n                    <Button type=\"text\" shape=\"circle\" className=\"poll-info\" icon={<MoreOutlined />}></Button>\r\n                </Popover>\r\n                <div className=\"poll-question\">\r\n                    {props.poll.question}\r\n                </div>\r\n                {(props.poll.photo !== null && props.poll.photo !== '') && <Image\r\n//  src={props.poll.photo} https://drive.google.com/uc?export=view&id=10JehIGbJdThrsGzXV7dHxsDhjFjRryiX\r\nsrc={\"https://drive.google.com/uc?export=view&id=\"+props.poll.photo}\r\n// src=\"https://drive.google.com/uc?id=1OqevuFEaO5XyT5Uxm1DcQ5t0DoeG0Ini&export=download\"\r\n                    // src={API_BASE_URL + \"/file/getImage/\" + props.poll.photo}\r\n                /> }\r\n\r\n                {/* <Image src=\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"/> */}\r\n            </div>\r\n            <div className=\"poll-choices\">\r\n                <RadioGroup\r\n                    className=\"poll-choice-radio-group\"\r\n                    onChange={(event) => props.handleVoteChange(event, props.pollIndex, props.postIndex)}\r\n                    value={props.currentVote[props.pollIndex]}>\r\n                    {props.pollChoices}\r\n                </RadioGroup>\r\n                {props.choiceCanAdd ? null : <Form><FormItem validateStatus={props.choiceNew.validateStatus}\r\n                    help={props.choiceNew.errorMsg}>{props.choiceAdd}</FormItem></Form>}\r\n\r\n            </div>\r\n            <div className=\"poll-footer\">\r\n                {\r\n                    !(props.poll.selectedChoice || props.poll.isExpired) ?\r\n                        (<Button className=\"vote-button\" disabled={!props.currentVote[props.pollIndex]} onClick={(event) => props.handleVoteSubmit(event, props.pollIndex, props.postIndex)}>Vote</Button>) : null\r\n                }\r\n                <span className=\"total-votes\">{props.poll.totalVotes} votes</span>\r\n                <span className=\"separator\">•</span>\r\n                <span className=\"time-left\">\r\n                    {\r\n                        props.poll.isExpired ? \"Final results\" :\r\n                            props.getTimeRemaining(props.poll)\r\n                    }\r\n                </span>\r\n                {\r\n                    (props.currentUser != null && props.choiceCanAdd && (props.poll.isAddChoice || props.createdBy.username === props.currentUser.username) && !props.poll.isExpired) && <Button type=\"dashed\" style={{ float: 'right' }} onClick={() => props.addChoiceInput(props.postIndex, props.pollIndex)} icon={<PlusOutlined />} disabled={!props.choiceCanAdd}>\r\n                        {window.screen.width > 768 && \"Add a choice\"}\r\n                    </Button>\r\n                }\r\n                {\r\n                    (!props.choiceCanAdd) && <Button type=\"dashed\" style={{ float: 'right' }} onClick={(event) => props.addAChoice(event, props.postIndex, props.pollIndex)} disabled={props.choiceCanAdd}>\r\n                        <PlusOutlined /> Submit\r\n                    </Button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nfunction CompletedOrVotedPollChoice(props) {\r\n    const percent = Math.round(props.percentVote * 100) / 100;\r\n    return (\r\n        <Popover placement=\"right\" mouseEnterDelay={0.5} content={<div style={{ maxWidth: '500px', minWidth: '400px' }}>\r\n            {props.choice.choicePrime != null && props.choice.choicePrime.photo != null && props.choice.choicePrime.photo !== \"\" ? <Image\r\n                src={\"https://drive.google.com/uc?export=view&id=\"+props.choice.choicePrime.photo}\r\n                //src={API_BASE_URL + \"/file/getImage/\" + props.choice.choicePrime.photo}\r\n            /> : null}\r\n            {props.choice.choicePrime != null ? <div style={{ wordBreak: 'break-word' }}>{props.choice.choicePrime.review}</div> : null}\r\n        </div>} title={<>{props.choice.text}{props.isUnseenUserForAddChoice ? null : (<span className=\"separator\">•</span>)}{props.isUnseenUserForAddChoice ? null : <Link className=\"creator-link\" to={`/users/${props.choice.createdBy.username}`}>{props.choice.createdBy.name}</Link>}</>}>\r\n            <div className=\"cv-poll-choice\">\r\n                <span className=\"cv-poll-choice-details\">\r\n                    <span className=\"cv-choice-percentage\">\r\n                        {props.isUnseenUserForVote ? percent + '%' : <Button value={props.choice.id} style={{ fontWeight: 600 }} onClick={props.handleClickShowListVoted} type=\"text\">{Math.round(props.percentVote * 100) / 100}%</Button>}\r\n                        {/* {Math.round(props.percentVote * 100) / 100}% */}\r\n                    </span>\r\n                    <span className=\"cv-choice-text\">\r\n                        {props.choice.text}\r\n                    </span>\r\n                    {/* {\r\n                    props.isSelected ? (\r\n                        <span className=\"selected-choice-icon\">\r\n                            <CheckCircleOutlined />\r\n                        </span>) : null\r\n                } */}\r\n                </span>\r\n                <span className={props.isWinner ? 'cv-choice-percent-chart winner' : 'cv-choice-percent-chart'}\r\n                    style={{ width: props.percentVote + '%' }}>\r\n                </span>\r\n            </div></Popover>\r\n    );\r\n}\r\nfunction CompletedOrVotedCanVotePollChoice(props) {\r\n    const percent = Math.round(props.percentVote * 100) / 100;\r\n    return (\r\n        <Popover placement=\"right\" mouseEnterDelay={1} content={<div style={{ maxWidth: '500px', minWidth: '400px' }}>\r\n            {props.choice.choicePrime != null && props.choice.choicePrime.photo != null && props.choice.choicePrime.photo !== \"\" ? <Image\r\n                src={\"https://drive.google.com/uc?export=view&id=\"+props.choice.choicePrime.photo}\r\n                //src={API_BASE_URL + \"/file/getImage/\" + props.choice.choicePrime.photo}\r\n            /> : null}\r\n            {props.choice.choicePrime != null ? <div style={{ wordBreak: 'break-word' }}>{props.choice.choicePrime.review}</div> : null}\r\n        </div>} title={<>{props.choice.text}{props.isUnseenUserForAddChoice ? null : (<span className=\"separator\">•</span>)}{props.isUnseenUserForAddChoice ? null : <Link className=\"creator-link\" to={`/users/${props.choice.createdBy.username}`}>{props.choice.createdBy.name}</Link>}</>}>\r\n            <Badge count={props.choice.userVoteCount} offset={[-0, 0]} className=\"site-badge-count-4\">\r\n\r\n                <Radio className=\"poll-choice-radio\" key={props.choice.id} value={props.choice.id}>\r\n\r\n                    <span className=\"cv-poll-choice-details2\">\r\n                        <span className=\"cv-choice-percentage\">\r\n                            {props.isUnseenUserForVote && !props.isOwner ? percent + '%' : <Button value={props.choice.id} style={{ fontWeight: 600 }} onClick={props.handleClickShowListVoted} type=\"text\">{Math.round(props.percentVote * 100) / 100}%</Button>}\r\n                            {/* {Math.round(props.percentVote * 100) / 100}% */}\r\n                        </span>\r\n                        <span className=\"cv-choice-text\">\r\n                            {props.choice.text}\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span className={props.isSelected ? \"cv-choice-percent-chart2 winner\" : \"cv-choice-percent-chart2\"}\r\n                        style={{ width: props.percentVote + '%' }}>\r\n                    </span>\r\n\r\n                    {/* {\r\n                                props.isDelete ? (\r\n                                    <Tooltip title=\"Choice Delete\" placement=\"top\" arrowPointAtCenter={true}>\r\n\r\n                                        <Button type=\"dashed\" style={{ marginRight: 10 }} shape=\"circle\" icon={<DeleteOutlined />} value={props.choice.id} onClick={props.handleClickDelChoice} size='small' className=\"delete-button-choice\" /> </Tooltip>\r\n                                ) : null\r\n                            }\r\n                            {\r\n                                props.isSelected && props.canFix ? (\r\n                                    <Tooltip title=\"Vote Delete\" placement=\"top\" arrowPointAtCenter={true}>\r\n                                        <Button type=\"dashed\" style={{ marginRight: 3 }} shape=\"circle\" icon={<MinusOutlined />} value={props.choice.id} onClick={props.handleClick} size='small' className=\"delete-button\" /> </Tooltip>\r\n                                ) : null\r\n                            } */}\r\n                    {props.isDelete &&\r\n                        <Tooltip title=\"Choice Delete\" placement=\"top\" arrowPointAtCenter={true}><Button type=\"dashed\" icon={<DeleteOutlined />} shape=\"circle\" value={props.choice.id} onClick={props.handleClickDelChoice} size='small' className=\"delete-button-choice\" style={{ float: \"right\", marginRight: 10 }} /></Tooltip>}\r\n                    {props.isSelected && props.canFix &&\r\n                        <Tooltip title=\"Vote Delete\" placement=\"top\" arrowPointAtCenter={true}><Button type=\"dashed\" icon={<MinusOutlined />} shape=\"circle\" value={props.choice.id} onClick={props.handleClick} size='small' className=\"delete-button\" style={{ float: \"right\", marginRight: 3 }} /></Tooltip>}\r\n                </Radio>\r\n\r\n            </Badge></Popover>\r\n    );\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Spin} from 'antd';\r\nimport { Loading3QuartersOutlined } from '@ant-design/icons';\r\nexport default function LoadingIndicator(props) {\r\n    const antIcon = <Loading3QuartersOutlined style={{ fontSize: 30 }} spin />;\r\n    return (\r\n        <Spin indicator={antIcon} style = {{display: 'block', textAlign: 'center', marginTop: 30}} />\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { getAllPolls, getUserCreatedPolls, getUserVotedPolls, getOnePolls, getAllPollsOfGroup,getAllUserNoVoted, getAllUserVotedChoice, deletePost } from '../util/APIUtils';\r\nimport Post from './Post';\r\nimport { Avatar, Input } from 'antd';\r\nimport { getAvatarColor } from '../util/Colors';\r\nimport { castVote,reportPost, commentPost,deleteSavePost,savePost,getUserSavedPolls, getAllComment, replyComment,deleteComment,deleteReply } from '../util/APIUtils';\r\nimport { deleteVote, deleteChoice, addChoice, endPoll, castLike, getAllPollsSearch, updatePostName } from '../util/APIUtils';\r\nimport LoadingIndicator from '../common/LoadingIndicator';\r\nimport { Button, notification, Modal, List } from 'antd';\r\nimport { API_BASE_URL, POLL_LIST_SIZE, USER_LIST_SIZE, ACCESS_TOKEN } from '../constants';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { VerticalAlignTopOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport './PostList.css';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { BackTop } from 'antd';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\nclass PostList extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            page: 0,\r\n            size: 10,\r\n            totalElements: 0,\r\n            totalPages: 0,\r\n            last: false,\r\n            currentVotes: [],\r\n            isLoading: false,\r\n            visible: false,\r\n            currentPollIndex: 0,\r\n            currentPostIndex: 0,\r\n            currentValue: '',\r\n            prevY: 0,\r\n            visibleListVoted: false,\r\n            votedUsers: [],\r\n            pageVoted: 0,\r\n            currentChoiceId: 0,\r\n            isLoading2: false,\r\n            last2: false,\r\n            stompClient: null,\r\n            check: 0,\r\n            visiblePost: false,\r\n\r\n            visibleListnoVoted: false,\r\n            novotedUsers: [],\r\n            pagenoVoted: 0,\r\n            currentPostId: 0,\r\n            isLoading3: false,\r\n            last3: false,\r\n\r\n            visibleReportPost: false,\r\n            reasonReport: '',\r\n\r\n            comments: [],\r\n            submittingComment: [],\r\n            valueComment: [],\r\n            showComment: [],\r\n            showReply: [],\r\n            valueReply: [],\r\n            submittingReply: [],\r\n            pageComment: [],\r\n            isLastComment: [],\r\n\r\n            visibleCommentDelete: false,\r\n            currentCommentIndex: 0,\r\n\r\n            visibleReplyDelete: false,\r\n            currentReplyIndex: 0,\r\n        };\r\n        this.loadPostList = this.loadPostList.bind(this);\r\n        this.handleLoadMore = this.handleLoadMore.bind(this);\r\n        this.handleVoteChange = this.handleVoteChange.bind(this);\r\n        this.handleVoteSubmit = this.handleVoteSubmit.bind(this);\r\n    }\r\n    addAChoice = (event, postIndex, pollIndex, data) => {\r\n        event.preventDefault();\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to add Choice.\",\r\n            });\r\n            return;\r\n        }\r\n        const pollId = this.state.posts[postIndex].polls[pollIndex].id;\r\n        const addDataChoice = {\r\n            text: data.text,\r\n            review: data.review,\r\n            photo: data.photo\r\n        }\r\n        addChoice(addDataChoice, pollId)\r\n            .then(response => {\r\n                const posts = this.state.posts.slice();\r\n                posts[postIndex] = response;\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        posts: posts\r\n                    });\r\n                }\r\n\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    handleChangeComment = (event, postIndex) => {\r\n        const valueComment = this.state.valueComment;\r\n        valueComment[postIndex] = event.target.value;\r\n        this.setState({\r\n            valueComment: valueComment\r\n        })\r\n    }\r\n    handleSubmitComment = (postIndex) => {\r\n        if (!this.state.valueComment[postIndex]) {\r\n            return;\r\n        }\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to comment.\",\r\n            });\r\n            return;\r\n        }\r\n        const submittingComment = this.state.submittingComment;\r\n        submittingComment[postIndex] = true;\r\n        this.setState({\r\n            submittingComment: submittingComment,\r\n        });\r\n        commentPost(this.state.posts[postIndex].id, this.state.valueComment[postIndex])\r\n            .then(response => {\r\n                const comments = this.state.comments.slice();\r\n                comments[postIndex] = comments[postIndex].concat(response);\r\n                const posts = this.state.posts.slice();\r\n                posts[postIndex].totalComment++;\r\n                const valueComment = this.state.valueComment.slice();\r\n                valueComment[postIndex] = '';\r\n                this.setState({\r\n                    comments: comments,\r\n                    valueComment: valueComment,\r\n                    posts: posts\r\n                })\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n        submittingComment[postIndex] = false;\r\n        this.setState({\r\n            submittingComment: submittingComment\r\n        })\r\n    }\r\n    onComment = (page = 0, size = POLL_LIST_SIZE, postId, postIndex) => {\r\n        if (!this.state.showComment[postIndex]) {\r\n            this.onLoadMoreComment(page,size,postId,postIndex);\r\n            // if (this.state.pageComment[postIndex] === page) {\r\n            //     getAllComment(postId, page, size)\r\n            //         .then(response => {\r\n            //             const comment = response.content;\r\n            //             const comments = this.state.comments.slice();\r\n            //             comments[postIndex] = comment;\r\n            //             const showReply = this.state.showReply.slice();\r\n            //             showReply[postIndex] = Array(comment.length).fill(false);\r\n            //             const submittingReply = this.state.submittingReply.slice();\r\n            //             submittingReply[postIndex] = Array(comment.length).fill(false);\r\n            //             const pageComment = this.state.pageComment.slice();\r\n            //             pageComment[postIndex] = response.page;\r\n            //             const isLastComment = this.state.isLastComment.slice();\r\n            //             isLastComment[postIndex] = response.last;\r\n            //             this.setState({\r\n            //                 comments: comments,\r\n            //                 showReply: showReply,\r\n            //                 submittingReply: submittingReply,\r\n            //                 pageComment: pageComment,\r\n            //                 isLastComment: isLastComment\r\n            //             })\r\n            //         }).catch(error => {\r\n            //             if (error.status === 401) {\r\n            //                 this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n            //             } else {\r\n            //                 notification.error({\r\n            //                     message: 'Polling App',\r\n            //                     description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n            //                 });\r\n            //             }\r\n            //         });\r\n            // }\r\n            // else {\r\n            //     getAllComment(this.props.post.id, page, size)\r\n            //         .then(response => {\r\n            //             const comment = this.state.comments[postIndex].slice().concat(response.content);\r\n            //             const comments = this.state.comments.slice();\r\n            //             comments[postIndex] = comment;\r\n            //             const showReply = this.state.showReply.slice();\r\n            //             showReply[postIndex] = Array(comment.length).fill(false);\r\n            //             const submittingReply = this.state.submittingReply.slice();\r\n            //             submittingReply[postIndex] = Array(comment.length).fill(false);\r\n            //             const pageComment = this.state.pageComment.slice();\r\n            //             pageComment[postIndex] = response.page;\r\n            //             const isLastComment = this.state.isLastComment.slice();\r\n            //             isLastComment[postIndex] = response.last;\r\n            //             this.setState({\r\n            //                 comments: comments,\r\n            //                 showReply: showReply,\r\n            //                 submittingReply: submittingReply,\r\n            //                 pageComment: pageComment,\r\n            //                 isLastComment: isLastComment\r\n            //             })\r\n            //         }).catch(error => {\r\n            //             if (error.status === 401) {\r\n            //                 this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n            //             } else {\r\n            //                 notification.error({\r\n            //                     message: 'Polling App',\r\n            //                     description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n            //                 });\r\n            //             }\r\n            //         });\r\n            // }\r\n\r\n        }\r\n        const showComment = this.state.showComment.slice();\r\n        showComment[postIndex] = !showComment[postIndex];\r\n        this.setState({\r\n            showComment: showComment\r\n        })\r\n    }\r\n    onLoadMoreComment = (page = 0, size = POLL_LIST_SIZE, postId, postIndex) =>{\r\n        if (this.state.pageComment[postIndex] === page) {\r\n            getAllComment(postId, page, size)\r\n                .then(response => {\r\n                    const comment = response.content;\r\n                    const comments = this.state.comments.slice();\r\n                    comments[postIndex] = comment;\r\n                    const showReply = this.state.showReply.slice();\r\n                    showReply[postIndex] = Array(comment.length).fill(false);\r\n                    const submittingReply = this.state.submittingReply.slice();\r\n                    submittingReply[postIndex] = Array(comment.length).fill(false);\r\n                    const pageComment = this.state.pageComment.slice();\r\n                    pageComment[postIndex] = response.page;\r\n                    const isLastComment = this.state.isLastComment.slice();\r\n                    isLastComment[postIndex] = response.last;\r\n                    this.setState({\r\n                        comments: comments,\r\n                        showReply: showReply,\r\n                        submittingReply: submittingReply,\r\n                        pageComment: pageComment,\r\n                        isLastComment: isLastComment\r\n                    })\r\n                }).catch(error => {\r\n                    if (error.status === 401) {\r\n                        this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                    } else {\r\n                        notification.error({\r\n                            message: 'Polling App',\r\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n        else {\r\n            getAllComment(postId, page, size)\r\n                .then(response => {\r\n                    const comment = this.state.comments[postIndex].slice().concat(response.content);\r\n                    const comments = this.state.comments.slice();\r\n                    comments[postIndex] = comment;\r\n                    const showReply = this.state.showReply.slice();\r\n                    showReply[postIndex] = Array(comment.length).fill(false);\r\n                    const submittingReply = this.state.submittingReply.slice();\r\n                    submittingReply[postIndex] = Array(comment.length).fill(false);\r\n                    const pageComment = this.state.pageComment.slice();\r\n                    pageComment[postIndex] = response.page;\r\n                    const isLastComment = this.state.isLastComment.slice();\r\n                    isLastComment[postIndex] = response.last;\r\n                    this.setState({\r\n                        comments: comments,\r\n                        showReply: showReply,\r\n                        submittingReply: submittingReply,\r\n                        pageComment: pageComment,\r\n                        isLastComment: isLastComment\r\n                    })\r\n                }).catch(error => {\r\n                    if (error.status === 401) {\r\n                        this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                    } else {\r\n                        notification.error({\r\n                            message: 'Polling App',\r\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n    onReply = (postIndex, index) => {\r\n        const showReply = this.state.showReply;\r\n        showReply[postIndex][index] = !showReply[postIndex][index];\r\n        this.setState({\r\n            showReply: showReply\r\n        })\r\n    }\r\n    handleChangeReply = (event, postIndex) => {\r\n        const valueReply = this.state.valueReply.splice();\r\n        valueReply[postIndex] = event.target.value;\r\n        this.setState({\r\n            valueReply: valueReply\r\n        })\r\n    }\r\n    handleSubmitReply = (postIndex, index) => {\r\n        if (!this.state.valueReply[postIndex]) {\r\n            return;\r\n        }\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to reply.\",\r\n            });\r\n            return;\r\n        }\r\n        const submittingReply = this.state.submittingReply;\r\n        submittingReply[postIndex][index] = true;\r\n        this.setState({\r\n            submittingReply: submittingReply,\r\n        });\r\n        replyComment(this.state.posts[postIndex].id, this.state.comments[postIndex][index].id, this.state.valueReply[postIndex])\r\n            .then(response => {\r\n                const comment = this.state.comments.slice()[postIndex];\r\n                comment.some((cm, index) => {\r\n                    if (cm.id === response.commentId) {\r\n                        comment[index].replys = comment[index].replys.concat(response);\r\n                    }\r\n                    return cm.id === response.commentId;\r\n                })\r\n                const comments = this.state.comments;\r\n                comments[postIndex] = comment;\r\n                const submittingReply2 = this.state.submittingReply;\r\n                submittingReply2[postIndex][index] = false;\r\n                const valueReply = this.state.valueReply;\r\n                valueReply[postIndex] = false;\r\n                this.setState({\r\n                    comments: comments,\r\n                    submittingReply: submittingReply2,\r\n                    valueReply: valueReply\r\n                })\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    loadPostList = (page = 0, size = POLL_LIST_SIZE) => {\r\n        let promise;\r\n\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                isLoading: true\r\n            });\r\n        }\r\n        switch (this.props.type) {\r\n            case 'GROUP':\r\n                promise = getAllPollsOfGroup(this.props.match.params.code, page, size);\r\n                break;\r\n            case 'ONE_POST':\r\n                promise = getOnePolls(this.props.match.params.id);\r\n                break;\r\n            case 'USER_CREATED_POSTS':\r\n                promise = getUserCreatedPolls(this.props.username, page, size);\r\n                break;\r\n            case 'USER_VOTED_POSTS':\r\n                promise = getUserVotedPolls(this.props.username, page, size);\r\n                break;\r\n            case 'SEARCH_POST':\r\n                promise = getAllPollsSearch(this.props.match.params.search, page, size);\r\n                break;\r\n            case 'USER_SAVE_POSTS':\r\n                promise = getUserSavedPolls(page, size);\r\n                break;\r\n            default:\r\n                promise = getAllPolls(page, size);\r\n\r\n        }\r\n        // if (this.props.type === 'GROUP') {\r\n        //     promise = getAllPollsOfGroup(this.props.match.params.code, page, size);\r\n        // }\r\n        // else if (this.props.type === 'ONE_POST') {\r\n        //     promise = getOnePolls(this.props.match.params.id);\r\n        // }\r\n        // else if (this.props.type === 'USER_CREATED_POSTS') {\r\n        //     promise = getUserCreatedPolls(this.props.username, page, size);\r\n        // }\r\n        // else if (this.props.type === 'USER_VOTED_POSTS') {\r\n        //     promise = getUserVotedPolls(this.props.username, page, size);\r\n        // }\r\n        // else if (this.props.type === 'SEARCH_POST') {\r\n        //     promise = getAllPollsSearch(this.props.match.params.search, page, size);\r\n        // }\r\n        // else {\r\n        //     promise = getAllPolls(page, size);\r\n        // }\r\n\r\n        if (!promise) {\r\n            return;\r\n        }\r\n\r\n        promise\r\n            .then(response => {\r\n                //console.log(response);\r\n\r\n                const posts = this.state.posts.slice();\r\n\r\n                const currentVotes = this.state.currentVotes.slice();\r\n\r\n                const currentVotes2 = currentVotes.concat(Array(response.content.length).fill(null))\r\n                const comments = this.state.comments.slice().concat(Array(response.content.length).fill([]));\r\n                const submittingComment = this.state.submittingComment.slice().concat(Array(response.content.length).fill(false));\r\n                const valueComment = this.state.valueComment.slice().concat(Array(response.content.length).fill(''));\r\n                const showComment = this.state.showComment.slice().concat(Array(response.content.length).fill(false));\r\n                const showReply = this.state.showReply.slice().concat(Array(response.content.length).fill([]));\r\n                const valueReply = this.state.valueReply.slice().concat(Array(response.content.length).fill(''));\r\n                const submittingReply = this.state.submittingReply.slice().concat(Array(response.content.length).fill([]));\r\n                const pageComment = this.state.pageComment.slice().concat(Array(response.content.length).fill(0));\r\n                const isLastComment = this.state.isLastComment.slice().concat(Array(response.content.length).fill(false));\r\n                response.content.forEach((post, index) => {\r\n                    // if (this.props.isAuthenticated) {\r\n                    //     this.state.stompClient.send('/app/start', {}, post.id);\r\n                    // }\r\n                    currentVotes2[posts.length + index] = Array(post.polls.length).fill(null)\r\n                })\r\n                posts.concat(response.content)\r\n                // posts.concat(response.content).forEach((post, index) => {\r\n                //     if (this.props.isAuthenticated) {\r\n                //         this.state.stompClient.send('/app/start', {}, post.id);\r\n                //     }\r\n                //     currentVotes2[index] = Array(post.polls.length).fill(null)\r\n                // })\r\n                //console.log(this.state.page)\r\n                //console.log(response.page)\r\n                // console.log(this.state.check)\r\n                if (this.state.page === response.page && this.state.check === 0) {\r\n                    if (this._isMounted) {\r\n                        console.log(\"setState1\")\r\n                        this.setState({\r\n                            posts: posts.concat(response.content),\r\n                            page: response.page,\r\n                            size: response.size,\r\n                            totalElements: response.totalElements,\r\n                            totalPages: response.totalPages,\r\n                            last: response.last,\r\n                            currentVotes: currentVotes2,\r\n                            isLoading: false,\r\n                            check: 1,\r\n                            comments: comments,\r\n                            submittingComment: submittingComment,\r\n                            valueComment: valueComment,\r\n                            showComment: showComment,\r\n                            showReply: showReply,\r\n                            valueReply: valueReply,\r\n                            submittingReply: submittingReply,\r\n                            pageComment: pageComment,\r\n                            isLastComment: isLastComment\r\n                        })\r\n                    }\r\n                }\r\n                else if (this.state.page !== response.page) {\r\n                    if (this._isMounted) {\r\n                        console.log(\"setState2\")\r\n                        this.setState({\r\n                            posts: posts.concat(response.content),\r\n                            page: response.page,\r\n                            size: response.size,\r\n                            totalElements: response.totalElements,\r\n                            totalPages: response.totalPages,\r\n                            last: response.last,\r\n                            currentVotes: currentVotes2,\r\n                            isLoading: false,\r\n                            check: 0,\r\n                            comments: comments,\r\n                            submittingComment: submittingComment,\r\n                            valueComment: valueComment,\r\n                            showComment: showComment,\r\n                            showReply: showReply,\r\n                            valueReply: valueReply,\r\n                            submittingReply: submittingReply,\r\n                            pageComment: pageComment\r\n                        })\r\n                    }\r\n                }\r\n\r\n\r\n\r\n            }).catch(error => {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        isLoading: false\r\n                    })\r\n                }\r\n            });\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n        if (this.state.stompClient != null) {\r\n            //console.log(\"disccccccccccccccccccccccco\")\r\n            this.state.stompClient.send('/app/stop', {});\r\n            this.state.stompClient.disconnect();\r\n        }\r\n        //console.log(\"unmount\")\r\n    }\r\n    socketPoll = (data) => {\r\n        const posts = this.state.posts.slice();\r\n\r\n        switch (data.type) {\r\n            case 1://Vote + delete vote\r\n                posts.some((post, postIndex) => {\r\n                    if (post.id === data.postId) {\r\n                        post.polls.some((poll, pollIndex) => {\r\n                            if (poll.id === data.pollId) {\r\n                                posts[postIndex].polls[pollIndex].totalVotes = data.totalVotes;\r\n                                data.choices.forEach((choiceSocket) => {\r\n                                    poll.choices.some((choice, choiceIndex) => {\r\n                                        if (choice.id === choiceSocket.id) {\r\n                                            choiceSocket.userVoteCount = choice.userVoteCount;\r\n                                            posts[postIndex].polls[pollIndex].choices[choiceIndex] = {\r\n                                                ...posts[postIndex].polls[pollIndex].choices[choiceIndex],\r\n                                                ...choiceSocket\r\n                                            }\r\n                                        }\r\n                                        return choice.id === choiceSocket.id;\r\n                                    })\r\n                                })\r\n                            }\r\n                            return poll.id === data.pollId;\r\n                        })\r\n                    }\r\n                    return post.id === data.postId;\r\n                })\r\n                \r\n                break;\r\n            case 2://end poll\r\n                posts.some((post, postIndex) => {\r\n                    if (post.id === data.postId) {\r\n                        post.polls.some((poll, pollIndex) => {\r\n                            if (poll.id === data.pollId) {\r\n                                posts[postIndex].polls[pollIndex].isExpired = data.isExpired;\r\n                                posts[postIndex].polls[pollIndex].expirationDateTime = data.expirationDateTime;\r\n                            }\r\n                            return poll.id === data.pollId;\r\n                        })\r\n                    }\r\n                    return post.id === data.postId;\r\n                })\r\n                break;\r\n            case 3://add choice\r\n                posts.some((post, postIndex) => {\r\n                    if (post.id === data.postId) {\r\n                        post.polls.some((poll, pollIndex) => {\r\n                            if (poll.id === data.pollId) {\r\n                                posts[postIndex].polls[pollIndex].choices = posts[postIndex].polls[pollIndex].choices.concat(data.choices[0]);\r\n                            }\r\n                            return poll.id === data.pollId;\r\n                        })\r\n                    }\r\n                    return post.id === data.postId;\r\n                })\r\n                break;\r\n            case 4: //delete choice\r\n                posts.some((post, postIndex) => {\r\n                    if (post.id === data.postId) {\r\n                        post.polls.some((poll, pollIndex) => {\r\n                            if (poll.id === data.pollId) {\r\n                                poll.choices.some((choice, choiceIndex) => {\r\n                                    if (choice.id === data.choiceId) {\r\n                                        posts[postIndex].polls[pollIndex].totalVotes = posts[postIndex].polls[pollIndex].totalVotes - posts[postIndex].polls[pollIndex].choices[choiceIndex].voteCount;\r\n                                        posts[postIndex].polls[pollIndex].choices.splice(choiceIndex, 1);\r\n                                    }\r\n                                    return choice.id === data.choiceId;\r\n                                })\r\n                            }\r\n                            return poll.id === data.pollId;\r\n                        })\r\n                    }\r\n                    return post.id === data.postId;\r\n                })\r\n                break;\r\n            case 5: //Like post\r\n                posts.some((post, postIndex) => {\r\n                    if (post.id === data.postId) {\r\n                        posts[postIndex].totalLike++;\r\n                    }\r\n                    return post.id === data.postId;\r\n                })\r\n                break;\r\n            case 6: //UnLike post\r\n                posts.some((post, postIndex) => {\r\n                    if (post.id === data.postId) {\r\n                        posts[postIndex].totalLike--;\r\n                    }\r\n                    return post.id === data.postId;\r\n                })\r\n                break;\r\n            case 7: //Comment post\r\n                posts.some((post, postIndex) => {\r\n                    if (post.id === data.postId) {\r\n                        posts[postIndex].totalComment++;\r\n                        if (this.state.showComment[postIndex]) {\r\n                            const comments = this.state.comments.slice();\r\n                            comments[postIndex] = comments[postIndex].concat(data.comment);\r\n                            this.setState({\r\n                                comments: comments\r\n                            })\r\n                        }\r\n                    }\r\n                    return post.id === data.postId;\r\n                })\r\n                break;\r\n            case 8: //Reply post\r\n                posts.some((post, postIndex) => {\r\n                    if (post.id === data.postId) {\r\n                        //posts[postIndex].totalComment++;\r\n                        if (this.state.showComment[postIndex]) {\r\n                            const comments = this.state.comments.slice();\r\n                            comments[postIndex].some((comment, commentIndex) => {\r\n                                if (comment.id === data.reply.commentId) {\r\n                                    comments[postIndex][commentIndex].replys = comments[postIndex][commentIndex].replys.concat(data.reply);\r\n                                    this.setState({\r\n                                        comments: comments\r\n                                    })\r\n                                }\r\n                                return comment.id === data.reply.commentId;\r\n                            })\r\n                            //    comments[postIndex] = comments[postIndex].concat(data.comment); \r\n                            //    this.setState({\r\n                            //         comments : comments\r\n                            //     })\r\n                        }\r\n                    }\r\n                    return post.id === data.postId;\r\n                })\r\n                break;\r\n            case 9:\r\n                posts.some((post, postIndex) => {\r\n                    if (post.id === data.postId) {\r\n                        posts[postIndex].question = data.name;\r\n                    }\r\n                    return post.id === data.postId;\r\n                })\r\n                break;\r\n            case 10:\r\n                notification.info({\r\n                    message: `Notification`,\r\n                    description:\r\n                      data.name,\r\n                      placement: \"bottomLeft\",\r\n                      onClick: ()=>this.props.history.push(\"/post/\"+data.postId)\r\n                  });\r\n                  break;\r\n            default:\r\n\r\n        }\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                posts: posts\r\n            })\r\n        }\r\n    }\r\n    onFollowPost = (postIndex) => {\r\n        const post = this.state.posts;\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to follow.\",\r\n            });\r\n            return;\r\n        }\r\n        savePost(post[postIndex].id)\r\n            .then(response => {\r\n                post[postIndex].isUserStorage = true;\r\n                this.setState({\r\n                    posts: post\r\n                })\r\n                notification.success({\r\n                    message: 'Polling App',\r\n                    description: response.message || 'Sorry! Something went wrong. Please try again!'\r\n                });\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    deleteFollowPost = (postIndex) => {\r\n        const post = this.state.posts;\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to follow.\",\r\n            });\r\n            return;\r\n        }\r\n        deleteSavePost(post[postIndex].id)\r\n            .then(response => {\r\n                post[postIndex].isUserStorage = false;\r\n                this.setState({\r\n                    posts: post\r\n                })\r\n                notification.success({\r\n                    message: 'Polling App',\r\n                    description: response.message || 'Sorry! Something went wrong. Please try again!'\r\n                });\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    onLikePost = (postIndex) => {\r\n        const post = this.state.posts[postIndex];\r\n        // if (this.props.isAuthenticated) {\r\n        //     this.state.stompClient.send('/app/start', {}, post.id);\r\n        // }\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to like.\",\r\n            });\r\n            return;\r\n        }\r\n        castLike(post.id)\r\n            .then(response => {\r\n                const posts = this.state.posts.slice();\r\n                posts[postIndex] = response;\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        posts: posts\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    showModalDeletePost = (postIndex) => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visiblePost: true,\r\n                currentPostIndex: postIndex\r\n            })\r\n        }\r\n    }\r\n    showModalReportPost = (postIndex) => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visibleReportPost: true,\r\n                currentPostIndex: postIndex\r\n            })\r\n        }\r\n    }\r\n    handleDeletePostSubmit = () => {\r\n        const post = this.state.posts[this.state.currentPostIndex];\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to delete.\",\r\n            });\r\n            return;\r\n        }\r\n        deletePost(post.id)\r\n            .then(response => {\r\n                const posts = this.state.posts.slice();\r\n                posts.splice(this.state.currentPostIndex, 1);\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        posts: posts\r\n                    });\r\n                }\r\n                notification.success({\r\n                    message: 'Polling App',\r\n                    description: response.message || 'Successfully!!'\r\n                });\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visiblePost: false\r\n            });\r\n        }\r\n    }\r\n    handleReportPostSubmit = () => {\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to delete.\",\r\n            });\r\n            return;\r\n        }\r\n        reportPost(this.state.posts[this.state.currentPostIndex].id,this.state.reasonReport)\r\n            .then(response => {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        currentPostIndex: 0,\r\n                        reasonReport: ''\r\n                    });\r\n                }\r\n                notification.success({\r\n                    message: 'Polling App',\r\n                    description: response.message || 'Successfully!!'\r\n                });\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visibleReportPost: false\r\n            });\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // console.log(\"didmount\")\r\n        // console.log(this.props.taolao!==true);\r\n        this._isMounted = true;\r\n        if (this.props.isAuthenticated&&this.state.stompClient==null) {\r\n            if(this.props.socket!==true){\r\n                const socket = new SockJS(API_BASE_URL + '/ws');\r\n                const stompClient = Stomp.over(socket);\r\n                const headers = { Authorization: 'Bearer ' + localStorage.getItem(ACCESS_TOKEN) };\r\n                stompClient.connect(headers, () => {\r\n                    stompClient.subscribe(\r\n                        '/user/queue/item', (response) => this.socketPoll(JSON.parse(response.body)), headers,\r\n                    );\r\n                });\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        stompClient: stompClient\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        this.loadPostList(this.state.page);\r\n\r\n        // else {\r\n        //     if(this.state.stompClient!=null){\r\n        //         console.log(\"disccccccccccccccccccccccco\")\r\n        //         this.state.stompClient.disconnect();\r\n        //     }\r\n        // }\r\n\r\n        //return ()=> stompClient && stompClient.disconnect();\r\n        // var options = {\r\n        //     root: null,\r\n        //     rootMargin: \"0px\",\r\n        //     threshold: 0.75\r\n        // };\r\n\r\n        // this.observer = new IntersectionObserver(\r\n        //     this.handleObserver.bind(this),\r\n        //     options\r\n        // );\r\n        // this.observer.observe(this.loadingRef);\r\n    }\r\n    // handleObserver = (entities, observer) => {\r\n    //     const y = entities[0].boundingClientRect.y;\r\n    //     console.log(y);\r\n    //     console.log(this.state.prevY);\r\n    //     if (this.state.prevY > y) {\r\n    //         this.loadPostList(this.state.page + 1);\r\n    //     } if (this._isMounted) {\r\n    //         this.setState({ prevY: y });\r\n    //     }\r\n    // }\r\n    componentDidUpdate(nextProps) {\r\n        //console.log(\"didupdate\")\r\n        if (this.props.isAuthenticated !== nextProps.isAuthenticated || this.props.match.params.code !== nextProps.match.params.code) {\r\n            // Reset State \r\n            //console.log(\"next\")\r\n            // if (this._isMounted) {\r\n            this.setState({\r\n                posts: [],\r\n                page: 0,\r\n                size: 10,\r\n                totalElements: 0,\r\n                totalPages: 0,\r\n                last: false,\r\n                currentVotes: [],\r\n                isLoading: false,\r\n                visible: false,\r\n                currentPollIndex: 0,\r\n                currentPostIndex: 0,\r\n                currentValue: '',\r\n                prevY: 0,\r\n                visibleListVoted: false,\r\n                votedUsers: [],\r\n                pageVoted: 0,\r\n                currentChoiceId: 0,\r\n                isLoading2: false,\r\n                last2: false,\r\n                check: 0,\r\n                visiblePost: false\r\n            });\r\n            // if (this.state.stompClient != null) {\r\n            //     //console.log(\"disccccccccccccccccccccccco\")\r\n            //     this.state.stompClient.send('/app/stop', {});\r\n            //     this.state.stompClient.disconnect();\r\n            // }\r\n            this.loadPostList();\r\n            // }\r\n\r\n        }\r\n    }\r\n\r\n    handleLoadMore = (page) => {\r\n        //console.log(page);\r\n        //console.log(this.state.isLoading)\r\n        this.loadPostList(page);\r\n    }\r\n    handleLoadMoreUserVoted = () => {\r\n        this.loadListVoted(this.state.currentChoiceId, this.state.pageVoted + 1)\r\n    }\r\n    handleLoadMoreUsernoVoted = () => {\r\n        this.loadListNoVoted(this.state.currentPostId, this.state.pagenoVoted + 1)\r\n    }\r\n    handleVoteChange(event, pollIndex, postIndex) {\r\n        const currentVotes = this.state.currentVotes.slice();\r\n        currentVotes[postIndex][pollIndex] = event.target.value;\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                currentVotes: currentVotes\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handleVoteSubmit(event, pollIndex, postIndex) {\r\n        event.preventDefault();\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to vote.\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        const poll = this.state.posts[postIndex].polls[pollIndex];\r\n        const selectedChoice = this.state.currentVotes[postIndex][pollIndex];\r\n\r\n        const voteData = {\r\n            pollId: poll.id,\r\n            choiceId: selectedChoice\r\n        };\r\n\r\n        castVote(voteData)\r\n            .then(response => {\r\n                const posts = this.state.posts.slice();\r\n                posts[postIndex] = response;\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        posts: posts\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    handleCancel = () => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visible: false,\r\n                currentPollIndex: 0,\r\n                currentPostIndex: 0,\r\n                currentValue: ''\r\n            })\r\n        }\r\n    }\r\n    handleCancelComment = () => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visibleCommentDelete: false,\r\n                currentCommentIndex: 0,\r\n                currentPostIndex: 0,\r\n            })\r\n        }\r\n    }\r\n    handleCancelReply = () => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visibleReplyDelete: false,\r\n                currentCommentIndex: 0,\r\n                currentPostIndex: 0,\r\n                currentReplyIndex: 0\r\n            })\r\n        }\r\n    }\r\n    handleCancelPost = () => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visiblePost: false,\r\n                currentPostIndex: 0\r\n            })\r\n        }\r\n    }\r\n    handleCancelReportPost = () => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visibleReportPost: false,\r\n                currentPostIndex: 0\r\n            })\r\n        }\r\n    }\r\n    handleCancelListVoted = () => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visibleListVoted: false,\r\n                votedUsers: [],\r\n                isLoading2: false,\r\n                last2: false\r\n            })\r\n        }\r\n    }\r\n    handleCancelListnoVoted = () => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visibleListnoVoted: false,\r\n                novotedUsers: [],\r\n                isLoading3: false,\r\n                last3: false\r\n            })\r\n        }\r\n    }\r\n    loadListVoted = (choiceId, page = 0, size = USER_LIST_SIZE) => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                isLoading2: true\r\n            })\r\n        }\r\n\r\n        //     if (this._isMounted) {\r\n        //         this.setState({\r\n        //             posts: posts.concat(response.content),\r\n        //             page: response.page,\r\n        //             size: response.size,\r\n        //             totalElements: response.totalElements,\r\n        //             totalPages: response.totalPages,\r\n        //             last: response.last,\r\n        //             currentVotes: currentVotes2,\r\n        //             isLoading: false\r\n        //         })\r\n        //     }\r\n        // }\r\n        getAllUserVotedChoice(choiceId, page, size)\r\n            .then(response => {\r\n                const votedUsers = this.state.votedUsers.slice();\r\n                if (this.state.last2 !== true) {\r\n                    if (this._isMounted) {\r\n                        this.setState({\r\n                            votedUsers: votedUsers.concat(response.content),\r\n                            currentChoiceId: choiceId,\r\n                            pageVoted: page,\r\n                            last2: response.last,\r\n                            isLoading2: false\r\n                        });\r\n                    }\r\n                }\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        isLoading2: false\r\n                    })\r\n                }\r\n            });\r\n    }\r\n    loadListNoVoted = (postId, page = 0, size = USER_LIST_SIZE) => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                isLoading3: true\r\n            })\r\n        }\r\n\r\n        getAllUserNoVoted(postId, page, size)\r\n            .then(response => {\r\n                const novotedUsers = this.state.novotedUsers.slice();\r\n                if (this.state.last3 !== true) {\r\n                    if (this._isMounted) {\r\n                        this.setState({\r\n                            novotedUsers: novotedUsers.concat(response.content),\r\n                            currentPostId: postId,\r\n                            pagenoVoted: page,\r\n                            last3: response.last,\r\n                            isLoading3: false\r\n                        });\r\n                    }\r\n                }\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        isLoading3: false\r\n                    })\r\n                }\r\n            });\r\n    }\r\n    showModalListVoted = (choiceId, page = 0, size = USER_LIST_SIZE) => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visibleListVoted: true\r\n            })\r\n        }\r\n        this.loadListVoted(choiceId, page, size);\r\n    }\r\n    showModalNoVoted = (postId, page = 0, size = USER_LIST_SIZE) => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visibleListnoVoted: true\r\n            })\r\n        }\r\n        this.loadListNoVoted(postId, page, size);\r\n    }\r\n\r\n\r\n    showModal = (event, postIndex, pollIndex) => {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visible: true,\r\n                currentPollIndex: pollIndex,\r\n                currentPostIndex: postIndex,\r\n                currentValue: event.currentTarget.value\r\n            })\r\n        }\r\n    }\r\n    showModalComment = ( postIndex, commentIndex) => {\r\n        console.log(commentIndex);\r\n        console.log(postIndex);\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visibleCommentDelete: true,\r\n                currentPostIndex: postIndex,\r\n                currentCommentIndex: commentIndex\r\n            })\r\n        }\r\n    }\r\n    showModalReply = ( postIndex, commentIndex , replyIndex) => {\r\n        console.log(commentIndex);\r\n        console.log(postIndex);\r\n        console.log(replyIndex);\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visibleReplyDelete: true,\r\n                currentPostIndex: postIndex,\r\n                currentCommentIndex: commentIndex,\r\n                currentReplyIndex: replyIndex\r\n            })\r\n        }\r\n    }\r\n    handleDeleteVoteSubmit = (event, postIndex, pollIndex) => {\r\n        event.preventDefault();\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to delete.\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        const poll = this.state.posts[postIndex].polls[pollIndex];\r\n        const selectedChoice = event.currentTarget.value;\r\n\r\n        const voteData = {\r\n            choiceId: selectedChoice\r\n        };\r\n\r\n        deleteVote(poll.id, voteData)\r\n            .then(response => {\r\n                const posts = this.state.posts.slice();\r\n                posts[postIndex] = response;\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        posts: posts\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    onEndPoll = (event, postIndex, pollIndex) => {\r\n        event.preventDefault();\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to update.\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        const poll = this.state.posts[postIndex].polls[pollIndex];\r\n\r\n        endPoll(poll.id)\r\n            .then(response => {\r\n                const posts = this.state.posts.slice();\r\n                posts[postIndex] = response;\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        posts: posts\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    handleDeleteChoiceSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to delete.\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        const poll = this.state.posts[this.state.currentPostIndex].polls[this.state.currentPollIndex];\r\n\r\n        const voteData = {\r\n            choiceId: this.state.currentValue\r\n        };\r\n\r\n        deleteChoice(poll.id, voteData)\r\n            .then(response => {\r\n                const posts = this.state.posts.slice();\r\n                posts[this.state.currentPostIndex] = response;\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        posts: posts\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visible: false\r\n            });\r\n        }\r\n    }\r\n    \r\n    handleDeleteCommentSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to delete.\",\r\n            });\r\n            return;\r\n        }\r\n        const postIndex = this.state.currentPostIndex;\r\n        const commentIndex = this.state.currentCommentIndex;\r\n        const comment = this.state.comments.slice();\r\n        const posts = this.state.posts.slice();\r\n        deleteComment(posts[postIndex].id,comment[postIndex][commentIndex].id)\r\n            .then(response => {\r\n                posts[postIndex].totalComment--;\r\n                comment[postIndex].splice(commentIndex,1);\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        posts: posts,\r\n                        comments: comment\r\n                    });\r\n                }\r\n                notification.success({\r\n                    message: 'Polling App',\r\n                    description: response.message || 'Delete comment success!'\r\n                });\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visibleCommentDelete: false\r\n            });\r\n        }\r\n    }\r\n    handleDeleteReplySubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to delete.\",\r\n            });\r\n            return;\r\n        }\r\n        const postIndex = this.state.currentPostIndex;\r\n        const commentIndex = this.state.currentCommentIndex;\r\n        const replyIndex = this.state.currentReplyIndex;\r\n        const comment = this.state.comments.slice();\r\n        const posts = this.state.posts.slice();\r\n        deleteReply(posts[postIndex].id,comment[postIndex][commentIndex].id,comment[postIndex][commentIndex].replys[replyIndex].id)\r\n            .then(response => {\r\n                comment[postIndex][commentIndex].replys.splice(replyIndex,1);\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        comments: comment\r\n                    });\r\n                }\r\n                notification.success({\r\n                    message: 'Polling App',\r\n                    description: response.message || 'Delete comment success!'\r\n                });\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                visibleReplyDelete: false\r\n            });\r\n        }\r\n    }\r\n    updateName = (value, index) => {\r\n        const posts = this.state.posts;\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push(\"/login\");\r\n            notification.info({\r\n                message: 'Polling App',\r\n                description: \"Please login to update.\",\r\n            });\r\n            return;\r\n        }\r\n        updatePostName(posts[index].id, value)\r\n            .then(response => {\r\n                notification.success({\r\n                    message: 'Polling App',\r\n                    description: \"Thank you! You're successfully update post name!\",\r\n                });\r\n                posts[index].question = value;\r\n                this.setState({\r\n                    posts: posts\r\n                })\r\n                this.props.history.push(\"/post/\" + posts[index].id);\r\n            }).catch(error => {\r\n                notification.error({\r\n                    message: 'Polling App',\r\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                });\r\n            });\r\n\r\n\r\n    }\r\n    onChangeReason=(event)=>{\r\n        this.setState({\r\n            reasonReport: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const style = {\r\n            height: 40,\r\n            width: 40,\r\n            lineHeight: '40px',\r\n            borderRadius: 4,\r\n            backgroundColor: '#fff',\r\n            color: 'rgb(0 0 0)',\r\n            textAlign: 'center',\r\n            fontSize: 14,\r\n            boxShadow: '0 2px 2px 0 rgb(0 0 0 / 16%), 0 0 0 1px rgb(0 0 0 / 8%)',\r\n        };\r\n        const postViews = [];\r\n        this.state.posts.forEach((post, postIndex) => {\r\n            postViews.push(<Post\r\n                // onChangeNamePost = {this.onChangeNamePost}\r\n                onLoadMoreComment = {this.onLoadMoreComment}\r\n                onDeleteReply = {this.showModalReply}\r\n                onDeleteComment = {this.showModalComment}\r\n                showComment={this.state.showComment[postIndex]}\r\n                comments={this.state.comments[postIndex]}\r\n                pageComment={this.state.pageComment[postIndex]}\r\n                isLastComment={this.state.isLastComment[postIndex]}\r\n                submittingComment={this.state.submittingComment[postIndex]}\r\n                valueComment={this.state.valueComment[postIndex]}\r\n                showReply={this.state.showReply[postIndex]}\r\n                valueReply={this.state.valueReply[postIndex]}\r\n                submittingReply={this.state.submittingReply[postIndex]}\r\n                handleChangeComment={this.handleChangeComment}\r\n                handleSubmitComment={this.handleSubmitComment}\r\n                onComment={this.onComment}\r\n                onReply={this.onReply}\r\n                handleChangeReply={this.handleChangeReply}\r\n                handleSubmitReply={this.handleSubmitReply}\r\n                updateName={this.updateName}\r\n                onFollowPost={this.onFollowPost}\r\n                deleteFollowPost={this.deleteFollowPost}\r\n                onDeletePost={this.showModalDeletePost}\r\n                onReportPost={this.showModalReportPost}\r\n                onLikePost={this.onLikePost}\r\n                currentUser={this.props.currentUser}\r\n                key={post.id}\r\n                post={post}\r\n                currentVote={this.state.currentVotes[postIndex]}\r\n                postIndex={postIndex}\r\n                addAChoice={this.addAChoice}\r\n                handleDeleteChoiceSubmit={this.showModal}\r\n                handleShowListVoted={this.showModalListVoted}\r\n                handleShowListNoVoted={this.showModalNoVoted}\r\n                handleDeleteVoteSubmit={this.handleDeleteVoteSubmit}\r\n                onEndPoll={this.onEndPoll}\r\n                handleVoteChange={this.handleVoteChange}\r\n                handleVoteSubmit={this.handleVoteSubmit} />)\r\n        });\r\n        // const votedUsers = [];\r\n        // this.state.votedUsers.forEach((user, userIndex) => {\r\n        //     const title = user.name + ' @ ' + user.username;\r\n        //     const des = \"Voted :\" + user.count;\r\n        //     votedUsers.push(\r\n        // <Card >\r\n        //     <Meta\r\n        //       avatar={\r\n        //         <Avatar\r\n        //                     style={{ backgroundColor: getAvatarColor(user.name) }} >\r\n        //                     {user.name[0].toUpperCase()}\r\n        //                 </Avatar>\r\n        //       }\r\n        //       title=  {title}\r\n        //       description={des}\r\n        //     />\r\n        //   </Card>\r\n        // <div className=\"poll-creator-info\">\r\n        //     <Link className=\"creator-link\" to={`/users/${user.username}`}>\r\n        //         <Avatar className=\"poll-creator-avatar\"\r\n        //             style={{ backgroundColor: getAvatarColor(user.name) }} >\r\n        //             {user.name[0].toUpperCase()}\r\n        //         </Avatar>\r\n        //         <span className=\"poll-creator-name\">\r\n        //             {user.name}\r\n        //         </span>\r\n        //         <span className=\"poll-creator-username\">\r\n        //             @{user.username}\r\n        //         </span>\r\n        //     </Link>\r\n        //     <span className=\"poll-creation-date\">\r\n        //         Voted: {user.count}\r\n        //     </span>\r\n        // </div>\r\n\r\n        //     )\r\n        // })\r\n        // votedUsers.push(<div>\r\n        //     {\r\n        //         !this.state.isLoadingVoted && !this.state.lastVoted ? (\r\n        //             <div className=\"load-more-polls\">\r\n        //                 <Button type=\"dashed\" onClick={this.handleLoadUserVotedMore} disabled={this.state.isLoadingVoted}>\r\n        //                     <Icon type=\"plus\" /> Load more\r\n        //                 </Button>\r\n        //             </div>) : null\r\n        //     }</div>\r\n        // )\r\n        return (\r\n            <div className=\"polls-container\">\r\n                <Modal\r\n                    title=\"Confirm your action\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleDeleteChoiceSubmit}\r\n                    onCancel={this.handleCancel}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.handleCancel}>\r\n                            Return\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" onClick={this.handleDeleteChoiceSubmit}>\r\n                            Submit\r\n                        </Button>,\r\n                    ]}\r\n                ><p>Are you want delete this choice?</p>\r\n                </Modal>\r\n                <Modal\r\n                    title=\"Confirm your action\"\r\n                    visible={this.state.visibleReplyDelete}\r\n                    onOk={this.handleDeleteReplySubmit}\r\n                    onCancel={this.handleCancelReply}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.handleCancelReply}>\r\n                            Return\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" onClick={this.handleDeleteReplySubmit}>\r\n                            Submit\r\n                        </Button>,\r\n                    ]}\r\n                ><p>Are you want delete this reply?</p>\r\n                </Modal>\r\n                <Modal\r\n                    title=\"Confirm your action\"\r\n                    visible={this.state.visiblePost}\r\n                    onOk={this.handleDeletePostSubmit}\r\n                    onCancel={this.handleCancelPost}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.handleCancelPost}>\r\n                            Return\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" onClick={this.handleDeletePostSubmit}>\r\n                            Submit\r\n                        </Button>,\r\n                    ]}\r\n                ><p>Are you want delete this post?</p>\r\n                </Modal>\r\n                <Modal\r\n                    title=\"Confirm your action\"\r\n                    visible={this.state.visibleReportPost}\r\n                    onOk={this.handleReportPostSubmit}\r\n                    onCancel={this.handleCancelReportPost}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.handleCancelReportPost}>\r\n                            Return\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" onClick={this.handleReportPostSubmit}>\r\n                            Submit\r\n                        </Button>,\r\n                    ]}\r\n                ><p>Are you want Report this post?</p>\r\n                <Input placeholder=\"Reason...\" value={this.state.reasonReport} onChange={this.onChangeReason} onPressEnter={this.handleReportPostSubmit}></Input>\r\n                </Modal>\r\n                <Modal\r\n                    title=\"Confirm your action\"\r\n                    visible={this.state.visibleCommentDelete}\r\n                    onOk={this.handleDeleteCommentSubmit}\r\n                    onCancel={this.handleCancelComment}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.handleCancelComment}>\r\n                            Return\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" onClick={this.handleDeleteCommentSubmit}>\r\n                            Submit\r\n                        </Button>,\r\n                    ]}\r\n                ><p>Are you want delete this comment?</p>\r\n                </Modal>\r\n                <Modal\r\n                    title=\"List User Voted This Choice\"\r\n                    centered\r\n                    visible={this.state.visibleListVoted}\r\n                    onCancel={this.handleCancelListVoted}\r\n\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.handleCancelListVoted}>\r\n                            Return\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={this.state.votedUsers}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    avatar={item.photo == null ?\r\n                                        <Avatar className=\"poll-creator-avatar2\"\r\n                                            style={{ backgroundColor: getAvatarColor(item.name) }} >\r\n                                            {item.name[0].toUpperCase()}\r\n                                        </Avatar> : <Avatar className=\"poll-creator-avatar2\"\r\n                                            //src={API_BASE_URL + \"/file/getImage/\" + item.photo} \r\n                                            src={\"https://drive.google.com/uc?export=view&id=\"+item.photo}\r\n                                            >\r\n                                        </Avatar>\r\n                                    }\r\n                                    title={<div>{item.name} <span style={{ color: '#657786' }}>@{item.username}</span></div>}\r\n                                    description={<span>Voted: {item.count}</span>}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                    {\r\n                        !this.state.isLoading2 && !this.state.last2 ? (\r\n                            <div className=\"load-more-polls\">\r\n                                <Button type=\"dashed\" onClick={this.handleLoadMoreUserVoted} disabled={this.state.isLoading2}>\r\n                                    <PlusOutlined /> Load more\r\n                                </Button>\r\n                            </div>) : null\r\n                    }\r\n                    {\r\n                        this.state.isLoading2 ?\r\n                            <LoadingIndicator /> : null\r\n                    }\r\n                </Modal>\r\n                <Modal\r\n                    title=\"Danh sách user chưa vote\"\r\n                    centered\r\n                    visible={this.state.visibleListnoVoted}\r\n                    onCancel={this.handleCancelListnoVoted}\r\n\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.handleCancelListnoVoted}>\r\n                            Return\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={this.state.novotedUsers}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    avatar={item.photo == null ?\r\n                                        <Avatar className=\"poll-creator-avatar2\"\r\n                                            style={{ backgroundColor: getAvatarColor(item.name) }} >\r\n                                            {item.name[0].toUpperCase()}\r\n                                        </Avatar> : <Avatar className=\"poll-creator-avatar2\"\r\n                                            //src={API_BASE_URL + \"/file/getImage/\" + item.photo} \r\n                                            src={\"https://drive.google.com/uc?export=view&id=\"+item.photo}\r\n                                            >\r\n                                        </Avatar>\r\n                                    }\r\n                                    title={<div>{item.name} <span style={{ color: '#657786' }}>@{item.username}</span></div>}\r\n                                    // description={<span>Voted: {item.count}</span>}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                    {\r\n                        !this.state.isLoading3 && !this.state.last3 ? (\r\n                            <div className=\"load-more-polls\">\r\n                                <Button type=\"dashed\" onClick={this.handleLoadMoreUsernoVoted} disabled={this.state.isLoading3}>\r\n                                    <PlusOutlined /> Load more\r\n                                </Button>\r\n                            </div>) : null\r\n                    }\r\n                    {\r\n                        this.state.isLoading3 ?\r\n                            <LoadingIndicator /> : null\r\n                    }\r\n                </Modal>\r\n                <InfiniteScroll\r\n                    initialLoad={false}\r\n                    pageStart={this.state.page}\r\n                    loadMore={this.handleLoadMore}\r\n                    hasMore={!this.state.isLoading && !this.state.last}\r\n                    // hasMore={true}\r\n                    threshold={1500}\r\n                    useWindow={true}\r\n                >\r\n                    {postViews}\r\n                    {this.state.isloading && (\r\n                        <div className=\"demo-loading-container\">\r\n                            <LoadingIndicator />\r\n                        </div>\r\n                    )}\r\n                </InfiniteScroll>\r\n                {/* <InfiniteScroll\r\n                    initialLoad={false}\r\n                    pageStart={0}\r\n                    loadMore={this.handleLoadMore}\r\n                    hasMore={!this.state.isloading}\r\n                    loader={<div className=\"loader\" key={0}>Loading ...</div>}\r\n                    // hasMore={true}\r\n                    useWindow={true}\r\n                >\r\n                    {postViews}\r\n                    {this.state.isloading &&  (\r\n                        <div className=\"demo-loading-container\">\r\n                            <LoadingIndicator />\r\n                        </div>\r\n                    )}\r\n                </InfiniteScroll> */}\r\n                {/* {\r\n                    !this.state.isLoading && this.state.posts.length === 0 ? (\r\n                        <div className=\"no-polls-found\">\r\n                            <span>No Polls Found.</span>\r\n                        </div>\r\n                    ) : null\r\n                }\r\n\r\n                <div\r\n                    ref={(loadingRef) => (this.loadingRef = loadingRef)}\r\n\r\n                >\r\n                    {\r\n                        !this.state.isLoading && !this.state.last ? (\r\n                            <div className=\"load-more-polls\">\r\n                                <Button type=\"dashed\" onClick={this.handleLoadMore} disabled={this.state.isLoading}>\r\n                                    <PlusOutlined /> Load more\r\n                                </Button>\r\n                            </div>) : null\r\n                    }\r\n                </div>\r\n                {\r\n                    this.state.isLoading ?\r\n                        <LoadingIndicator /> : null\r\n                } */}\r\n                <BackTop>\r\n                    <div style={style}><VerticalAlignTopOutlined /></div>\r\n                </BackTop>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(PostList);","import React, { Component } from 'react';\r\nimport { createPoll, getListUser, getListGroup,deleteImage } from '../util/APIUtils';\r\nimport { MAX_CHOICES, POLL_QUESTION_MAX_LENGTH, POLL_CHOICE_MAX_LENGTH,USER_MAX_LENGTH,GROUP_MAX_LENGTH } from '../constants';\r\nimport './NewPost.css';\r\nimport { Avatar, Form, Input, Button, Select, Col, notification, Switch, InputNumber, Row } from 'antd';\r\nimport { Mentions, Upload } from 'antd';\r\nimport {\r\n    CloseOutlined, UploadOutlined,PlusOutlined\r\n} from '@ant-design/icons';\r\nimport { API_BASE_URL,  ACCESS_TOKEN } from '../constants';\r\nimport moment from 'moment';\r\nimport { DatePicker, Space } from 'antd';\r\nimport { getAvatarColor } from '../util/Colors';\r\nconst Option = Select.Option;\r\nconst { getMentions } = Mentions;\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input\r\n\r\nclass NewPoll extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            question: {\r\n                text: ''\r\n            },\r\n            polls: [{\r\n                question: {\r\n                    text: ''\r\n                },\r\n                choices: [{\r\n                    text: '',\r\n                    photo: null,\r\n                    review: null\r\n                }, {\r\n                    text: '',\r\n                    photo: null,\r\n                    review: null\r\n                }],\r\n                pollLength: {\r\n                    days: 1,\r\n                    hours: 0\r\n                },\r\n                photo: '',\r\n                isUnseenUserForVote: false,\r\n                isUnseenUserForAddChoice: false,\r\n                isAddChoice: false,\r\n                isCanFix: true,\r\n                showResultCase: 1,\r\n                maxVotePerTimeLoad: 1,\r\n                maxVotePerChoice: 1,\r\n                maxVoteOfPoll: 1,\r\n                timeLoad: {\r\n                    days: 0,\r\n                    hours: 0\r\n                },\r\n                isHasPollLength: true\r\n            }],\r\n            isUnseenOwner: false,\r\n            showCase: 3,\r\n            publicDateMoment: '',\r\n            publicDate: '',\r\n            isDelay: false,\r\n            users: [],\r\n            groups: [],\r\n            usersSend: [],\r\n            groupsSend: [],\r\n            search: '',\r\n            loading: false\r\n        };\r\n        // this.addChoice = this.addChoice.bind(this);\r\n        // this.addPoll = this.addPoll.bind(this);\r\n        // this.removeChoice = this.removeChoice.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        // this.handleQuestionChange = this.handleQuestionChange.bind(this);\r\n        // this.handleChoiceChange = this.handleChoiceChange.bind(this);\r\n        // this.handlePollDaysChange = this.handlePollDaysChange.bind(this);\r\n        // this.handlePollHoursChange = this.handlePollHoursChange.bind(this);\r\n        // this.handleTimeLoadDaysChange = this.handleTimeLoadDaysChange.bind(this);\r\n        // this.handleTimeLoadHoursChange = this.handleTimeLoadHoursChange.bind(this);\r\n        // this.handleQuestionForPostChange = this.handleQuestionForPostChange.bind(this);\r\n        this.isFormInvalid = this.isFormInvalid.bind(this);\r\n        // this.handleShowResultCaseChange = this.handleShowResultCaseChange.bind(this);\r\n        // this.handleShowCaseChange = this.handleShowCaseChange.bind(this);\r\n        // this.loadUserList = this.loadUserList.bind(this);\r\n        this.handlePublicDateChange = this.handlePublicDateChange.bind(this);\r\n        // this.onSelect = this.onSelect.bind(this);\r\n        // this.onSelectGroup = this.onSelectGroup.bind(this);\r\n        // this.loadGroupList = this.loadGroupList.bind(this);\r\n    }\r\n\r\n    handlePublicDateChange(dateString) {\r\n        //console.log(dateString.format(\"DD-MM-YYYY HH:mm:ss\"));\r\n        this.setState({\r\n            publicDateMoment: dateString\r\n        })\r\n    }\r\n    range = (start, end) => {\r\n        const result = [];\r\n        for (let i = start; i < end; i++) {\r\n            result.push(i);\r\n        }\r\n        return result;\r\n    }\r\n    disabledDate = (current) => {\r\n        // Can not select days before today and today\r\n        return current < moment().endOf('day');\r\n    }\r\n    disabledDateTime = () => {\r\n        // if(current.get('day')===moment().get('day')){\r\n\r\n\r\n        // return {\r\n        //     disabledHours: () => this.range(0, 4),\r\n        //     disabledMinutes: () => this.range(30, 60),\r\n        //     disabledSeconds: () => [55, 56],\r\n        // };}\r\n        // else {\r\n        return {\r\n            disabledHours: () => this.range(0, 0),\r\n            disabledMinutes: () => this.range(0, 0),\r\n            disabledSeconds: () => this.range(0, 0),\r\n        };\r\n        //}\r\n    }\r\n    addChoice = (event, indexPoll)=> {\r\n        const polls = this.state.polls.slice();\r\n        const choices = polls[indexPoll].choices.slice();\r\n        polls[indexPoll].choices = choices.concat([{\r\n            text: '',\r\n            photo: null,\r\n            review: null\r\n        }])\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n    addPoll = (event)=> {\r\n        const polls = this.state.polls.slice();\r\n\r\n        this.setState({\r\n            polls: polls.concat([{\r\n                question: {\r\n                    text: ''\r\n                },\r\n                choices: [{\r\n                    text: '',\r\n                    photo: null,\r\n                    review: null\r\n                }, {\r\n                    text: '',\r\n                    photo: null,\r\n                    review: null\r\n                }],\r\n                pollLength: {\r\n                    days: 1,\r\n                    hours: 0\r\n                },\r\n                photo: '',\r\n                isUnseenUserForVote: false,\r\n                isUnseenUserForAddChoice: false,\r\n                isAddChoice: false,\r\n                isCanFix: true,\r\n                showResultCase: 1,\r\n                maxVotePerTimeLoad: 1,\r\n                maxVotePerChoice: 1,\r\n                maxVoteOfPoll: 1,\r\n                timeLoad: {\r\n                    days: 0,\r\n                    hours: 0\r\n                },\r\n                isHasPollLength: true\r\n            }])\r\n        });\r\n    }\r\n    removeChoice=(choiceNumber, pollNumber)=> {\r\n        const polls = this.state.polls.slice();\r\n        const choices = polls[pollNumber].choices.slice();\r\n        //choices = [...choices.slice(0, choiceNumber), ...choices.slice(choiceNumber + 1)]\r\n        polls[pollNumber].choices = [...choices.slice(0, choiceNumber), ...choices.slice(choiceNumber + 1)];\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n    removePoll=(pollNumber)=> {\r\n        const polls = this.state.polls.slice();\r\n        //choices = [...choices.slice(0, choiceNumber), ...choices.slice(choiceNumber + 1)]\r\n        this.setState({\r\n            polls:  [...polls.slice(0, pollNumber), ...polls.slice(pollNumber + 1)]\r\n        });\r\n    }\r\n    onSearch = search => {\r\n        this.setState({ search, loading: !!search });\r\n        //console.log('Search:', search);\r\n        this.loadUserList(search);\r\n    }\r\n    onSearchGroup = search => {\r\n        this.setState({ search, loading: !!search });\r\n        //console.log('Search:', search);\r\n        this.loadGroupList(search);\r\n    }\r\n    loadUserList = (key) => {\r\n        let promise;\r\n        promise = getListUser(key, \"username\");\r\n\r\n        if (!promise) {\r\n            return;\r\n        }\r\n        promise\r\n            .then(response => {\r\n                let users = response.filter((user) => {\r\n                    var check = true;\r\n                    this.state.usersSend.forEach((userSend) => {\r\n                        if (user.username === userSend) {\r\n                            check = false;\r\n                        }\r\n                    })\r\n                    return check;\r\n                })\r\n                this.setState({\r\n                    users: users,\r\n                    loading: false,\r\n                })\r\n\r\n\r\n\r\n            }).catch(error => {\r\n                // this.setState({\r\n                //     users: response\r\n                // })\r\n            });\r\n\r\n    }\r\n    loadGroupList = (key) => {\r\n        let promise;\r\n        promise = getListGroup(key);\r\n\r\n        if (!promise) {\r\n            return;\r\n        }\r\n        promise\r\n            .then(response => {\r\n                let groups = response.filter((group) => {\r\n                    var check = true;\r\n                    this.state.groupsSend.forEach((groupSend) => {\r\n                        if (group.code === groupSend) {\r\n                            check = false;\r\n                        }\r\n                    })\r\n                    return check;\r\n                })\r\n                this.setState({\r\n                    groups: groups,\r\n                    loading: false,\r\n                })\r\n\r\n\r\n\r\n            }).catch(error => {\r\n                // this.setState({\r\n                //     users: response\r\n                // })\r\n            });\r\n\r\n    }\r\n    handleSubmit() {\r\n        const pollData = {\r\n            question: this.state.question.text,\r\n            polls: this.state.polls.map(poll => {\r\n                if(poll.isHasPollLength){\r\n                    return {\r\n                        question: poll.question.text,\r\n                        choices: poll.choices.map(choice => {\r\n                            return {\r\n                                text: choice.text,\r\n                                photo: choice.photo,\r\n                                review: choice.review\r\n                            }\r\n                        }),\r\n                        photo: poll.photo,\r\n                        pollLength: poll.pollLength,\r\n                        isUnseenUserForVote: poll.isUnseenUserForVote,\r\n                        isUnseenUserForAddChoice: poll.isUnseenUserForAddChoice,\r\n                        isAddChoice: poll.isAddChoice,\r\n                        isCanFix: poll.isCanFix,\r\n                        showResultCase: poll.showResultCase,\r\n                        maxVotePerTimeLoad: poll.maxVotePerTimeLoad,\r\n                        maxVotePerChoice: poll.maxVotePerChoice,\r\n                        maxVoteOfPoll: poll.maxVoteOfPoll,\r\n                        timeLoad: poll.timeLoad\r\n                    }\r\n                }\r\n                else{\r\n                    return {\r\n                        question: poll.question.text,\r\n                        choices: poll.choices.map(choice => {\r\n                            return {\r\n                                text: choice.text,\r\n                                photo: choice.photo,\r\n                                review: choice.review\r\n                            }\r\n                        }),\r\n                        photo: poll.photo,\r\n                        isUnseenUserForVote: poll.isUnseenUserForVote,\r\n                        isUnseenUserForAddChoice: poll.isUnseenUserForAddChoice,\r\n                        isAddChoice: poll.isAddChoice,\r\n                        isCanFix: poll.isCanFix,\r\n                        showResultCase: poll.showResultCase,\r\n                        maxVotePerTimeLoad: poll.maxVotePerTimeLoad,\r\n                        maxVotePerChoice: poll.maxVotePerChoice,\r\n                        maxVoteOfPoll: poll.maxVoteOfPoll,\r\n                        timeLoad: poll.timeLoad\r\n                    }\r\n                }\r\n            })\r\n            ,\r\n            isUnseenOwner: this.state.isUnseenOwner,\r\n            showCase: this.state.showCase,\r\n            publicDate: null,\r\n            usersUsername: this.state.usersSend,\r\n            groups: this.state.groupsSend\r\n        };\r\n        if (this.state.isDelay) {\r\n            if (this.state.publicDateMoment !== '') {\r\n                pollData.publicDate = this.state.publicDateMoment.format(\"DD-MM-YYYY HH:mm:ss\")\r\n            }\r\n\r\n        }\r\n        //console.log(pollData);\r\n        createPoll(pollData)\r\n            .then(response => {\r\n                this.props.history.push(\"/\");\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login create poll.');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    validateQuestion = (questionText) => {\r\n        if (questionText.length === 0) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Please enter your question!'\r\n            }\r\n        } else if (questionText.length > POLL_QUESTION_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Question is too long (Maximum ${POLL_QUESTION_MAX_LENGTH} characters allowed)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null\r\n            }\r\n        }\r\n    }\r\n\r\n    handleQuestionChange = (event, index) => {\r\n        const value = event.target.value;\r\n        const polls = this.state.polls.slice();\r\n        const pollitem = Object.assign(this.state.polls[index], {\r\n            question: {\r\n                text: value,\r\n                ...this.validateQuestion(value)\r\n            }\r\n        });\r\n        polls[index] = pollitem\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n\r\n    validateChoice = (choiceText) => {\r\n        if (choiceText.length === 0) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Please enter a choice!'\r\n            }\r\n        } else if (choiceText.length > POLL_CHOICE_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Choice is too long (Maximum ${POLL_CHOICE_MAX_LENGTH} characters allowed)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChoiceChange = (event, indexChoice, indexPoll) => {\r\n        const polls = this.state.polls.slice();\r\n        const value = event.target.value;\r\n        const choiceitem = Object.assign(this.state.polls[indexPoll].choices[indexChoice], {\r\n            text: value,\r\n            ...this.validateChoice(value)\r\n        });\r\n\r\n        polls[indexPoll].choices[indexChoice] = choiceitem\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n\r\n\r\n    handlePollDaysChange=(value, indexPoll)=> {\r\n        const polls = this.state.polls.slice();\r\n        const pollLength = Object.assign(polls[indexPoll].pollLength, { days: value });\r\n        polls[indexPoll].pollLength = pollLength;\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n\r\n    handlePollHoursChange = (value, indexPoll) => {\r\n        const polls = this.state.polls.slice();\r\n        const pollLength = Object.assign(polls[indexPoll].pollLength, { hours: value });\r\n        polls[indexPoll].pollLength = pollLength;\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n\r\n    handleTimeLoadDaysChange = (value, indexPoll) => {\r\n        const polls = this.state.polls.slice();\r\n        const timeLoad = Object.assign(polls[indexPoll].timeLoad, { days: value });\r\n        polls[indexPoll].timeLoad = timeLoad;\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n\r\n    handleTimeLoadHoursChange = (value, indexPoll) => {\r\n        const polls = this.state.polls.slice();\r\n        const timeLoad = Object.assign(polls[indexPoll].timeLoad, { hours: value });\r\n        polls[indexPoll].timeLoad = timeLoad;\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n\r\n    isFormInvalid() {\r\n        if (this.state.question.validateStatus !== 'success') {\r\n            return true;\r\n        }\r\n        if (this.state.showCase===5&&this.state.validateStatusGroup !== 'success'){\r\n            return true;\r\n        }\r\n        if (this.state.showCase===4&&this.state.validateStatusUser !== 'success'){\r\n            return true;\r\n        }\r\n        for (let i = 0; i < this.state.polls.length; i++) {\r\n            const poll = this.state.polls[i];\r\n            if (poll.question.validateStatus !== 'success') {\r\n                return true;\r\n            }\r\n            for (let j = 0; j < poll.choices.length; j++) {\r\n                const choice = poll.choices[j];\r\n                if (choice.validateStatus !== 'success') {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onChangeIsUnseenUserForVote = (indexPoll) => {\r\n        const polls = this.state.polls.slice();\r\n        const isUnseenUserForVote = polls[indexPoll].isUnseenUserForVote;\r\n        polls[indexPoll].isUnseenUserForVote = !isUnseenUserForVote;\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n    onChangeIsUnseenUserForAddChoice = (indexPoll) => {\r\n        const polls = this.state.polls.slice();\r\n        const isUnseenUserForAddChoice = polls[indexPoll].isUnseenUserForAddChoice;\r\n        polls[indexPoll].isUnseenUserForAddChoice = !isUnseenUserForAddChoice;\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n    onChangeIsAddChoice = (indexPoll) => {\r\n        const polls = this.state.polls.slice();\r\n        const isAddChoice = polls[indexPoll].isAddChoice;\r\n        polls[indexPoll].isAddChoice = !isAddChoice;\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n    onChangeIsCanFix = (indexPoll) => {\r\n        const polls = this.state.polls.slice();\r\n        const isCanFix = polls[indexPoll].isCanFix;\r\n        polls[indexPoll].isCanFix = !isCanFix;\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n    onChangeIsHasPollLength = (indexPoll) => {\r\n        const polls = this.state.polls.slice();\r\n        const isHasPollLength = polls[indexPoll].isHasPollLength;\r\n        polls[indexPoll].isHasPollLength = !isHasPollLength;\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n    onChangeIsUnseenOwner = () => {\r\n        this.setState({\r\n            isUnseenOwner: !this.state.isUnseenOwner\r\n        })\r\n    }\r\n    onChangeIsDelay = () => {\r\n        this.setState({\r\n            isDelay: !this.state.isDelay\r\n        })\r\n    }\r\n    handleChangemaxVoteOfPoll = (value, indexPoll) => {\r\n        const polls = this.state.polls.slice();\r\n        polls[indexPoll].maxVoteOfPoll = value;\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n    handleChangemaxVotePerChoice = (value, indexPoll) => {\r\n        const polls = this.state.polls.slice();\r\n        polls[indexPoll].maxVotePerChoice = value;\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n    handleChangemaxVotePerTimeLoad = (value, indexPoll) => {\r\n        const polls = this.state.polls.slice();\r\n        polls[indexPoll].maxVotePerTimeLoad = value;\r\n        if (polls[indexPoll].maxVoteOfPoll < value) { polls[indexPoll].maxVoteOfPoll = value };\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n    handleQuestionForPostChange = (event) =>{\r\n        const value = event.target.value;\r\n        this.setState({\r\n            question: {\r\n                text: value,\r\n                ...this.validateQuestion(value)\r\n            }\r\n        });\r\n    }\r\n    handleShowResultCaseChange = (value, indexPoll) => {\r\n        const polls = this.state.polls.slice();\r\n        const pollitem = Object.assign(polls[indexPoll], { showResultCase: value });\r\n        polls[indexPoll] = pollitem;\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n    handleShowCaseChange = (value) => {\r\n        this.setState({\r\n            showCase: value\r\n        })\r\n    }\r\n    onSelect = (value)=> {\r\n        const mentions = getMentions(value);\r\n        //console.log(mentions)\r\n        const usersSend = [];\r\n        mentions.forEach((mention) => {\r\n            usersSend.push(mention.value);\r\n        })\r\n        this.setState({\r\n            usersSend: usersSend,\r\n            ...this.validateUsers(usersSend)\r\n        })\r\n        //console.log(this.state.usersSend);\r\n    }\r\n    onSelectGroup =(value)=> {\r\n        const mentions = getMentions(value);\r\n        //console.log(mentions)\r\n        const groupsSend = [];\r\n        mentions.forEach((mention) => {\r\n            groupsSend.push(mention.value)\r\n        })\r\n        this.setState({\r\n            groupsSend: groupsSend,\r\n            ...this.validateGroups(groupsSend)\r\n        })\r\n        //console.log(this.state.usersSend);\r\n    }\r\n    validateGroups = (mentions) =>{\r\n        //console.log(mentions.length)\r\n        if (mentions.length === 0) {\r\n            return {\r\n                validateStatusGroup: 'error',\r\n                errorMsgGroup: 'Please enter a group code!'\r\n            }\r\n        } else if (mentions.length > GROUP_MAX_LENGTH) {\r\n            return {\r\n                validateStatusGroup: 'error',\r\n                errorMsgGroup: `Group is too much (Maximum ${GROUP_MAX_LENGTH} group allowed)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatusGroup: 'success',\r\n                errorMsgGroup: null\r\n            }\r\n        }\r\n    }\r\n    validateUsers = (mentions) =>{\r\n        //console.log(mentions.length)\r\n        if (mentions.length === 0) {\r\n            return {\r\n                validateStatusUser: 'error',\r\n                errorMsgUser: 'Please enter a username!'\r\n            }\r\n        } else if (mentions.length > USER_MAX_LENGTH) {\r\n            return {\r\n                validateStatusUser: 'error',\r\n                errorMsgUser: `User is too much (Maximum ${USER_MAX_LENGTH} user allowed)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatusUser: 'success',\r\n                errorMsgUser: null\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.loadUserList(\"\");\r\n        this.loadGroupList(\"\");\r\n    }\r\n    onChangeUpload = (info, indexPoll) => {\r\n        if (info.file.status !== \"uploading\") {\r\n            //console.log(info);\r\n            //console.log(this.state.polls);\r\n\r\n        }\r\n        if (info.fileList.length === 0) {\r\n            const polls = this.state.polls.slice();\r\n            deleteImage(polls[indexPoll].photo);\r\n            polls[indexPoll].photo = '';\r\n            this.setState({\r\n                polls: polls\r\n            });\r\n        }\r\n        if (info.file.status === \"done\") {\r\n            const polls = this.state.polls.slice();\r\n            //const isAddChoice = polls[indexPoll].isAddChoice;\r\n\r\n            //polls[indexPoll].photo = info.fileList[0].response.fileDownloadUri;\r\n            console.log(info.fileList[0].response);\r\n            polls[indexPoll].photo = info.fileList[0].response.id;\r\n            this.setState({\r\n                polls: polls\r\n            });\r\n\r\n            notification.success({\r\n                message: 'Polling App',\r\n                description: `${info.file.name} file uploaded successfully`,\r\n            });\r\n            // message.success(`${info.file.name} file uploaded successfully`);\r\n        } else if (info.file.status === \"error\") {\r\n            console.log(info);\r\n            if(info.file.response!=null){\r\n                notification.error({\r\n                    message: 'Polling App',\r\n                    description: `${info.file.response.message}`,\r\n                });\r\n            }else{\r\n                notification.error({\r\n                    message: 'Polling App',\r\n                    description: `${info.file.name} file upload failed. Max file size is 20MB`,\r\n                });\r\n            }\r\n            \r\n            //   message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n    }\r\n    onChangeUploadChoice = (info,indexChoice, indexPoll) => {\r\n        if (info.file.status !== \"uploading\") {\r\n            //console.log(info);\r\n            //console.log(this.state.polls);\r\n\r\n        }\r\n        if (info.fileList.length === 0) {\r\n            const polls = this.state.polls.slice();\r\n            deleteImage(polls[indexPoll].choices[indexChoice].photo);\r\n            const choiceitem = Object.assign(polls[indexPoll].choices[indexChoice], {\r\n                photo: null\r\n            });\r\n            polls[indexPoll].choices[indexChoice] = choiceitem\r\n            this.setState({\r\n                polls: polls\r\n            });\r\n        }\r\n        if (info.file.status === \"done\") {\r\n            const polls = this.state.polls.slice();\r\n            const choiceitem = Object.assign(this.state.polls[indexPoll].choices[indexChoice], {\r\n                photo: info.fileList[0].response.id\r\n            });\r\n\r\n        polls[indexPoll].choices[indexChoice] = choiceitem\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n\r\n            notification.success({\r\n                message: 'Polling App',\r\n                description: `${info.file.name} file uploaded successfully`,\r\n            });\r\n            // message.success(`${info.file.name} file uploaded successfully`);\r\n        } else if (info.file.status === \"error\") {\r\n            if(info.file.response!=null){\r\n                notification.error({\r\n                    message: 'Polling App',\r\n                    description: `${info.file.response.message}`,\r\n                });\r\n            }else{\r\n                notification.error({\r\n                    message: 'Polling App',\r\n                    description: `${info.file.name} file upload failed. Max file size is 20MB`,\r\n                });\r\n            }\r\n            //   message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n    }\r\n    handleChoiceChangeReview = (event, indexChoice, indexPoll)=> {\r\n        const polls = this.state.polls.slice();\r\n        const value = event.target.value;\r\n        const choiceitem = Object.assign(this.state.polls[indexPoll].choices[indexChoice], {\r\n            review: value,\r\n            ...this.validateChoice(this.state.polls[indexPoll].choices[indexChoice].text)\r\n        });\r\n\r\n        polls[indexPoll].choices[indexChoice] = choiceitem\r\n        this.setState({\r\n            polls: polls\r\n        });\r\n    }\r\n    render() {\r\n        //console.log(this.state.polls);\r\n        const childrenUser = [];\r\n        this.state.users.forEach((user, index) => {\r\n            childrenUser.push(<Option key={index} value={user.id}><Avatar className=\"poll-creator-avatar\"\r\n                style={{ backgroundColor: getAvatarColor(user.name) }} >\r\n                {user.name[0].toUpperCase()}\r\n            </Avatar>\r\n                <span className=\"poll-creator-name\">\r\n                    {user.name}\r\n                </span></Option>);\r\n        })\r\n\r\n\r\n        const pollViews = [];\r\n\r\n        this.state.polls.forEach((poll, index) => {\r\n            const choiceViews = [];\r\n            poll.choices.forEach((choice, index2) => {\r\n                choiceViews.push(<PollChoice key={index2} choice={choice} choiceNumber={index2} pollNumber={index} removeChoice={this.removeChoice} handleChoiceChange={this.handleChoiceChange} handleChoiceChangeReview={this.handleChoiceChangeReview} onChangeUploadChoice={this.onChangeUploadChoice}/>);\r\n            });\r\n            pollViews.push(<PollCreate key={index} poll={poll} choiceViews={choiceViews} pollNumber={index} handleQuestionChange={this.handleQuestionChange}\r\n                addChoice={this.addChoice} handlePollDaysChange={this.handlePollDaysChange} handlePollHoursChange={this.handlePollHoursChange}\r\n                onChangeIsUnseenUserForVote={this.onChangeIsUnseenUserForVote} onChangeIsUnseenUserForAddChoice={this.onChangeIsUnseenUserForAddChoice}\r\n                onChangeIsAddChoice={this.onChangeIsAddChoice} onChangeIsCanFix={this.onChangeIsCanFix} handleChangemaxVotePerTimeLoad={this.handleChangemaxVotePerTimeLoad}\r\n                handleChangemaxVotePerChoice={this.handleChangemaxVotePerChoice} handleChangemaxVoteOfPoll={this.handleChangemaxVoteOfPoll}\r\n                handleTimeLoadDaysChange={this.handleTimeLoadDaysChange} handleTimeLoadHoursChange={this.handleTimeLoadHoursChange} handleShowResultCaseChange={this.handleShowResultCaseChange}\r\n                onChangeUpload={this.onChangeUpload} removePoll={this.removePoll} onChangeIsHasPollLength={this.onChangeIsHasPollLength}/>);\r\n        });\r\n        return (\r\n            <div className=\"new-poll-container\">\r\n                <h1 className=\"page-title\">Create Post</h1>\r\n                <div className=\"new-poll-content\">\r\n                    <Form onFinish={this.handleSubmit} className=\"create-poll-form\">\r\n                        <FormItem className=\"poll-form-row\">\r\n                            <TextArea\r\n                                placeholder=\"Enter your question\"\r\n                                style={{ fontSize: '16px' }}\r\n                                autosize={{ minRows: 3, maxRows: 6 }}\r\n                                name=\"question\"\r\n                                value={this.state.question.text}\r\n                                onChange={this.handleQuestionForPostChange} />\r\n                        </FormItem>\r\n                        <Row gutter={[48, 16]}>\r\n                            <Col xs={12}>\r\n                                Đăng ẩn danh\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                <Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" onChange={this.onChangeIsUnseenOwner} />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                Chế độ đăng:\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Select\r\n                                    name=\"hours\"\r\n                                    onChange={this.handleShowCaseChange}\r\n                                    value={this.state.showCase}\r\n                                    style={{ width: 200 }}\r\n                                >\r\n                                    <Option key={1} value={1}>Bí mật</Option>\r\n                                    <Option key={2} value={2}>Riêng tư</Option>\r\n                                    <Option key={3} value={3}>Công khai</Option>\r\n                                    <Option key={4} value={4}>Giới hạn người</Option>\r\n                                    <Option key={5} value={5}>Nhóm</Option>\r\n                                </Select>\r\n                            </Col>\r\n                            {this.state.showCase === 4 ? <Col xs={12}>Những người sẽ nhìn thấy bài đăng: </Col> : null}\r\n                            {this.state.showCase === 4 ? <Col xs={12}><FormItem validateStatus={this.state.validateStatusUser}\r\n            help={this.state.errorMsgUser}><Mentions style={{ width: '100%' }} placeholder=\"Nhập '@' để tag bạn bè\" loading={this.state.loading} onSearch={this.onSearch} onChange={this.onSelect}>\r\n                                {this.state.users.map(({ id, username, name }) => (\r\n                                    <Option key={id} value={username} className=\"antd-demo-dynamic-option\">\r\n                                        <span>{name} @{username}</span>\r\n                                    </Option>\r\n                                ))}\r\n                            </Mentions></FormItem></Col> : null}\r\n                            {this.state.showCase === 5 ? <Col xs={12}>Những nhóm sẽ đăng: </Col> : null}\r\n                            {this.state.showCase === 5 ? <Col xs={12}><FormItem validateStatus={this.state.validateStatusGroup}\r\n            help={this.state.errorMsgGroup}><Mentions style={{ width: '100%' }} placeholder=\"Nhập '@' để tag nhóm\" loading={this.state.loading} onSearch={this.onSearchGroup} onChange={this.onSelectGroup}>\r\n                                {this.state.groups.map((group) => (\r\n                                    <Option key={group.id} value={group.code} className=\"antd-demo-dynamic-option\">\r\n                                        <span>{group.name} @{group.code}</span>\r\n                                    </Option>\r\n                                ))}\r\n                            </Mentions></FormItem></Col> : null}\r\n                            <Col xs={12}>\r\n                                Lên lịch đăng bài\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                <Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" onChange={this.onChangeIsDelay} />\r\n                            </Col>\r\n                            {this.state.isDelay ? <Col span={12}>\r\n                                Ngày giờ đăng:\r\n                            </Col> : null}\r\n                            {this.state.isDelay ?\r\n                                <Col span={12}>\r\n                                    <Space direction=\"vertical\" size={12}>\r\n                                        <DatePicker\r\n                                            format=\"DD-MM-YYYY HH:mm:ss\"\r\n                                            disabledDate={this.disabledDate}\r\n                                            disabledTime={this.disabledDateTime}\r\n                                            showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}\r\n                                            showNow={false}\r\n                                            value={this.state.publicDateMoment}\r\n                                            onChange={this.handlePublicDateChange}\r\n                                        />\r\n                                    </Space></Col> : null}\r\n                        </Row>\r\n\r\n                        {pollViews}\r\n\r\n                        <FormItem className=\"poll-form-row\">\r\n                            <Button type=\"dashed\" onClick={this.addPoll}>\r\n                                <PlusOutlined/> Add a Poll\r\n                            </Button>\r\n                        </FormItem>\r\n                        <FormItem className=\"poll-form-row\">\r\n                            <Button type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                size=\"large\"\r\n                                disabled={this.isFormInvalid()}\r\n                                className=\"create-poll-form-button\">Create Post</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst PollCreate = (props) => {\r\n    const config = {\r\n        name: \"file\",\r\n        action: API_BASE_URL + \"/file/upload\",\r\n        headers: {\r\n            authorization:\r\n                'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\r\n        },\r\n\r\n    };\r\n    return (\r\n        <div className=\"new-poll-container\">\r\n            <h1 className=\"page-title\">Create Poll {(props.pollNumber + 1)}\r\n            {\r\n                props.pollNumber > 0 ? (\r\n                    <CloseOutlined className=\"dynamic-delete-button-poll\" disabled={props.pollNumber === 0} onClick={() => props.removePoll(props.pollNumber)} />\r\n                ) : null\r\n            }</h1>\r\n            <div className=\"new-poll-content\">\r\n                <FormItem className=\"poll-form-row\">\r\n                    <TextArea\r\n                        placeholder=\"Enter your question\"\r\n                        style={{ fontSize: '16px' }}\r\n                        autosize={{ minRows: 3, maxRows: 6 }}\r\n                        name=\"question\"\r\n                        value={props.poll.question.text}\r\n                        onChange={(event) => props.handleQuestionChange(event, props.pollNumber)} />\r\n                </FormItem>\r\n                <FormItem className=\"poll-form-row\">\r\n                    <Upload {...config} listType=\"picture\" maxCount={1} onChange={(info) => props.onChangeUpload(info, props.pollNumber)}>\r\n                        {props.poll.photo === \"\" ? <Button icon={<UploadOutlined />}>Upload (Max: 1)</Button> : null}\r\n                    </Upload></FormItem>\r\n                {props.choiceViews}\r\n                <FormItem className=\"poll-form-row\">\r\n                    <Button type=\"dashed\" onClick={(event) => props.addChoice(event, props.pollNumber)} disabled={props.poll.choices.length === MAX_CHOICES}>\r\n                        <PlusOutlined/> Add a choice\r\n                    </Button>\r\n                </FormItem>\r\n                <Row gutter={[48, 16]}>\r\n                    <Col span={12}>Thời hạn kết thúc: &nbsp;\r\n                    </Col><Col span={12}><Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" defaultChecked onChange={() => props.onChangeIsHasPollLength(props.pollNumber)} />\r\n                    </Col>\r\n                    {props.poll.isHasPollLength ?<Col span={12}>\r\n                        Poll length:\r\n                    </Col>:null}\r\n                    {props.poll.isHasPollLength ?<Col span={12}>\r\n                        <span style={{ marginRight: '18px' }}>\r\n                            <Select\r\n                                name=\"days\"\r\n                                defaultValue=\"1\"\r\n                                onChange={(event) => props.handlePollDaysChange(event, props.pollNumber)}\r\n                                value={props.poll.pollLength.days}\r\n                                style={{ width: 60 }} >\r\n                                {\r\n                                    Array.from(Array(8).keys()).map(i =>\r\n                                        <Option key={i}>{i}</Option>\r\n                                    )\r\n                                }\r\n                            </Select> &nbsp;Days\r\n                        </span>\r\n                        <span>\r\n                            <Select\r\n                                name=\"hours\"\r\n                                defaultValue=\"0\"\r\n                                onChange={(event) => props.handlePollHoursChange(event, props.pollNumber)}\r\n                                value={props.poll.pollLength.hours}\r\n                                style={{ width: 60 }} >\r\n                                {\r\n                                    Array.from(Array(24).keys()).map(i =>\r\n                                        <Option key={i}>{i}</Option>\r\n                                    )\r\n                                }\r\n                            </Select> &nbsp;Hours\r\n                        </span>\r\n                    </Col>:null}\r\n\r\n\r\n                    <Col span={12}>Bầu chọn ẩn danh&nbsp;\r\n                    </Col><Col span={12}><Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" onChange={() => props.onChangeIsUnseenUserForVote(props.pollNumber)} />\r\n                    </Col><Col span={12}>Cho phép thêm lựa chọn&nbsp;\r\n                    </Col><Col span={12}><Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" onChange={() => props.onChangeIsAddChoice(props.pollNumber)} />\r\n                    </Col>\r\n                    {props.poll.isAddChoice ? (<Col span={12}>Người thêm lựa chọn bị ẩn danh&nbsp;</Col>) : null}\r\n                    {props.poll.isAddChoice ? (<Col span={12}><Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" disabled={props.poll.isAddChoice ? false : true} onChange={() => props.onChangeIsUnseenUserForAddChoice(props.pollNumber)} />\r\n                    </Col>) : null}<Col span={12}>Cho phép sửa lựa chọn&nbsp;\r\n                    </Col><Col span={12}><Switch checkedChildren=\"Có\" unCheckedChildren=\"Không\" defaultChecked onChange={() => props.onChangeIsCanFix(props.pollNumber)} />\r\n                    </Col>\r\n                    <Col span={12}>Số lượng phiếu bầu tối đa:</Col>\r\n                    <Col span={12}><InputNumber min={1} defaultValue={1} value={props.poll.maxVotePerTimeLoad} onChange={(event) => props.handleChangemaxVotePerTimeLoad(event, props.pollNumber)} />\r\n                        &nbsp;Lần</Col>\r\n                    <Col span={12}>Mỗi lựa chọn được bầu tối đa:</Col>\r\n                    <Col span={12}><InputNumber min={1} defaultValue={1} value={props.poll.maxVotePerChoice} onChange={(event) => props.handleChangemaxVotePerChoice(event, props.pollNumber)} />\r\n                        &nbsp;Lần</Col>\r\n                    {props.poll.timeLoad.hours === 0 && props.poll.timeLoad.days === 0 ? null : (<Col span={12}>Số lượng phiếu bầu tối đa 2:</Col>)}\r\n                    {props.poll.timeLoad.hours === 0 && props.poll.timeLoad.days === 0 ? null : (\r\n\r\n                        <Col span={12}><InputNumber min={1} defaultValue={1} value={props.poll.maxVoteOfPoll} disabled={props.poll.timeLoad.hours === 0 && props.poll.timeLoad.days === 0 ? true : false} onChange={(event) => props.handleChangemaxVoteOfPoll(event, props.pollNumber)} />\r\n                            &nbsp;Lần</Col>)\r\n                    }\r\n                    <Col style={{display:\"none\"}} span={12}>\r\n                        Thời gian được thiết lập lại số phiếu:\r\n                    </Col>\r\n                    <Col span={12} style={{display:\"none\"}}>\r\n                        <span style={{ marginRight: '18px' }}>\r\n                            <Select\r\n                                name=\"days\"\r\n                                defaultValue=\"1\"\r\n                                onChange={(event) => props.handleTimeLoadDaysChange(event, props.pollNumber)}\r\n                                value={props.poll.timeLoad.days}\r\n                                style={{ width: 60 }} >\r\n                                {\r\n                                    Array.from(Array(8).keys()).map(i =>\r\n                                        <Option key={i}>{i}</Option>\r\n                                    )\r\n                                }\r\n                            </Select> &nbsp;Days\r\n                        </span>\r\n                        <span>\r\n                            <Select\r\n                                name=\"hours\"\r\n                                defaultValue=\"0\"\r\n                                onChange={(event) => props.handleTimeLoadHoursChange(event, props.pollNumber)}\r\n                                value={props.poll.timeLoad.hours}\r\n                                style={{ width: 60 }} >\r\n                                {\r\n                                    Array.from(Array(24).keys()).map(i =>\r\n                                        <Option key={i}>{i}</Option>\r\n                                    )\r\n                                }\r\n                            </Select> &nbsp;Hours\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        Chế độ hiển thị kết quả:\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Select\r\n                            name=\"hours\"\r\n                            onChange={(event) => props.handleShowResultCaseChange(event, props.pollNumber)}\r\n                            value={props.poll.showResultCase}\r\n                            style={{ width: 200 }}\r\n                        >\r\n                            <Option key={1} value={1}>Được xem ngay</Option>\r\n                            <Option key={2} value={2}>Sau khi kết thúc</Option>\r\n                            <Option key={3} value={3} disabled={props.poll.isCanFix ? true : false}>Sau khi bầu</Option>\r\n                            <Option key={4} value={4}>Không được xem</Option>\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                {/* <Select\r\n                        name=\"timeRS\"\r\n                        defaultValue=\"0\"\r\n                        onChange={this.handleChangetimeLoad}\r\n                        value={this.state.timeLoad}\r\n                        style={{ width: 60 }} >\r\n                        {\r\n                            Array.from(Array(100).keys()).map(i =>\r\n                                <Option key={i}>{i}</Option>\r\n                            )\r\n                        }\r\n                    </Select> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PollChoice = (props) => {\r\n    const config = {\r\n        name: \"file\",\r\n        action: API_BASE_URL + \"/file/upload\",\r\n        headers: {\r\n            authorization:\r\n                'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\r\n        },\r\n\r\n    };\r\n    return (\r\n        <FormItem validateStatus={props.choice.validateStatus}\r\n            help={props.choice.errorMsg} className=\"poll-form-row\">\r\n            <Input\r\n                placeholder={'Choice ' + (props.choiceNumber + 1)}\r\n                size=\"large\"\r\n                value={props.choice.text}\r\n                className={props.choiceNumber > 1 ? \"optional-choice\" : null}\r\n                onChange={(event) => props.handleChoiceChange(event, props.choiceNumber, props.pollNumber)} />\r\n            {\r\n                props.choiceNumber > 1 ? (\r\n                    <CloseOutlined className=\"dynamic-delete-button\" disabled={props.choiceNumber <= 1} onClick={() => props.removeChoice(props.choiceNumber, props.pollNumber)} />\r\n                ) : null\r\n            }\r\n            <TextArea\r\n                placeholder={'Review ' + (props.choiceNumber + 1)}\r\n                size=\"large\"\r\n                value={props.choice.review}\r\n                className={props.choiceNumber > 1 ? \"optional-textchoice\" : \"choice\"}\r\n                onChange={(event) => props.handleChoiceChangeReview(event, props.choiceNumber, props.pollNumber)}\r\n                 />\r\n                 <Upload {...config} listType=\"picture\" className=\"upload-inline\" maxCount={1} onChange={(info) => props.onChangeUploadChoice(info, props.choiceNumber, props.pollNumber)}>\r\n                    {props.choice.photo == null ? <Button className=\"button-upload\" icon={<UploadOutlined />}>Upload</Button> : <Button className=\"button-upload\" disabled icon={<UploadOutlined />}>Upload</Button>}\r\n                </Upload>\r\n\r\n\r\n        </FormItem>\r\n    );\r\n}\r\n\r\n\r\nexport default NewPoll;","import React, { Component } from 'react';\r\nimport { login,logingg } from '../../util/APIUtils';\r\nimport './Login.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { ACCESS_TOKEN } from '../../constants';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { Form, Input, Button, notification } from 'antd';\r\nconst FormItem = Form.Item;\r\n\r\n\r\nclass LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit = values => {\r\n        const loginRequest = Object.assign({}, values);\r\n        login(loginRequest)\r\n            .then(response => {\r\n                localStorage.setItem(ACCESS_TOKEN, response.accessToken);\r\n                this.props.onLogin();\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: 'Your Username or Password is incorrect. Please try again!'\r\n                    });\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    loginGoogle = (response) =>{\r\n        console.log(response);\r\n        logingg(response.tokenId)\r\n            .then(response => {\r\n                localStorage.setItem(ACCESS_TOKEN, response.accessToken);\r\n                this.props.onLogin();\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: 'Your Username or Password is incorrect. Please try again!'\r\n                    });\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        //const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"login-container\">\r\n                <h1 className=\"page-title\">Login</h1>\r\n                <div className=\"login-content\">\r\n                    <Form onFinish={this.handleSubmit} className=\"login-form\">\r\n                        <FormItem name=\"usernameOrEmail\" rules={[{ required: true, message: 'Please input your username or email!' }]}>\r\n                            <Input\r\n                                prefix={<UserOutlined />}\r\n                                size=\"large\"\r\n                                name=\"usernameOrEmail\"\r\n                                autoComplete=\"usernameOrEmail\"\r\n                                placeholder=\"Username or Email\" />\r\n                        </FormItem>\r\n                        <FormItem name=\"password\" rules={[{ required: true, message: 'Please input your Password!' }]}>\r\n                            <Input.Password\r\n                                prefix={<LockOutlined />}\r\n                                size=\"large\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"password\"\r\n                                placeholder=\"Password\" />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\" htmlType=\"submit\" size=\"large\" className=\"login-form-button\">Login</Button>\r\n                            Or <Link to=\"/signup\">register now!</Link>\r\n                        </FormItem>\r\n                        <GoogleLogin\r\n                            clientId=\"77045311314-she4b1r1rla9h95coqasl83pe4qf1mj9.apps.googleusercontent.com\"\r\n                            buttonText=\"Login with Google\"\r\n                            onSuccess={this.loginGoogle}\r\n                            onFailure={this.loginGoogle} ></GoogleLogin>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default LoginForm;","import React, { Component } from 'react';\r\nimport { signup, checkUsernameAvailability, checkEmailAvailability } from '../../util/APIUtils';\r\nimport './Signup.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { \r\n    NAME_MIN_LENGTH, NAME_MAX_LENGTH, \r\n    USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH,\r\n    EMAIL_MAX_LENGTH,\r\n    PASSWORD_MIN_LENGTH, PASSWORD_MAX_LENGTH\r\n} from '../../constants';\r\n\r\nimport { Form, Input, Button, notification } from 'antd';\r\nconst FormItem = Form.Item;\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: {\r\n                value: ''\r\n            },\r\n            username: {\r\n                value: ''\r\n            },\r\n            email: {\r\n                value: ''\r\n            },\r\n            password: {\r\n                value: ''\r\n            }\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateUsernameAvailability = this.validateUsernameAvailability.bind(this);\r\n        this.validateEmailAvailability = this.validateEmailAvailability.bind(this);\r\n        this.isFormInvalid = this.isFormInvalid.bind(this);\r\n    }\r\n\r\n    handleInputChange(event, validationFun) {\r\n        const target = event.target;\r\n        const inputName = target.name;        \r\n        const inputValue = target.value;\r\n\r\n        this.setState({\r\n            [inputName] : {\r\n                value: inputValue,\r\n                ...validationFun(inputValue)\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit() {\r\n    \r\n        const signupRequest = {\r\n            name: this.state.name.value,\r\n            email: this.state.email.value,\r\n            username: this.state.username.value,\r\n            password: this.state.password.value\r\n        };\r\n        notification.success({\r\n            message: 'Polling App',\r\n            description: \"Thank you! Please check your mail!\",\r\n        });     \r\n        this.props.history.push(\"/auth\");\r\n        signup(signupRequest)\r\n        .then(response => {\r\n                 console.log(\"ok\")\r\n            // this.props.history.push(\"/auth\");\r\n        }).catch(error => {\r\n            notification.error({\r\n                message: 'Polling App',\r\n                description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n            });\r\n        });\r\n    }\r\n\r\n    isFormInvalid() {\r\n        return !(this.state.name.validateStatus === 'success' &&\r\n            this.state.username.validateStatus === 'success' &&\r\n            this.state.email.validateStatus === 'success' &&\r\n            this.state.password.validateStatus === 'success'\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signup-container\">\r\n                <h1 className=\"page-title\">Sign Up</h1>\r\n                <div className=\"signup-content\">\r\n                    <Form onFinish={this.handleSubmit} className=\"signup-form\">\r\n                        <FormItem \r\n                            label=\"Full Name\"\r\n                            validateStatus={this.state.name.validateStatus}\r\n                            help={this.state.name.errorMsg}>\r\n                            <Input \r\n                                size=\"large\"\r\n                                name=\"name\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"Your full name\"\r\n                                value={this.state.name.value} \r\n                                onChange={(event) => this.handleInputChange(event, this.validateName)} />    \r\n                        </FormItem>\r\n                        <FormItem label=\"Username\"\r\n                            hasFeedback\r\n                            validateStatus={this.state.username.validateStatus}\r\n                            help={this.state.username.errorMsg}>\r\n                            <Input \r\n                                size=\"large\"\r\n                                name=\"username\" \r\n                                autoComplete=\"off\"\r\n                                placeholder=\"A unique username\"\r\n                                value={this.state.username.value} \r\n                                onBlur={this.validateUsernameAvailability}\r\n                                onChange={(event) => this.handleInputChange(event, this.validateUsername)} />    \r\n                        </FormItem>\r\n                        <FormItem \r\n                            label=\"Email\"\r\n                            hasFeedback\r\n                            validateStatus={this.state.email.validateStatus}\r\n                            help={this.state.email.errorMsg}>\r\n                            <Input \r\n                                size=\"large\"\r\n                                name=\"email\" \r\n                                type=\"email\" \r\n                                autoComplete=\"off\"\r\n                                placeholder=\"Your email\"\r\n                                value={this.state.email.value} \r\n                                onBlur={this.validateEmailAvailability}\r\n                                onChange={(event) => this.handleInputChange(event, this.validateEmail)} />    \r\n                        </FormItem>\r\n                        <FormItem \r\n                            label=\"Password\"\r\n                            validateStatus={this.state.password.validateStatus}\r\n                            help={this.state.password.errorMsg}>\r\n                            <Input \r\n                                size=\"large\"\r\n                                name=\"password\" \r\n                                type=\"password\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"A password between 6 to 20 characters\" \r\n                                value={this.state.password.value} \r\n                                onChange={(event) => this.handleInputChange(event, this.validatePassword)} />    \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\" \r\n                                htmlType=\"submit\" \r\n                                size=\"large\" \r\n                                className=\"signup-form-button\"\r\n                                disabled={this.isFormInvalid()}>Sign up</Button>\r\n                            Already registed? <Link to=\"/login\">Login now!</Link>\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Validation Functions\r\n\r\n    validateName = (name) => {\r\n        if(name.length < NAME_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (name.length > NAME_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n              };            \r\n        }\r\n    }\r\n\r\n    validateEmail = (email) => {\r\n        if(!email) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Email may not be empty'                \r\n            }\r\n        }\r\n\r\n        const EMAIL_REGEX = RegExp('[^@ ]+@[^@ ]+\\\\.[^@ ]+');\r\n        if(!EMAIL_REGEX.test(email)) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Email not valid'\r\n            }\r\n        }\r\n\r\n        if(email.length > EMAIL_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Email is too long (Maximum ${EMAIL_MAX_LENGTH} characters allowed)`\r\n            }\r\n        }\r\n\r\n        return {\r\n            validateStatus: null,\r\n            errorMsg: null\r\n        }\r\n    }\r\n\r\n    validateUsername = (username) => {\r\n        if(username.length < USERNAME_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Username is too short (Minimum ${USERNAME_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (username.length > USERNAME_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `Username is too long (Maximum ${USERNAME_MAX_LENGTH} characters allowed.)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: null,\r\n                errorMsg: null\r\n            }\r\n        }\r\n    }\r\n\r\n    validateUsernameAvailability() {\r\n        // First check for client side errors in username\r\n        const usernameValue = this.state.username.value;\r\n        const usernameValidation = this.validateUsername(usernameValue);\r\n\r\n        if(usernameValidation.validateStatus === 'error') {\r\n            this.setState({\r\n                username: {\r\n                    value: usernameValue,\r\n                    ...usernameValidation\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            username: {\r\n                value: usernameValue,\r\n                validateStatus: 'validating',\r\n                errorMsg: null\r\n            }\r\n        });\r\n\r\n        checkUsernameAvailability(usernameValue)\r\n        .then(response => {\r\n            if(response.available) {\r\n                this.setState({\r\n                    username: {\r\n                        value: usernameValue,\r\n                        validateStatus: 'success',\r\n                        errorMsg: null\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    username: {\r\n                        value: usernameValue,\r\n                        validateStatus: 'error',\r\n                        errorMsg: 'This username is already taken'\r\n                    }\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            // Marking validateStatus as success, Form will be recchecked at server\r\n            this.setState({\r\n                username: {\r\n                    value: usernameValue,\r\n                    validateStatus: 'success',\r\n                    errorMsg: null\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    validateEmailAvailability() {\r\n        // First check for client side errors in email\r\n        const emailValue = this.state.email.value;\r\n        const emailValidation = this.validateEmail(emailValue);\r\n\r\n        if(emailValidation.validateStatus === 'error') {\r\n            this.setState({\r\n                email: {\r\n                    value: emailValue,\r\n                    ...emailValidation\r\n                }\r\n            });    \r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            email: {\r\n                value: emailValue,\r\n                validateStatus: 'validating',\r\n                errorMsg: null\r\n            }\r\n        });\r\n\r\n        checkEmailAvailability(emailValue)\r\n        .then(response => {\r\n            if(response.available) {\r\n                this.setState({\r\n                    email: {\r\n                        value: emailValue,\r\n                        validateStatus: 'success',\r\n                        errorMsg: null\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    email: {\r\n                        value: emailValue,\r\n                        validateStatus: 'error',\r\n                        errorMsg: 'This Email is already registered'\r\n                    }\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            // Marking validateStatus as success, Form will be recchecked at server\r\n            this.setState({\r\n                email: {\r\n                    value: emailValue,\r\n                    validateStatus: 'success',\r\n                    errorMsg: null\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    validatePassword = (password) => {\r\n        if(password.length < PASSWORD_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Password is too short (Minimum ${PASSWORD_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (password.length > PASSWORD_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `Password is too long (Maximum ${PASSWORD_MAX_LENGTH} characters allowed.)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n            };            \r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport './NotFound.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'antd';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"page-not-found\">\r\n            <h1 className=\"title\">\r\n                404\r\n            </h1>\r\n            <div className=\"desc\">\r\n                The Page you're looking for was not found.\r\n            </div>\r\n            <Link to=\"/\"><Button className=\"go-back-btn\" type=\"primary\" size=\"large\">Go Back</Button></Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport './ServerError.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'antd';\r\n\r\nconst ServerError = () => {\r\n    return (\r\n        <div className=\"server-error-page\">\r\n            <h1 className=\"server-error-title\">\r\n                500\r\n            </h1>\r\n            <div className=\"server-error-desc\">\r\n                Oops! Something went wrong at our Server. Why don't you go back?\r\n            </div>\r\n            <Link to=\"/\"><Button className=\"server-error-go-back-btn\" type=\"primary\" size=\"large\">Go Back</Button></Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServerError;","import React, { Component } from 'react';\r\nimport PostList from '../../poll/PostList';\r\nimport { getUserProfile, changeAvatar, changeName } from '../../util/APIUtils';\r\nimport { Avatar, Tabs, notification, Button } from 'antd';\r\nimport { getAvatarColor } from '../../util/Colors';\r\nimport { formatDate } from '../../util/Helpers';\r\nimport LoadingIndicator from '../../common/LoadingIndicator';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\nimport './Profile.css';\r\nimport NotFound from '../../common/NotFound';\r\nimport ServerError from '../../common/ServerError';\r\nimport { Upload, Input,Form } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { CameraOutlined, EditOutlined,CloseOutlined } from '@ant-design/icons';\r\nimport { \r\n    NAME_MIN_LENGTH, NAME_MAX_LENGTH, API_BASE_URL,ACCESS_TOKEN\r\n} from '../../constants';\r\nconst TabPane = Tabs.TabPane;\r\nclass Profile extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            urlImage: \"\",\r\n            isLoading: false,\r\n            uploading: false,\r\n            fileResponse: [],\r\n            fileList: [],\r\n            isEdit: false,\r\n            valueName: \"\",\r\n            stompClient: null,\r\n        }\r\n        this.loadUserProfile = this.loadUserProfile.bind(this);\r\n    }\r\n    beforeUpload = async file => {\r\n        if (this._isMounted) {\r\n            this.setState(state => ({\r\n                fileList: [...state.fileList, file],\r\n            }));\r\n        }\r\n        const formData = new FormData();\r\n        formData.append(\"file\", this.state.fileList[0]);\r\n        //console.log(this.state.fileList);\r\n        changeAvatar(formData)\r\n            .then(res => {\r\n                //console.log(res.data);\r\n                const user = this.state.user;\r\n                this.setState({\r\n                    user:{\r\n                        ...user,\r\n                        photo: res.id\r\n                    }\r\n                })\r\n                notification.success({\r\n                    message: 'Polling App',\r\n                    description: `Avatar file uploaded successfully`,\r\n                });\r\n                //window.location = window.location.href;\r\n            });\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                uploading: true,\r\n            });\r\n        }\r\n        \r\n        return false;\r\n    };\r\n\r\n    loadUserProfile(username) {\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                isLoading: true\r\n            });\r\n        }\r\n\r\n        getUserProfile(username)\r\n            .then(response => {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        user: response,\r\n                        valueName: response.name,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n                if (error.status === 404) {\r\n                    if (this._isMounted) {\r\n                        this.setState({\r\n                            notFound: true,\r\n                            isLoading: false\r\n                        });\r\n                    }\r\n                } else {\r\n                    if (this._isMounted) {\r\n                        this.setState({\r\n                            serverError: true,\r\n                            isLoading: false\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        const username = this.props.match.params.username;\r\n        if(this.props.currentUser!=null){\r\n            this.loadUserProfile(username);\r\n        \r\n            const socket = new SockJS(API_BASE_URL + '/ws');\r\n            const stompClient = Stomp.over(socket);\r\n            const headers = { Authorization: 'Bearer ' + localStorage.getItem(ACCESS_TOKEN) };\r\n            stompClient.connect(headers, () => {\r\n                stompClient.subscribe(\r\n                    '/user/queue/item', (response) => this.socketPoll(JSON.parse(response.body)), headers,\r\n                );\r\n            });\r\n            if (this._isMounted) {\r\n                this.setState({\r\n                    stompClient: stompClient\r\n                })\r\n            }\r\n        }\r\n        \r\n        \r\n        console.log(\"dimount profile\")\r\n\r\n    }\r\n\r\n    socketPoll = (data) => {\r\n        if(data.type===10)\r\n        {\r\n            notification.info({\r\n                message: `Notification`,\r\n                description:\r\n                  data.name,\r\n                  placement: \"bottomLeft\",\r\n                  onClick: ()=>this.props.history.push(\"/post/\"+data.postId)\r\n              });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n       if (this.state.stompClient != null) {\r\n            //console.log(\"disccccccccccccccccccccccco\")\r\n            this.state.stompClient.send('/app/stop', {});\r\n            this.state.stompClient.disconnect();\r\n        }\r\n        console.log(\"unmount\")\r\n    }\r\n    componentDidUpdate(nextProps) {\r\n        if (this.props.match.params.username !== nextProps.match.params.username) {\r\n            this.loadUserProfile(nextProps.match.params.username);\r\n        }\r\n    }\r\n    enter = (event) => {\r\n        const name = event.target.value;\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                isLoading: true\r\n            });\r\n        }\r\n        changeName(name)\r\n            .then(response => {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        user: {\r\n                            ...this.state.user,\r\n                            name: name\r\n                        },\r\n                        valueName: name,\r\n\r\n                    });\r\n                }\r\n                notification.success({\r\n                    message: 'Polling App',\r\n                    description: response.message || 'Change name Succesfully!'\r\n                });\r\n            }).catch(error => {\r\n                if (error.status === 401) {\r\n                    this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });\r\n                }\r\n            });\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                isEdit: !this.state.isEdit,\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n    validateName = (name) => {\r\n        if(name.length < NAME_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (name.length > NAME_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n              };            \r\n        }\r\n    }\r\n    onEdit = () => {\r\n        this.setState({\r\n            isEdit: !this.state.isEdit\r\n        })\r\n    }\r\n    onChangeName = (event,validateFunc) => {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            valueName: value,\r\n            ...validateFunc(value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return <LoadingIndicator />;\r\n        }\r\n\r\n        if (this.state.notFound) {\r\n            return <NotFound />;\r\n        }\r\n\r\n        if (this.state.serverError) {\r\n            return <ServerError />;\r\n        }\r\n\r\n        const tabBarStyle = {\r\n            textAlign: 'center'\r\n        };\r\n        return (\r\n            <div className=\"profile\">\r\n                {\r\n                    this.state.user ? (\r\n                        <div className=\"user-profile\">\r\n                            <div className=\"user-details\">\r\n                                <div className=\"user-avatar\">\r\n                                    {this.props.currentUser.username === this.state.user.username ?\r\n                                        <ImgCrop rotate>\r\n                                            <Upload\r\n                                                // listType=\"picture-card\"\r\n                                                fileList={this.state.fileList}\r\n                                                beforeUpload={this.beforeUpload}\r\n                                                style={{display:\"none\"}}\r\n                                            >\r\n                                                <CameraOutlined style={{ position: \"absolute\", marginLeft: \"52px\", marginTop: \"52px\", zIndex: \"1\" }} />\r\n                                                {this.state.user.photo == null ?\r\n                                                    (<Avatar className=\"user-avatar-circle ava\"\r\n                                                        style={{ backgroundColor: getAvatarColor(this.state.user.name) }} >\r\n                                                        {this.state.user.name[0].toUpperCase()}\r\n                                                    </Avatar>) : (\r\n                                                        <Avatar className=\"user-avatar-circle  ava\" \r\n                                                        //src={API_BASE_URL+\"/file/getImage/\" + this.state.user.photo} \r\n                                                        src={\"https://drive.google.com/uc?export=view&id=\"+this.state.user.photo}\r\n                                                        />)}\r\n                                            </Upload>\r\n                                            \r\n                                        </ImgCrop> : <>{this.state.user.photo == null ?\r\n                                            (<Avatar className=\"user-avatar-circle\"\r\n                                                style={{ backgroundColor: getAvatarColor(this.state.user.name) }} >\r\n                                                {this.state.user.name[0].toUpperCase()}\r\n                                            </Avatar>) : (\r\n                                                <Avatar className=\"user-avatar-circle\" \r\n                                                src={\"https://drive.google.com/uc?export=view&id=\"+this.state.user.photo}\r\n                                                //src={API_BASE_URL+\"/file/getImage/\" + this.state.user.photo} \r\n                                                />)}</>}\r\n                                </div>\r\n                                \r\n                                <div className=\"user-summary\">\r\n                                    <div className=\"full-name\">{this.state.isEdit ? <><Form><Form.Item validateStatus={this.state.validateStatus}\r\n                            help={this.state.errorMsg}><Input value={this.state.valueName} onChange={(event) => this.onChangeName(event, this.validateName)} onPressEnter={this.enter}></Input><Button type=\"text\" shape=\"circle\" onClick={this.onEdit} style={{ float: \"right\",position: \"fixed\" }} icon={<CloseOutlined />}></Button></Form.Item></Form></> : <>{this.state.user.name}{this.state.user.username === this.props.currentUser.username && <Button type=\"text\" shape=\"circle\" onClick={this.onEdit} style={{ float: \"right\" }} icon={<EditOutlined />}></Button>}</>}</div>\r\n                                    <div className=\"username\">@{this.state.user.username}</div>\r\n                                    <div className=\"user-joined\">\r\n                                        Joined {formatDate(this.state.user.joinedAt)}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"user-summary\">\r\n                                    <div className=\"full-name\">{this.state.user.name}{this.state.user.username===this.props.currentUser.username&&<Button type=\"text\" shape=\"circle\" style={{ float: \"right\" }} icon={<EditOutlined />}></Button>}</div>\r\n                                    <div className=\"username\">@{this.state.user.username}</div>\r\n                                    <div className=\"user-joined\">\r\n                                        Joined {formatDate(this.state.user.joinedAt)}\r\n                                    </div>\r\n                                </div> */}\r\n                            </div>\r\n                            <div className=\"user-poll-details\">\r\n                                <Tabs defaultActiveKey=\"1\"\r\n                                    animated={false}\r\n                                    tabBarStyle={tabBarStyle}\r\n                                    size=\"large\"\r\n                                    onChange={this.callBack}\r\n                                    className=\"profile-tabs\">\r\n                                    <TabPane tab={`${this.state.user.pollCount} Posts`} key=\"1\">\r\n                                        <PostList socket={true} key=\"1\" currentUser={this.props.currentUser} handleLogout={this.props.handleLogout} username={this.props.match.params.username} type=\"USER_CREATED_POSTS\" isAuthenticated={this.props.isAuthenticated} />\r\n                                    </TabPane>\r\n                                    <TabPane tab={`${this.state.user.voteCount} Votes`} key=\"2\">\r\n                                        <PostList socket={true} key=\"2\" currentUser={this.props.currentUser} handleLogout={this.props.handleLogout} username={this.props.match.params.username} type=\"USER_VOTED_POSTS\" isAuthenticated={this.props.isAuthenticated} />\r\n                                    </TabPane>\r\n                                    {this.props.currentUser.username===this.props.match.params.username&&<TabPane tab={`${this.state.user.storageCount} Save`} key=\"3\">\r\n                                        <PostList socket={true} key=\"3\" currentUser={this.props.currentUser} handleLogout={this.props.handleLogout} username={this.props.match.params.username} type=\"USER_SAVE_POSTS\" isAuthenticated={this.props.isAuthenticated} />\r\n                                    </TabPane>}\r\n                                </Tabs>\r\n                            </div>\r\n                        </div>\r\n                    ) : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","export default __webpack_public_path__ + \"static/media/poll.04e627bb.svg\";","import React, { Component } from 'react';\r\nimport {\r\n  Link,\r\n  withRouter\r\n} from 'react-router-dom';\r\nimport { getUserNotification,readNotification } from '../util/APIUtils';\r\nimport './AppHeader.css';\r\nimport pollIcon from '../poll.svg';\r\nimport { Layout, Menu, Dropdown, Input, Badge} from 'antd';\r\nimport {\r\n  DownOutlined, UserOutlined, HomeOutlined, BellOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { formatDateTime } from '../util/Helpers';\r\nconst Header = Layout.Header;\r\nconst { Search } = Input;\r\n\r\nclass AppHeader extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      notification: [],\r\n      page: 0,\r\n      last: false,\r\n      visible: false\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this._isMounted = true;\r\n    this.loadUserNotification();\r\n  }\r\n  componentWillUnmount(){\r\n    this._isMounted=false;\r\n  }\r\n  loadUserNotification = (page= 0, size = 5) => {\r\n    if (this.props.currentUser) {\r\n    getUserNotification(page, size)\r\n      .then(response => {\r\n        console.log(response)\r\n        if (this._isMounted) {\r\n        this.setState({\r\n          notification: this.state.notification.concat(response.content),\r\n          page: response.page,\r\n          last: response.last\r\n        })}\r\n      }).catch(error => {\r\n      });}\r\n  }\r\n  handleMenuClick = ({ key })=> {\r\n    if (key === \"logout\") {\r\n      this.props.onLogout();\r\n    }\r\n    if (key === \"profile\") {\r\n      // window.location.assign(\"./user/\"+username)\r\n    }\r\n  }\r\n  handleMenuClick2 = ({ key }) => {\r\n    if(key!==\"more\"){\r\n      const noti = this.state.notification.slice();\r\n      if(this.props.currentUser.notificationCount>key){\r\n        noti[key].read = true;\r\n        \r\n        readNotification(noti[key].id).then(response => {\r\n        }).catch(error => {\r\n        });\r\n        \r\n        const notiItem ={ ...noti[key]};\r\n        //const noti2 = [...noti.slice(0,key),...noti.slice(key+1)];\r\n        noti.splice(key,1);\r\n        noti.splice(this.props.currentUser.notificationCount-1,0,notiItem);\r\n        //noti2.splice(this.props.currentUser.notificationCount-1,0,notiItem);\r\n        this.props.readNoti();\r\n        this.setState({\r\n          notification: noti\r\n        })\r\n      }\r\n      \r\n\r\n      this.props.history.push(\"/post/\" + noti[key].sourceId);\r\n      this.setState({visible:false})\r\n    }\r\n    else this.loadUserNotification(this.state.page+1);\r\n  }\r\n  handleVisibleChange = (flag) =>{\r\n    this.setState({visible: flag});\r\n  }\r\n  onSearch = value => {\r\n    value = encodeURIComponent(value);\r\n    if (value === \"\") this.props.history.push(\"/\");\r\n    else this.props.history.push(\"/search/\" + value);\r\n    console.log(value)\r\n  }\r\n  render(){\r\n  let menuItems;\r\n  if (this.props.currentUser) {\r\n    menuItems = [\r\n      <Menu.Item key=\"/\">\r\n        <Link to=\"/\">\r\n          <HomeOutlined className=\"nav-icon\" />\r\n        </Link>\r\n      </Menu.Item>,\r\n      <Menu.Item key=\"/poll/new\">\r\n        <Link to=\"/poll/new\">\r\n          <img src={pollIcon} alt=\"poll\" className=\"poll-icon\" />\r\n        </Link>\r\n      </Menu.Item>,\r\n      <Menu.Item key=\"/notification\" className=\"profile-menu\">\r\n        <ProfileDropdownMenu2\r\n        visible={this.state.visible}\r\n        handleVisibleChange={this.handleVisibleChange}\r\n        last={this.state.last}\r\n          notification={this.state.notification}\r\n          currentUser={this.props.currentUser}\r\n          handleMenuClick={this.handleMenuClick2} />\r\n      </Menu.Item>,\r\n      <Menu.Item key=\"/profile\" className=\"profile-menu\">\r\n\r\n        <ProfileDropdownMenu\r\n          currentUser={this.props.currentUser}\r\n          handleMenuClick={this.handleMenuClick} />\r\n      </Menu.Item>,\r\n\r\n    ];\r\n  } else {\r\n    menuItems = [\r\n      <Menu.Item key=\"/login\">\r\n        <Link to=\"/login\">Login</Link>\r\n      </Menu.Item>,\r\n      <Menu.Item key=\"/signup\">\r\n        <Link to=\"/signup\">Signup</Link>\r\n      </Menu.Item>\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <Header className=\"app-header\">\r\n      <div style={{ maxWidth: \"1200px\" }} className=\"container\">\r\n        <div className=\"app-title\" >\r\n          <Link to=\"/\">Voting App</Link>\r\n        </div>\r\n        <Search placeholder=\"Search question post\" allowClear onSearch={this.onSearch} style={{ width: 200, paddingTop: 15, marginLeft: \"7%\" }} />\r\n        <Menu\r\n          className=\"app-menu\"\r\n          mode=\"horizontal\"\r\n          selectedKeys={[this.props.location.pathname]}\r\n          style={{ lineHeight: '64px' }} >\r\n          {menuItems}\r\n        </Menu>\r\n      </div>\r\n    </Header>\r\n  );\r\n}\r\n}\r\n\r\nfunction ProfileDropdownMenu(props) {\r\n  const dropdownMenu = (\r\n    <Menu onClick={(key) => props.handleMenuClick(key, props.currentUser.username)} className=\"profile-dropdown-menu\">\r\n      <Menu.Item key=\"user-info\" className=\"dropdown-item\" disabled>\r\n        <div className=\"user-full-name-info\">\r\n          {props.currentUser.name}\r\n        </div>\r\n        <div className=\"username-info\">\r\n          @{props.currentUser.username}\r\n        </div>\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item key=\"profile\" className=\"dropdown-item\">\r\n        <Link to={`/users/${props.currentUser.username}`}>Profile</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"updatepassword\" className=\"dropdown-item\">\r\n        <Link to={`/changepassword/${props.currentUser.username}`}>Change Password</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"logout\" className=\"dropdown-item\" danger>\r\n        Logout\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown\r\n      overlay={dropdownMenu}\r\n      trigger={['click']}\r\n      getPopupContainer={() => document.getElementsByClassName('profile-menu')[0]}>\r\n      <div className=\"ant-dropdown-link\">\r\n        <UserOutlined className=\"nav-icon\" style={{ marginRight: 0 }} /><DownOutlined />\r\n      </div>\r\n    </Dropdown>\r\n  );\r\n}\r\nconst getTime = (time) => {\r\n  if (time == null) return \"\"\r\n  const timeNew = new Date(time).getTime();\r\n  const currentTime = new Date().getTime();\r\n\r\n  var difference_ms = currentTime - timeNew;\r\n  var seconds = Math.floor((difference_ms / 1000) % 60);\r\n  var minutes = Math.floor((difference_ms / 1000 / 60) % 60);\r\n  var hours = Math.floor((difference_ms / (1000 * 60 * 60)) % 24);\r\n  var days = Math.floor(difference_ms / (1000 * 60 * 60 * 24));\r\n\r\n  let timeRemaining;\r\n  if (days > 7) {\r\n    timeRemaining = formatDateTime(time);\r\n  }\r\n  else if (days > 0) {\r\n    timeRemaining = days + \" ngày trước\";\r\n  } else if (hours > 0) {\r\n    timeRemaining = hours + \" giờ trước\";\r\n  } else if (minutes > 0) {\r\n    timeRemaining = minutes + \" phút trước\";\r\n  } else if (seconds > 0) {\r\n    timeRemaining = seconds + \" giây trước\";\r\n  } else {\r\n    timeRemaining = \"Vừa mới\";\r\n  }\r\n\r\n  return timeRemaining;\r\n}\r\nfunction ProfileDropdownMenu2(props) {\r\n\r\n  const notiViews = [];\r\n  props.notification.forEach((noti, index) => {\r\n    notiViews.push(<Menu.Item key={index} className=\"dropdown-item\" style={noti.read ? { color: \"#657786\" } : {}}>\r\n      <div>{noti.content}</div>\r\n      <div>{getTime(noti.createAt)}</div>\r\n    </Menu.Item>);\r\n    if (index === props.currentUser.notificationCount - 1) notiViews.push(<Menu.Divider key=\"line\"/>)\r\n  })\r\n  const dropdownMenu = (\r\n    <Menu onClick={(key) => props.handleMenuClick(key, props.currentUser.username)} className=\"scroll\">\r\n      {notiViews}\r\n      <Menu.Item key=\"more\" className=\"dropdown-item\">\r\n      {!props.last&&<Link to=\"#\">Load More...</Link>}</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown\r\n      overlay={dropdownMenu}\r\n      trigger={['click']}\r\n      onVisibleChange={props.handleVisibleChange}\r\n      visible={props.visible}\r\n      getPopupContainer={() => document.getElementsByClassName('profile-menu')[0]}>\r\n      <div className=\"ant-dropdown-link\">\r\n        <Badge size=\"small\" count={props.currentUser.notificationCount} overflowCount={10}> <BellOutlined className=\"nav-icon\" /></Badge>\r\n      </div>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default withRouter(AppHeader);","import React from 'react';\r\nimport {\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  \r\n  \r\nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        authenticated ? (\r\n          <Component {...rest} {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n);\r\n  \r\nexport default PrivateRoute","import React, { Component } from 'react';\r\nimport { createGroup, checkGroupCodeAvailability,getListUser } from '../util/APIUtils';\r\nimport './NewGroup.css';\r\nimport {\r\n    NAME_MIN_LENGTH, NAME_MAX_LENGTH,\r\n    USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH,\r\n    USER_MAX_LENGTH\r\n} from '../constants';\r\n\r\nimport { Form, Input, Button, notification,Mentions,Select } from 'antd';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst { getMentions } = Mentions;\r\n\r\nclass NewGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: {\r\n                value: ''\r\n            },\r\n            code: {\r\n                value: ''\r\n            },\r\n            users: [],\r\n            usersSend: []\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateGroupCodeAvailability = this.validateGroupCodeAvailability.bind(this);\r\n        this.isFormInvalid = this.isFormInvalid.bind(this);\r\n    }\r\n    validateUsers = (mentions) =>{\r\n        //console.log(mentions.length)\r\n        if (mentions.length === 0) {\r\n            return {\r\n                validateStatusUser: 'error',\r\n                errorMsgUser: 'Please enter a username!'\r\n            }\r\n        } else if (mentions.length > USER_MAX_LENGTH) {\r\n            return {\r\n                validateStatusUser: 'error',\r\n                errorMsgUser: `User is too much (Maximum ${USER_MAX_LENGTH} user allowed)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatusUser: 'success',\r\n                errorMsgUser: null\r\n            }\r\n        }\r\n    }\r\n    loadUserList = (key) => {\r\n        let promise;\r\n        promise = getListUser(key, \"username\");\r\n\r\n        if (!promise) {\r\n            return;\r\n        }\r\n        promise\r\n            .then(response => {\r\n                let users = response.filter((user) => {\r\n                    var check = true;\r\n                    this.state.usersSend.forEach((userSend) => {\r\n                        if (user.username === userSend) {\r\n                            check = false;\r\n                        }\r\n                    })\r\n                    return check;\r\n                })\r\n                this.setState({\r\n                    users: users,\r\n                    loading: false,\r\n                })\r\n\r\n\r\n\r\n            }).catch(error => {\r\n                // this.setState({\r\n                //     users: response\r\n                // })\r\n            });\r\n\r\n    }\r\n    handleInputChange(event, validationFun) {\r\n        const target = event.target;\r\n        const inputName = target.name;\r\n        const inputValue = target.value;\r\n        //console.log(this.state.code.value)\r\n        this.setState({\r\n            [inputName]: {\r\n                value: inputValue,\r\n                ...validationFun(inputValue)\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit() {\r\n        const groupData = {\r\n            name: this.state.name.value,\r\n            code: this.state.code.value,\r\n            usersUsername: this.state.usersSend\r\n        };\r\n        createGroup(groupData)\r\n            .then(response => {\r\n                notification.success({\r\n                    message: 'Polling App',\r\n                    description: \"Thank you! You're successfully created group!\",\r\n                });\r\n                this.props.history.push(\"/\");\r\n            }).catch(error => {\r\n                notification.error({\r\n                    message: 'Polling App',\r\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                });\r\n            });\r\n    }\r\n\r\n    isFormInvalid() {\r\n        return !(this.state.name.validateStatus === 'success' &&\r\n            this.state.code.validateStatus === 'success'\r\n        );\r\n    }\r\n    onSearch = search => {\r\n        this.setState({ search, loading: !!search });\r\n        //console.log('Search:', search);\r\n        this.loadUserList(search);\r\n    }\r\n    onSelect = (value)=> {\r\n        const mentions = getMentions(value);\r\n        //console.log(mentions)\r\n        const usersSend = [];\r\n        mentions.forEach((mention) => {\r\n            usersSend.push(mention.value);\r\n        })\r\n        this.setState({\r\n            usersSend: usersSend,\r\n            ...this.validateUsers(usersSend)\r\n        })\r\n        //console.log(this.state.usersSend);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"signup-container\">\r\n                <h1 className=\"page-title\">Create Group</h1>\r\n                <div className=\"signup-content\">\r\n                    <Form onFinish={this.handleSubmit} className=\"signup-form\">\r\n                        <FormItem\r\n                            label=\"Full Name\"\r\n                            validateStatus={this.state.name.validateStatus}\r\n                            help={this.state.name.errorMsg}>\r\n                            <Input\r\n                                size=\"large\"\r\n                                name=\"name\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"Group name\"\r\n                                value={this.state.name.value}\r\n                                onChange={(event) => this.handleInputChange(event, this.validateName)} />\r\n                        </FormItem>\r\n                        <FormItem label=\"Code\"\r\n                            hasFeedback\r\n                            validateStatus={this.state.code.validateStatus}\r\n                            help={this.state.code.errorMsg}>\r\n                            <Input\r\n                                size=\"large\"\r\n                                name=\"code\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"A unique code\"\r\n                                value={this.state.code.value}\r\n                                onBlur={this.validateGroupCodeAvailability}\r\n                                onChange={(event) => this.handleInputChange(event, this.validateGroup)} />\r\n                        </FormItem>\r\n                        <FormItem label=\"Thành viên: \" validateStatus={this.state.validateStatusUser}\r\n                            help={this.state.errorMsgUser}><Mentions style={{ width: '100%' }} placeholder=\"Nhập '@' để tag bạn bè\" loading={this.state.loading} onSearch={this.onSearch} onChange={this.onSelect}>\r\n                                {this.state.users.map(({ id, username, name }) => (\r\n                                    <Option key={id} value={username} className=\"antd-demo-dynamic-option\">\r\n                                        <span>{name} @{username}</span>\r\n                                    </Option>\r\n                                ))}\r\n                            </Mentions></FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                size=\"large\"\r\n                                className=\"signup-form-button\"\r\n                                disabled={this.isFormInvalid()}>Create</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Validation Functions\r\n\r\n    validateName = (name) => {\r\n        if (name.length < NAME_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (name.length > NAME_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n            };\r\n        }\r\n    }\r\n\r\n    validateGroup = (groupCodeValue) => {\r\n        if (groupCodeValue.length < USERNAME_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `GroupCode is too short (Minimum ${USERNAME_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (groupCodeValue.length > USERNAME_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `GroupCode is too long (Maximum ${USERNAME_MAX_LENGTH} characters allowed.)`\r\n            }\r\n        }\r\n        else if (groupCodeValue.indexOf(' ') !== -1) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `GroupCode is valid (' ' characters not allowed.)`\r\n            }\r\n        }\r\n        else {\r\n            return {\r\n                validateStatus: null,\r\n                errorMsg: null\r\n            }\r\n        }\r\n    }\r\n\r\n    validateGroupCodeAvailability() {\r\n        // First check for client side errors in username\r\n        const groupCodeValue = this.state.code.value;\r\n        const groupValidation = this.validateGroup(groupCodeValue);\r\n\r\n        if (groupValidation.validateStatus === 'error') {\r\n            this.setState({\r\n                code: {\r\n                    value: groupCodeValue,\r\n                    ...groupValidation\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            code: {\r\n                value: groupCodeValue,\r\n                validateStatus: 'validating',\r\n                errorMsg: null\r\n            }\r\n        });\r\n\r\n        checkGroupCodeAvailability(groupCodeValue)\r\n            .then(response => {\r\n                if (response.available) {\r\n                    this.setState({\r\n                        code: {\r\n                            value: groupCodeValue,\r\n                            validateStatus: 'success',\r\n                            errorMsg: null\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        code: {\r\n                            value: groupCodeValue,\r\n                            validateStatus: 'error',\r\n                            errorMsg: 'This username is already taken'\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n                // Marking validateStatus as success, Form will be recchecked at server\r\n                this.setState({\r\n                    code: {\r\n                        value: groupCodeValue,\r\n                        validateStatus: 'success',\r\n                        errorMsg: null\r\n                    }\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport default NewGroup;","import React, { Component } from 'react';\r\nimport {\r\n  Link,\r\n  withRouter\r\n} from 'react-router-dom';\r\nimport './SiderMenu.css';\r\nimport { Menu, Button, Popover,Modal,notification } from 'antd';\r\nimport { getAllGroups,deleteGroup,leaveGroup } from '../util/APIUtils';\r\nimport { GROUP_LIST_SIZE } from '../constants';\r\nimport { PlusOutlined, MoreOutlined } from '@ant-design/icons';\r\nclass SiderMenu extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listGroups: [],\r\n      isLoading: false,\r\n      last: false,\r\n      visibleLeave: false,\r\n      page: 0,\r\n      visible: false,\r\n      currentGroupIndex: 0\r\n    }\r\n  }\r\n  loadListGroup = (page = 0) => {\r\n    if (this.props.isAuthenticated) {\r\n      if (this._isMounted) {\r\n        this.setState({\r\n          isLoading: true\r\n        })\r\n      }\r\n\r\n      const list = this.state.listGroups.slice();\r\n      getAllGroups(page, GROUP_LIST_SIZE)\r\n        .then(response => {\r\n          // console.log(response)\r\n          if (this._isMounted) {\r\n            this.setState({\r\n              listGroups: list.concat(response.content),\r\n              isLoading: false,\r\n              page: response.page,\r\n              last: response.last\r\n            })\r\n          }\r\n\r\n        }).catch(error => {\r\n          if (this._isMounted) {\r\n            this.setState({\r\n              isLoading: false\r\n            })\r\n          }\r\n        });\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.loadListGroup();\r\n  }\r\n  handleCancel=()=>{\r\n    this.setState({\r\n        visible: false,\r\n        currentGroupIndex: 0\r\n    })\r\n  }\r\n onDeleteGroup=(groupIndex)=>{\r\n    this.setState({\r\n        visible: true,\r\n        currentGroupIndex: groupIndex\r\n    })\r\n }\r\n handleDeleteGroupSubmit=()=>{\r\n   \r\n    \r\n    const listGroups = this.state.listGroups.slice();\r\n\r\n    deleteGroup(listGroups[this.state.currentGroupIndex].id).then(response => {\r\n      listGroups.splice(this.state.currentGroupIndex,1);\r\n            this.setState({\r\n              listGroups: listGroups  ,\r\n                \r\n            });\r\n        notification.success({\r\n            message: 'Polling App',\r\n            description: response.message || 'Remove User Succesfully!'\r\n        });\r\n\r\n    }).catch(error => {\r\n        if (error.status === 401) {\r\n            this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n        } else {\r\n            notification.error({\r\n                message: 'Polling App',\r\n                description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n            });\r\n        }\r\n    });\r\n    \r\n    this.setState({\r\n        visible: false,\r\n    })\r\n }\r\n handleCancelLeave=()=>{\r\n  this.setState({\r\n    visibleLeave: false,\r\n      currentGroupIndex: 0\r\n  })\r\n}\r\nonLeaveGroup=(groupIndex)=>{\r\n  this.setState({\r\n    visibleLeave: true,\r\n      currentGroupIndex: groupIndex\r\n  })\r\n}\r\nhandleLeaveGroupSubmit=()=>{\r\n \r\n  \r\n  const listGroups = this.state.listGroups.slice();\r\n\r\n  leaveGroup(listGroups[this.state.currentGroupIndex].id).then(response => {\r\n    listGroups.splice(this.state.currentGroupIndex,1);\r\n          this.setState({\r\n            listGroups: listGroups  ,\r\n              \r\n          });\r\n      notification.success({\r\n          message: 'Polling App',\r\n          description: response.message || 'Remove User Succesfully!'\r\n      });\r\n\r\n  }).catch(error => {\r\n      if (error.status === 401) {\r\n          this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n      } else {\r\n          notification.error({\r\n              message: 'Polling App',\r\n              description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n          });\r\n      }\r\n  });\r\n  \r\n  this.setState({\r\n    visibleLeave: false,\r\n  })\r\n}\r\n  render() {\r\n    const { location } = this.props;\r\n    //console.log(location.pathname)\r\n    //console.log(this.props.key);\r\n    const groupView = [];\r\n    this.state.listGroups.forEach((group, groupIndex) => {\r\n      groupView.push(<Menu.Item key={\"/groups/\" + group.code} style={{whiteSpace: 'normal', height: 'auto'}}><Link to={\"/groups/\" + group.code}></Link><span>{group.name}</span><Popover placement=\"right\" title=\"Tùy chọn\" content={<ManagerGroup code={group.code} onLeaveGroup={this.onLeaveGroup} onDeleteGroup={this.onDeleteGroup} currentUsername={this.props.currentUser.username} groupAdminUsername={group.usernameAdmin} groupIndex={groupIndex}/>} trigger=\"click\">\r\n        <Button type=\"text\" shape=\"circle\" style={{ float: \"right\" }} icon={<MoreOutlined />}></Button>\r\n      </Popover></Menu.Item>)\r\n    })\r\n    //console.log(this.state.listGroups)\r\n    return (\r\n      <><Modal\r\n      title=\"Confirm your action\"\r\n      visible={this.state.visible}\r\n      onOk={this.handleDeleteGroupSubmit}\r\n      onCancel={this.handleCancel}\r\n      footer={[\r\n          <Button key=\"back\" onClick={this.handleCancel}>\r\n              No\r\n          </Button>,\r\n          <Button key=\"submit\" type=\"primary\" onClick={this.handleDeleteGroupSubmit}>\r\n              Yes\r\n          </Button>,\r\n      ]}\r\n  ><p>Are you want delete this group?</p>\r\n  </Modal>\r\n  <Modal\r\n      title=\"Confirm your action\"\r\n      visible={this.state.visibleLeave}\r\n      onOk={this.handleLeaveGroupSubmit}\r\n      onCancel={this.handleCancelLeave}\r\n      footer={[\r\n          <Button key=\"back\" onClick={this.handleCancelLeave}>\r\n              No\r\n          </Button>,\r\n          <Button key=\"submit\" type=\"primary\" onClick={this.handleLeaveGroupSubmit}>\r\n              Yes\r\n          </Button>,\r\n      ]}\r\n  ><p>Are you want leave this group?</p>\r\n  </Modal>\r\n          <Menu theme=\"light\" mode=\"inline\" className=\"scrollbox-content\" selectedKeys={[location.pathname]}>\r\n            <Menu.Item key=\"/group/new\" icon={<PlusOutlined />}> <Link to=\"/group/new\"> Tạo Group</Link></Menu.Item>\r\n            <Menu.Divider />\r\n            <Menu.ItemGroup key=\"g1\" title=\"Nhóm đã tham gia\">\r\n\r\n              {groupView}\r\n\r\n              {/* {this.state.isloading && (\r\n                        <div className=\"demo-loading-container\">\r\n                            <LoadingIndicator />\r\n                        </div>\r\n                    )} */}\r\n\r\n\r\n            </Menu.ItemGroup>\r\n            {!this.state.last&&<Menu.Item key=\"more\" onClick={()=>this.loadListGroup(this.state.page+1)}>Load more</Menu.Item>}\r\n          </Menu>\r\n       </>\r\n    );\r\n  }\r\n\r\n}\r\nfunction ManagerGroup(props) {\r\n  return (\r\n      <div>\r\n          {props.currentUsername===props.groupAdminUsername&&<Link to={\"/editgroup/\"+props.code}><Button type=\"primary\" style={{marginBottom:\"10px\"}} block>Edit</Button></Link>}\r\n          {props.currentUsername===props.groupAdminUsername?<Button danger block onClick={() => props.onDeleteGroup(props.groupIndex)}>Delete Group</Button>:<Button danger block onClick={() => props.onLeaveGroup(props.groupIndex)}>Leave</Button>}\r\n      </div>\r\n  );\r\n}\r\nexport default withRouter(SiderMenu);","import React, { Component } from 'react';\r\nimport { editGroup, getGroup, getListUserForAddGroup, deleteUserGroup } from '../util/APIUtils';\r\n//import { API_BASE_URL} from '../constants';\r\n//import './NewGroup.css';\r\nimport {\r\n    NAME_MIN_LENGTH, NAME_MAX_LENGTH,\r\n    USER_MAX_LENGTH\r\n} from '../constants';\r\nimport {\r\n    SearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Form, Input, Button, notification, Mentions, Select, Space, Avatar, Table, Modal } from 'antd';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst { getMentions } = Mentions;\r\n\r\nclass EditGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: {\r\n                value: '',\r\n                validateStatus: 'success'\r\n            },\r\n            code: {\r\n                value: ''\r\n            },\r\n            users: [],\r\n            usersSend: [],\r\n            group: {\r\n                member: []\r\n            },\r\n            loading: false,\r\n            visible: false,\r\n            currentUserId: 0,\r\n            currentUserIndex: 0\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.isFormInvalid = this.isFormInvalid.bind(this);\r\n    }\r\n    validateUsers = (mentions) => {\r\n        //console.log(mentions.length)\r\n        if (mentions.length === 0) {\r\n            return {\r\n                validateStatusUser: 'error',\r\n                errorMsgUser: 'Please enter a username!'\r\n            }\r\n        } else if (mentions.length > USER_MAX_LENGTH) {\r\n            return {\r\n                validateStatusUser: 'error',\r\n                errorMsgUser: `User is too much (Maximum ${USER_MAX_LENGTH} user allowed)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatusUser: 'success',\r\n                errorMsgUser: null\r\n            }\r\n        }\r\n    }\r\n    componentDidUpdate(nextProps) {\r\n        //console.log(\"didupdate\")\r\n        if (this.props.match.params.code !== nextProps.match.params.code) {\r\n            // Reset State \r\n            //console.log(\"next\")\r\n            // if (this._isMounted) {\r\n            this.setState({\r\n                name: {\r\n                    value: '',\r\n                    validateStatus: 'success'\r\n                },\r\n                code: {\r\n                    value: ''\r\n                },\r\n                users: [],\r\n                usersSend: [],\r\n                group: {\r\n                    member: []\r\n                },\r\n                loading: false\r\n            });\r\n            this.setState({\r\n                code: {\r\n                    value: this.props.match.params.code\r\n                }\r\n            })\r\n            this.loadGroup(this.props.match.params.code);\r\n\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            code: {\r\n                value: this.props.match.params.code\r\n            }\r\n        })\r\n        this.loadGroup(this.props.match.params.code);\r\n\r\n    }\r\n    loadGroup = (code) => {\r\n        let promise;\r\n        promise = getGroup(code);\r\n\r\n        if (!promise) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        promise\r\n            .then(response => {\r\n                // let users = response.filter((user) => {\r\n                //     var check = true;\r\n                //     this.state.usersSend.forEach((userSend) => {\r\n                //         if (user.username == userSend) {\r\n                //             check = false;\r\n                //         }\r\n                //     })\r\n                //     return check;\r\n                // })\r\n\r\n                const name = this.state.name;\r\n                this.setState({\r\n                    group: response,\r\n                    name: {\r\n                        ...name,\r\n                        value: response.name\r\n                    },\r\n                    loading: false,\r\n                })\r\n\r\n\r\n\r\n            }).catch(error => {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            });\r\n\r\n    }\r\n    loadUserList = (key) => {\r\n        let promise;\r\n        promise = getListUserForAddGroup(key, this.state.code.value);\r\n\r\n        if (!promise) {\r\n            return;\r\n        }\r\n        promise\r\n            .then(response => {\r\n                let users = response.filter((user) => {\r\n                    var check = true;\r\n                    this.state.usersSend.forEach((userSend) => {\r\n                        if (user.username === userSend) {\r\n                            check = false;\r\n                        }\r\n                    })\r\n                    return check;\r\n                })\r\n                this.setState({\r\n                    users: users,\r\n                    loading: false,\r\n                })\r\n\r\n\r\n\r\n            }).catch(error => {\r\n                // this.setState({\r\n                //     users: response\r\n                // })\r\n            });\r\n\r\n    }\r\n    handleInputChange(event, validationFun) {\r\n        const target = event.target;\r\n        const inputName = target.name;\r\n        const inputValue = target.value;\r\n        //console.log(this.state.code.value)\r\n        this.setState({\r\n            [inputName]: {\r\n                value: inputValue,\r\n                ...validationFun(inputValue)\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit() {\r\n        const groupData = {\r\n            name: this.state.name.value,\r\n            code: this.state.code.value,\r\n            usersUsername: this.state.usersSend\r\n        };\r\n        editGroup(groupData)\r\n            .then(response => {\r\n\r\n                notification.success({\r\n                    message: 'Polling App',\r\n                    description: \"Thank you! You're successfully created group!\",\r\n                });\r\n                this.props.history.push(\"/groups/\" + this.state.code.value);\r\n            }).catch(error => {\r\n                notification.error({\r\n                    message: 'Polling App',\r\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                });\r\n            });\r\n    }\r\n\r\n    isFormInvalid() {\r\n        return !(this.state.name.validateStatus === 'success');\r\n    }\r\n    onSearch = search => {\r\n        this.setState({ search, loading: !!search });\r\n        //console.log('Search:', search);\r\n        this.loadUserList(search);\r\n    }\r\n    onSelect = (value) => {\r\n        const mentions = getMentions(value);\r\n        //console.log(mentions)\r\n        const usersSend = [];\r\n        mentions.forEach((mention) => {\r\n            usersSend.push(mention.value);\r\n        })\r\n        this.setState({\r\n            usersSend: usersSend,\r\n            ...this.validateUsers(usersSend)\r\n        })\r\n        //console.log(this.state.usersSend);\r\n    }\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                // <Highlighter\r\n                //   highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                //   searchWords={[this.state.searchText]}\r\n                //   autoEscape\r\n                //   textToHighlight={text ? text.toString() : ''}\r\n                // />\r\n                text\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n    handleCancel = () => {\r\n        this.setState({\r\n            visible: false,\r\n            currentUserId: 0,\r\n            currentUserIndex: 0\r\n        })\r\n    }\r\n    onDeleteUser = (userId, userIndex) => {\r\n        //console.log(userId)\r\n        //console.log(userIndex)\r\n        this.setState({\r\n            visible: true,\r\n            currentUserId: userId,\r\n            currentUserIndex: userIndex\r\n        })\r\n    }\r\n    onChange = (pagination, filters, sorter, extra) => {\r\n        //console.log('params', pagination, filters, sorter, extra);\r\n    }\r\n    handleDeleteUserSubmit = () => {\r\n\r\n\r\n        const group = this.state.group;\r\n        //console.log(group);\r\n        //console.log(this.state.currentUserId);\r\n        //console.log(this.state.currentUserIndex);\r\n        const groupMem = this.state.group.member.slice();\r\n        // console.log(this.state.group.member);\r\n        // groupMem.splice(this.state.currentUserIndex,1);\r\n        // const newgroup = [...groupMem]\r\n        // console.log(newgroup);\r\n        deleteUserGroup(group.id, this.state.currentUserId).then(response => {\r\n            groupMem.splice(this.state.currentUserIndex, 1);\r\n            group.member = groupMem;\r\n            //console.log(group);\r\n            this.setState({\r\n                group: group,\r\n\r\n            });\r\n            notification.success({\r\n                message: 'Polling App',\r\n                description: response.message || 'Remove User Succesfully!'\r\n            });\r\n\r\n        }).catch(error => {\r\n            if (error.status === 401) {\r\n                this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to vote');\r\n            } else {\r\n                notification.error({\r\n                    message: 'Polling App',\r\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                });\r\n            }\r\n        });\r\n        this.setState({\r\n            visible: false,\r\n        })\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: 'Mã',\r\n                dataIndex: 'id',\r\n                key: \"id\",\r\n                sorter: {\r\n                    compare: (a, b) => a.id - b.id,\r\n                    multiple: 4,\r\n                },\r\n                width: 100,\r\n                fixed: 'left',\r\n                ...this.getColumnSearchProps('id'),\r\n            },\r\n            {\r\n                title: 'Username',\r\n                dataIndex: 'username',\r\n                key: \"username\",\r\n                sorter: {\r\n                    compare: (a, b) => a.username.length - b.username.length,\r\n                    multiple: 3,\r\n                },\r\n                width: 150,\r\n                fixed: 'left',\r\n                ...this.getColumnSearchProps('username'),\r\n            },\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: \"name\",\r\n                sorter: {\r\n                    compare: (a, b) => a.name.length - b.name.length,\r\n                    multiple: 2,\r\n                },\r\n                width: 100,\r\n                ...this.getColumnSearchProps('name'),\r\n            },\r\n            {\r\n                title: 'Avatar',\r\n                dataIndex: 'photo',\r\n                key: \"photo\",\r\n                width: 100,\r\n                render: photo => photo == null ? \"No Image\" : <Avatar\r\n                    //src={API_BASE_URL+\"/file/getImage/\" + photo} \r\n                    src={\"https://drive.google.com/uc?export=view&id=\"+photo}\r\n                    >\r\n                </Avatar>,\r\n            },\r\n            {\r\n                title: 'Action',\r\n                dataIndex: 'action',\r\n                key: \"action\",\r\n                width: 90,\r\n                fixed: 'right',\r\n                render: (num, record, index) => record.username !== this.state.group.usernameAdmin && <Button type=\"danger\" onClick={() => this.onDeleteUser(record.id, index)}>Delete</Button>,\r\n            },\r\n        ];\r\n        // const mem = [...this.state.group.member];\r\n        // const data = [];\r\n        // this.state.group.member.forEach((mem) => {\r\n        //     data.push({\r\n        //         ...mem,\r\n        //         key: mem.id\r\n        //     })\r\n        // })\r\n        //console.log(this.state.group.member);\r\n        //console.log(this.state.group)\r\n        return (\r\n            <>\r\n                <Modal\r\n                    title=\"Confirm your action\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleDeleteUserSubmit}\r\n                    onCancel={this.handleCancel}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.handleCancel}>\r\n                            No\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" onClick={this.handleDeleteUserSubmit}>\r\n                            Yes\r\n                        </Button>,\r\n                    ]}\r\n                ><p>Are you want delete this user?</p>\r\n                </Modal>\r\n                <div className=\"signup-container\">\r\n                    <h1 className=\"page-title\">Edit Group</h1>\r\n                    <div className=\"signup-content\">\r\n                        <Form onFinish={this.handleSubmit} className=\"signup-form\">\r\n                            <FormItem\r\n                                label=\"Full Name\"\r\n                                validateStatus={this.state.name.validateStatus}\r\n                                help={this.state.name.errorMsg}>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    name=\"name\"\r\n                                    autoComplete=\"off\"\r\n                                    placeholder=\"Group name\"\r\n                                    value={this.state.name.value}\r\n                                    onChange={(event) => this.handleInputChange(event, this.validateName)} />\r\n                            </FormItem>\r\n                            <FormItem label=\"Code\">\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    name=\"code\"\r\n                                    autoComplete=\"off\"\r\n                                    placeholder=\"A unique code\"\r\n                                    value={this.state.code.value}\r\n                                    disabled\r\n                                    onChange={(event) => this.handleInputChange(event)} />\r\n                            </FormItem>\r\n                            <FormItem label=\"Thêm thành viên: \" validateStatus={this.state.validateStatusUser}\r\n                                help={this.state.errorMsgUser}><Mentions style={{ width: '100%' }} placeholder=\"Nhập '@' để tag bạn bè\" loading={this.state.loading} onSearch={this.onSearch} onChange={this.onSelect}>\r\n                                    {this.state.users.map(({ id, username, name }) => (\r\n                                        <Option key={id} value={username} className=\"antd-demo-dynamic-option\">\r\n                                            <span>{name} @{username}</span>\r\n                                        </Option>\r\n                                    ))}\r\n                                </Mentions></FormItem>\r\n                            <FormItem>\r\n                                <Button type=\"primary\"\r\n                                    htmlType=\"submit\"\r\n                                    size=\"large\"\r\n                                    className=\"signup-form-button\"\r\n                                    disabled={this.isFormInvalid()}>Update</Button>\r\n                            </FormItem>\r\n                        </Form>\r\n                    </div>\r\n\r\n                </div>\r\n                <Table columns={columns} dataSource={this.state.group.member} rowKey=\"id\" onChange={this.onChange} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    // Validation Functions\r\n\r\n    validateName = (name) => {\r\n        if (name.length < NAME_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (name.length > NAME_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n            };\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default EditGroup;","import React, { Component } from 'react';\r\nimport { changePassword } from '../util/APIUtils';\r\n//import './Signup.css';\r\nimport { \r\n    PASSWORD_MIN_LENGTH, PASSWORD_MAX_LENGTH\r\n} from '../constants';\r\nimport { LockOutlined } from '@ant-design/icons';\r\nimport { Form, Input, Button, notification } from 'antd';\r\nconst FormItem = Form.Item;\r\n\r\nclass ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newpassword: {\r\n                value: ''\r\n            },\r\n            currentpassword: {\r\n                value: ''\r\n            }\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.isFormInvalid = this.isFormInvalid.bind(this);\r\n    }\r\n\r\n    handleInputChange(event, validationFun) {\r\n        const target = event.target;\r\n        const inputName = target.name;        \r\n        const inputValue = target.value;\r\n\r\n        this.setState({\r\n            [inputName] : {\r\n                value: inputValue,\r\n                ...validationFun(inputValue)\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit() {\r\n    \r\n        const changePasswordRequest = {\r\n            newPassword: this.state.newpassword.value,\r\n            currentPassword: this.state.currentpassword.value\r\n        };\r\n        changePassword(changePasswordRequest)\r\n        .then(response => {\r\n            notification.success({\r\n                message: 'Polling App',\r\n                description: \"Thank you! You're successfully update password!\",\r\n            });          \r\n            this.props.history.push(\"/users/\"+this.props.currentUser.username);\r\n        }).catch(error => {\r\n            notification.error({\r\n                message: 'Polling App',\r\n                description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n            });\r\n        });\r\n    }\r\n\r\n    isFormInvalid() {\r\n        return !(\r\n            this.state.newpassword.validateStatus === 'success' &&\r\n            this.state.currentpassword.validateStatus === 'success'\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signup-container\">\r\n                <h1 className=\"page-title\">Change Password</h1>\r\n                <div className=\"signup-content\">\r\n                    <Form onFinish={this.handleSubmit} className=\"signup-form\">\r\n                        <FormItem \r\n                        label=\"Current Password\"\r\n                            validateStatus={this.state.currentpassword.validateStatus}\r\n                            help={this.state.currentpassword.errorMsg}>\r\n                            <Input.Password \r\n                        prefix={<LockOutlined />}\r\n                                size=\"large\"\r\n                                name=\"currentpassword\"\r\n                                type=\"password\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"Your curent password\"\r\n                                value={this.state.currentpassword.value} \r\n                                onChange={(event) => this.handleInputChange(event, this.validatePassword)} />    \r\n                        </FormItem>\r\n                        <FormItem \r\n                        label=\"New Password\"\r\n                            validateStatus={this.state.newpassword.validateStatus}\r\n                            help={this.state.newpassword.errorMsg}>\r\n                            <Input.Password \r\n                        prefix={<LockOutlined />}\r\n                                size=\"large\"\r\n                                name=\"newpassword\" \r\n                                type=\"password\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"Your new password\" \r\n                                value={this.state.newpassword.value} \r\n                                onChange={(event) => this.handleInputChange(event, this.validatePassword)} />    \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\" \r\n                                htmlType=\"submit\" \r\n                                size=\"large\" \r\n                                className=\"signup-form-button\"\r\n                                disabled={this.isFormInvalid()}>Update Password</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    validatePassword = (password) => {\r\n        if(password.length < PASSWORD_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Password is too short (Minimum ${PASSWORD_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (password.length > PASSWORD_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `Password is too long (Maximum ${PASSWORD_MAX_LENGTH} characters allowed.)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n            };            \r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default ChangePassword;","import React, { Component } from 'react';\r\nimport { confirmMail } from '../util/APIUtils';\r\n// import './Login.css';\r\n\r\nimport { Form, Input, Button, notification } from 'antd';\r\nconst FormItem = Form.Item;\r\n\r\n\r\nclass Verification extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    handleSubmit = values => {\r\n        console.log(values)\r\n        confirmMail(values.code)\r\n            .then(response => {\r\n                notification.success({\r\n                    message: 'Polling App',\r\n                    description: 'Your accout is Active. Welcome to website!'\r\n                });   \r\n                this.props.history.push(\"/login\");\r\n            }).catch(error => {\r\n                if(error.status === 401) {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: 'Your Username or Password is incorrect. Please try again!'\r\n                    });                    \r\n                } else {\r\n                    notification.error({\r\n                        message: 'Polling App',\r\n                        description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                    });                                            \r\n                }\r\n            });\r\n            }\r\n\r\n    render() {\r\n        //const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"login-container\">\r\n                <h1 className=\"page-title\">Verification</h1>\r\n                <div className=\"login-content\">\r\n            <Form onFinish={this.handleSubmit} className=\"login-form\">\r\n                <FormItem name=\"code\" rules =  {[{ required: true, message: 'Please input your verification code!' }]}>\r\n                    <Input \r\n                        size=\"large\"\r\n                        name=\"code\" \r\n                        autoComplete=\"code\"\r\n                        placeholder=\"Verification Code\" />    \r\n                </FormItem>\r\n                <FormItem>\r\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\" className=\"login-form-button\">Verification</Button>\r\n                </FormItem>\r\n            </Form>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Verification;","import React, {  useState, useEffect } from 'react';\nimport './App.css';\nimport {\n  Route,\n  withRouter,\n  Switch,\n  Link\n} from 'react-router-dom';\nimport { getCurrentUser,getTopTag } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../constants';\nimport PostList from '../poll/PostList';\nimport NewPost from '../poll/NewPost';\nimport Login from '../user/login/Login';\nimport Signup from '../user/signup/Signup';\nimport Profile from '../user/profile/Profile';\nimport AppHeader from '../common/AppHeader';\nimport NotFound from '../common/NotFound';\nimport LoadingIndicator from '../common/LoadingIndicator';\nimport PrivateRoute from '../common/PrivateRoute';\nimport {RedoOutlined} from '@ant-design/icons';\nimport { notification,Affix,Card, Button } from 'antd';\nimport { Layout } from 'antd';\nimport NewGroup from '../group/NewGroup';\nimport SiderMenu from '../common/SiderMenu';\nimport EditGroup from '../group/EditGroup';\nimport ChangePassword from '../user/ChangePassword';\nimport Verification from '../user/Verification';\nconst { Header, Sider, Content } = Layout;\nconst App = (props) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [toptag,setTopTag]=useState([]);\n  notification.config({\n    placement: 'topRight',\n    top: 70,\n    duration: 3,\n  });\n\n  useEffect(() => {\n    loadCurrentUser();\n    loadTopTag();\n  }, [])\n  const readNoti = function(){\n    currentUser.notificationCount--;\n    setCurrentUser(currentUser);\n  }\n  const loadCurrentUser = function () {\n    setIsLoading(true);\n    getCurrentUser()\n      .then(response => {\n        setCurrentUser(response);\n        setIsAuthenticated(true);\n        setIsLoading(false);\n      }).catch(error => {\n        setIsLoading(false);\n      });\n  }\n  const loadTopTag = function () {\n    getTopTag()\n      .then(response => {\n        setTopTag(response);\n      }).catch(error => {\n        setTopTag([]);\n      });\n  }\n\n  const handleLogout = function (redirectTo = \"/\", notificationType = \"success\", description = \"You're successfully logged out.\") {\n    localStorage.removeItem(ACCESS_TOKEN);\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n\n    props.history.push(redirectTo);\n\n    notification[notificationType]({\n      message: 'Polling App',\n      description: description,\n    });\n  }\n\n  const handleLogin = function () {\n    notification.success({\n      message: 'Polling App',\n      description: \"You're successfully logged in.\",\n    });\n    loadCurrentUser();\n    props.history.push(\"/\");\n  }\n  if (isLoading) {\n    return <LoadingIndicator />\n  }\n  const tagViews = [];\n  toptag.forEach((tag,index)=>{\n    const uri = encodeURIComponent(tag.name);\n    tagViews.push(<p key={index}><Link to={\"/search/\"+uri} key={index}>{tag.name}</Link>  <span style={{float:'right'}}>{tag.count}</span></p>)\n  })\n  return (\n<Layout className=\"app-container\">\n      <Header>\n      <AppHeader \n      readNoti = {readNoti}\n      isAuthenticated={isAuthenticated}\n        currentUser={currentUser}\n        onLogout={handleLogout} /></Header>\n      <Layout>\n        <Sider\n          style={{\n            height: \"100vh\",\n            position: \"fixed\",\n            maxHeight: \"calc(100% - 64px)\",\n            left: 0\n          }}\n          className=\"sider scrollbox scrollbox_delayed\"\n        >\n          {isAuthenticated&&<SiderMenu key={props.location.pathname===\"/group/new\"?1:props.location.pathname.indexOf(\"/editgroup/\")!==-1?2:3} currentUser={currentUser} isAuthenticated={isAuthenticated}/>}\n        </Sider>\n        <Content className=\"app-content\">\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\"\n                render={(props) => <PostList isAuthenticated={isAuthenticated}\n                  currentUser={currentUser} handleLogout={handleLogout} type=\"HOME\" {...props} />}>\n              </Route>\n              <Route exact path=\"/poll-client\"\n                render={(props) => <PostList isAuthenticated={isAuthenticated}\n                  currentUser={currentUser} handleLogout={handleLogout} type=\"HOME\" {...props} />}>\n              </Route>\n              <Route path=\"/login\"\n                render={(props) => <Login onLogin={handleLogin} type=\"login\" {...props} />}></Route>\n                <Route path=\"/auth\"\n                render={(props) => <Verification onLogin={handleLogin} type=\"confirm\" {...props} />}></Route>\n              <Route path=\"/signup\" component={Signup}></Route>\n              <Route path=\"/users/:username\"\n                render={(props) => <Profile isAuthenticated={isAuthenticated} handleLogout={handleLogout} key={props.match.params.username} currentUser={currentUser} {...props} />}>\n              </Route>\n              <Route path=\"/post/:id\" authenticated={isAuthenticated}\n                render={(props) => <PostList isAuthenticated={isAuthenticated}\n                currentUser={currentUser} key={props.match.params.id} handleLogout={handleLogout} type=\"ONE_POST\" {...props} />}>\n              </Route>\n              <Route path=\"/search/:search\" authenticated={isAuthenticated}\n                render={(props) => <PostList isAuthenticated={isAuthenticated}\n                currentUser={currentUser} key={props.match.params.search} handleLogout={handleLogout} type=\"SEARCH_POST\" {...props} />}>\n              </Route>\n              <Route authenticated={isAuthenticated} path=\"/groups/:code\"\n                render={(props) => <PostList isAuthenticated={isAuthenticated}\n                currentUser={currentUser} handleLogout={handleLogout} type=\"GROUP\" {...props} />}>\n              </Route>\n              <PrivateRoute authenticated={isAuthenticated} path=\"/changepassword/:username\" currentUser={currentUser} component={ChangePassword} handleLogout={handleLogout}></PrivateRoute>\n              <PrivateRoute authenticated={isAuthenticated} path=\"/editgroup/:code\" component={EditGroup} handleLogout={handleLogout}></PrivateRoute>\n              <PrivateRoute authenticated={isAuthenticated} path=\"/poll/new\" component={NewPost} handleLogout={handleLogout}></PrivateRoute>\n              <PrivateRoute authenticated={isAuthenticated} path=\"/group/new\" component={NewGroup} handleLogout={handleLogout}></PrivateRoute>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </div>\n        </Content>{isAuthenticated&&\n<Affix className=\"affix\" offsetTop={220}>\n        <Card title={\"Top \"+toptag.length+\" Tag rank\"} style={{ width: 300}} extra={<Button type=\"text\" shape=\"circle\" className=\"poll-info\" icon={<RedoOutlined />} onClick={loadTopTag}></Button>}>\n      {tagViews}\n    </Card>\n        </Affix>}\n      </Layout>\n    </Layout>\n  );\n}\nexport default withRouter(App);\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './app/App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n// // import React from 'react';\n// // import ReactDOM from 'react-dom';\n// // import './index.css';\n// // import App from './App';\n// // import * as serviceWorker from './serviceWorker';\n// // import { BrowserRouter as Router } from 'react-router-dom';\n\n// // ReactDOM.render(\n// //     <Router>\n// //         <App />\n// //     </Router>, \n// //     document.getElementById('root')\n// // );\n\n// // serviceWorker.unregister();"],"sourceRoot":""}